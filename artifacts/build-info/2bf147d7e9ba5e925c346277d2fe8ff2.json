{
	"id": "2bf147d7e9ba5e925c346277d2fe8ff2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"KrunalTokenV1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract KrunalTokenV1 is Initializable, ERC20Upgradeable, OwnableUpgradeable {\n    uint256 private _cap;\n\n    function initialize(string memory name, string memory symbol, uint256 cap_) public initializer {\n        __ERC20_init(name, symbol);\n        __Ownable_init(msg.sender);\n        require(cap_ > 0, \"Cap must be > 0\");\n        _cap = cap_;\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        require(totalSupply() + amount <= _cap, \"Cap exceeded\");\n        _mint(to, amount);\n    }\n\n    function cap() public view returns (uint256) {\n        return _cap;\n    }\n\n    function updateCap(uint256 newCap) public onlyOwner {\n        require(newCap >= totalSupply(), \"New cap < supply\");\n        _cap = newCap;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"KrunalTokenV1.sol": {
				"KrunalTokenV1": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "cap_",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newCap",
									"type": "uint256"
								}
							],
							"name": "updateCap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"KrunalTokenV1.sol\":290:1037  contract KrunalTokenV1 is Initializable, ERC20Upgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"KrunalTokenV1.sol\":290:1037  contract KrunalTokenV1 is Initializable, ERC20Upgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb119490e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa7d68896\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"KrunalTokenV1.sol\":812:885  function cap() public view returns (uint256) {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"KrunalTokenV1.sol\":648:806  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"KrunalTokenV1.sol\":891:1035  function updateCap(uint256 newCap) public onlyOwner {... */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4453:4631  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"KrunalTokenV1.sol\":401:642  function initialize(string memory name, string memory symbol, uint256 cap_) public initializer {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2742:2755  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2789  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2808  _getERC20Storage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2810  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2828  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2834  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2820:2834  return $._name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5264:5268  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5280:5293  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5296:5308  _msgSender() */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5296:5306  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5296:5308  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5280:5308  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5349  _approve(owner, spender, value) */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5327:5332  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5334:5341  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5343:5348  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5326  _approve */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5349  _approve(owner, spender, value) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5366:5370  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5359:5370  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3929:3936  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3970  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3973:3991  _getERC20Storage() */\n      tag_100\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3973:3989  _getERC20Storage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3973:3991  _getERC20Storage() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3991  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4009  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4022  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4001:4022  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6056:6060  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6072:6087  address spender */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6090:6102  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6090:6100  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6090:6102  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6072:6102  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6149  _spendAllowance(from, spender, value) */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6128:6132  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6134:6141  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6143:6148  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6127  _spendAllowance */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6149  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6185  _transfer(from, to, value) */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6169:6173  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6175:6177  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6179:6184  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6168  _transfer */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6185  _transfer(from, to, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6202:6206  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6195:6206  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3784:3789  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3808:3810  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3801:3810  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"KrunalTokenV1.sol\":812:885  function cap() public view returns (uint256) {... */\n    tag_46:\n        /* \"KrunalTokenV1.sol\":848:855  uint256 */\n      0x00\n        /* \"KrunalTokenV1.sol\":874:878  _cap */\n      sload(0x00)\n        /* \"KrunalTokenV1.sol\":867:878  return _cap */\n      swap1\n      pop\n        /* \"KrunalTokenV1.sol\":812:885  function cap() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"KrunalTokenV1.sol\":648:806  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"KrunalTokenV1.sol\":751:755  _cap */\n      sload(0x00)\n        /* \"KrunalTokenV1.sol\":741:747  amount */\n      dup2\n        /* \"KrunalTokenV1.sol\":725:738  totalSupply() */\n      tag_113\n        /* \"KrunalTokenV1.sol\":725:736  totalSupply */\n      tag_33\n        /* \"KrunalTokenV1.sol\":725:738  totalSupply() */\n      jump\t// in\n    tag_113:\n        /* \"KrunalTokenV1.sol\":725:747  totalSupply() + amount */\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"KrunalTokenV1.sol\":725:755  totalSupply() + amount <= _cap */\n      gt\n      iszero\n        /* \"KrunalTokenV1.sol\":717:772  require(totalSupply() + amount <= _cap, \"Cap exceeded\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"KrunalTokenV1.sol\":782:799  _mint(to, amount) */\n      tag_119\n        /* \"KrunalTokenV1.sol\":788:790  to */\n      dup3\n        /* \"KrunalTokenV1.sol\":792:798  amount */\n      dup3\n        /* \"KrunalTokenV1.sol\":782:787  _mint */\n      tag_120\n        /* \"KrunalTokenV1.sol\":782:799  _mint(to, amount) */\n      jump\t// in\n    tag_119:\n        /* \"KrunalTokenV1.sol\":648:806  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4152:4159  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4193  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4196:4214  _getERC20Storage() */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4196:4212  _getERC20Storage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4196:4214  _getERC20Storage() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4214  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4232  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4242  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4251  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4250  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4251  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4224:4251  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3001:3014  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3048  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3067  _getERC20Storage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3069  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3087  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3095  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3079:3095  return $._symbol */\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_89\n      jump\t// in\n    tag_133:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_89\n      jump\t// in\n    tag_134:\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"KrunalTokenV1.sol\":891:1035  function updateCap(uint256 newCap) public onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"KrunalTokenV1.sol\":971:984  totalSupply() */\n      tag_141\n        /* \"KrunalTokenV1.sol\":971:982  totalSupply */\n      tag_33\n        /* \"KrunalTokenV1.sol\":971:984  totalSupply() */\n      jump\t// in\n    tag_141:\n        /* \"KrunalTokenV1.sol\":961:967  newCap */\n      dup2\n        /* \"KrunalTokenV1.sol\":961:984  newCap >= totalSupply() */\n      lt\n      iszero\n        /* \"KrunalTokenV1.sol\":953:1005  require(newCap >= totalSupply(), \"New cap < supply\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"KrunalTokenV1.sol\":1022:1028  newCap */\n      dup1\n        /* \"KrunalTokenV1.sol\":1015:1019  _cap */\n      0x00\n        /* \"KrunalTokenV1.sol\":1015:1028  _cap = newCap */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"KrunalTokenV1.sol\":891:1035  function updateCap(uint256 newCap) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4453:4631  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4522:4526  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4538:4551  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4554:4566  _msgSender() */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4554:4564  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4554:4566  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4538:4566  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4603  _transfer(owner, to, value) */\n      tag_147\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4586:4591  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4593:4595  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4597:4602  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4585  _transfer */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4603  _transfer(owner, to, value) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4620:4624  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4613:4624  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4453:4631  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"KrunalTokenV1.sol\":401:642  function initialize(string memory name, string memory symbol, uint256 cap_) public initializer {... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_150\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_151\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_152\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_153\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_155:\n        /* \"KrunalTokenV1.sol\":506:532  __ERC20_init(name, symbol) */\n      tag_157\n        /* \"KrunalTokenV1.sol\":519:523  name */\n      dup9\n        /* \"KrunalTokenV1.sol\":525:531  symbol */\n      dup9\n        /* \"KrunalTokenV1.sol\":506:518  __ERC20_init */\n      tag_158\n        /* \"KrunalTokenV1.sol\":506:532  __ERC20_init(name, symbol) */\n      jump\t// in\n    tag_157:\n        /* \"KrunalTokenV1.sol\":542:568  __Ownable_init(msg.sender) */\n      tag_159\n        /* \"KrunalTokenV1.sol\":557:567  msg.sender */\n      caller\n        /* \"KrunalTokenV1.sol\":542:556  __Ownable_init */\n      tag_160\n        /* \"KrunalTokenV1.sol\":542:568  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_159:\n        /* \"KrunalTokenV1.sol\":593:594  0 */\n      0x00\n        /* \"KrunalTokenV1.sol\":586:590  cap_ */\n      dup7\n        /* \"KrunalTokenV1.sol\":586:594  cap_ > 0 */\n      gt\n        /* \"KrunalTokenV1.sol\":578:614  require(cap_ > 0, \"Cap must be > 0\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"KrunalTokenV1.sol\":631:635  cap_ */\n      dup6\n        /* \"KrunalTokenV1.sol\":624:628  _cap */\n      0x00\n        /* \"KrunalTokenV1.sol\":624:635  _cap = cap_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"KrunalTokenV1.sol\":401:642  function initialize(string memory name, string memory symbol, uint256 cap_) public initializer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4769:4776  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4810  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4813:4831  _getERC20Storage() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4813:4829  _getERC20Storage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4813:4831  _getERC20Storage() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4831  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4849  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4861  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4862:4867  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4877  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4869:4876  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4877  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4841:4877  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_170\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9982:10110  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10103  _approve(owner, spender, value, true) */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10075:10080  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10082:10089  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10091:10096  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10098:10102  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10074  _approve */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10103  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9982:10110  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11726:12202  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11825:11849  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11877  allowance(owner, spender) */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11862:11867  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11869:11876  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11861  allowance */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11877  allowance(owner, spender) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11825:11877  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11927  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11891:11907  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11891:11927  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11887:12196  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11966:11971  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11947:11963  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11947:11971  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11943:12073  if (currentAllowance < value) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12025:12032  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12034:12050  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12052:12057  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11998:12058  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11943:12073  if (currentAllowance < value) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12171  _approve(owner, spender, currentAllowance - value, false) */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12123:12128  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12130:12137  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12163  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12139:12155  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12139:12163  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12165:12170  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12122  _approve */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12171  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11887:12196  if (currentAllowance < type(uint256).max) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11815:12202  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11726:12202  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6586:6886  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6685:6686  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6669:6687  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6669:6673  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6669:6687  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6665:6751  if (from == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6737:6738  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6710:6740  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6665:6751  if (from == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6779  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6764:6780  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6764:6766  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6764:6780  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6760:6846  if (to == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6832:6833  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6803:6835  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6760:6846  if (to == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6879  _update(from, to, value) */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6863:6867  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6869:6871  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6873:6878  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6862  _update */\n      tag_193\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6879  _update(from, to, value) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6586:6886  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_59\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_198\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8714:8922  function _mint(address account, uint256 value) internal {... */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8804  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8784:8805  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8784:8791  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8784:8805  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8871  if (account == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8857:8858  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8828:8860  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8871  if (account == address(0)) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8915  _update(address(0), account, value) */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8896:8897  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8900:8907  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8909:8914  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8887  _update */\n      tag_193\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8915  _update(address(0), account, value) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8714:8922  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_158:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2388:2393  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2395:2402  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2387  __ERC20_init_unchained */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10957:11444  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11087  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11090:11108  _getERC20Storage() */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11090:11106  _getERC20Storage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11090:11108  _getERC20Storage() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11108  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11139:11140  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11122:11141  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11122:11127  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11122:11141  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11118:11207  if (owner == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11193:11194  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11164:11196  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11118:11207  if (owner == address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11240  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11220:11241  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11220:11227  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11220:11241  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11216:11306  if (spender == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11292:11293  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11295  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11216:11306  if (spender == address(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11352  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11316  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11328  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11335  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11329:11334  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11335  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11344  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11336:11343  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11344  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11352  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11366:11375  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11362:11438  if (emitEvent) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11412:11419  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11405:11410  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11421:11426  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11362:11438  if (emitEvent) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11055:11444  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10957:11444  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7201:8371  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7308  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7311:7329  _getERC20Storage() */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7311:7327  _getERC20Storage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7311:7329  _getERC20Storage() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7329  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7359:7360  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7343:7361  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7343:7347  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7343:7361  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7497:7502  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7480  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7493  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7502  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_232\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_232:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n      jump(tag_233)\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7533:7552  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7556  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7566  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7572  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7567:7571  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7572  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7533:7572  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7604:7609  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7590:7601  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7590:7609  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7701  if (fromBalance < value) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7661:7665  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7667:7678  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7680:7685  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7636:7686  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7701  if (fromBalance < value) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7855:7860  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7841:7852  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7841:7860  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7822  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7832  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7838  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7833:7837  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7838  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7860  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7519:7885  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7913:7914  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7899:7915  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7899:7901  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7899:7915  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8080:8085  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8062:8063  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8062:8076  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8062:8085  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n      jump(tag_237)\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8299  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8276  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8286  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8290  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8287:8289  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8290  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8299  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8354:8356  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8348:8352  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8363  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      mload(0x40)\n      tag_238\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7276:8371  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7201:8371  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2550  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      tag_247\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2569  _getERC20Storage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2571  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2591:2596  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2582  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2588  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2596  $._name = name_ */\n      swap1\n      dup2\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2618:2625  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2607  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2615  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2625  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_250\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_250:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2518:2632  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_150\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_259:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_260:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_261:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_262:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_263:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_322\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_259\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":711:782   */\n      tag_323\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_260\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_324\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_261\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":881:910   */\n      tag_325\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_262\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_327\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_263\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_264:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_265:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_266:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_267:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_268:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_333\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_267\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_269:\n        /* \"#utility.yul\":1876:1900   */\n      tag_335\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_268\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_336:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_270:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_338\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_269\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_271:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_272:\n        /* \"#utility.yul\":2232:2256   */\n      tag_341\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_271\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_342:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_273:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_344\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_272\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_28:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_347\n      tag_265\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2525:2644   */\n    tag_346:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_348\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_270\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_349\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_273\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_274:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_275:\n        /* \"#utility.yul\":3089:3110   */\n      tag_352\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_274\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_31:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_354\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_275\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_276:\n        /* \"#utility.yul\":3426:3450   */\n      tag_356\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_271\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_35:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_358\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_276\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_38:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_361\n      tag_265\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3801:3920   */\n    tag_360:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_362\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_270\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_363\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_270\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_364\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_273\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_277:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_278:\n        /* \"#utility.yul\":4491:4513   */\n      tag_367\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_277\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_44:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_369\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_278\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_53:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_372\n      tag_265\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4822:4941   */\n    tag_371:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_373\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_270\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_279:\n        /* \"#utility.yul\":5168:5192   */\n      tag_375\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_268\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_61:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_377\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_279\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_67:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_380\n      tag_265\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5509:5628   */\n    tag_379:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_381\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_273\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:5885   */\n    tag_280:\n        /* \"#utility.yul\":5877:5878   */\n      0x00\n        /* \"#utility.yul\":5874:5875   */\n      0x00\n        /* \"#utility.yul\":5867:5879   */\n      revert\n        /* \"#utility.yul\":5891:6008   */\n    tag_281:\n        /* \"#utility.yul\":6000:6001   */\n      0x00\n        /* \"#utility.yul\":5997:5998   */\n      0x00\n        /* \"#utility.yul\":5990:6002   */\n      revert\n        /* \"#utility.yul\":6014:6194   */\n    tag_282:\n        /* \"#utility.yul\":6062:6139   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6059:6060   */\n      0x00\n        /* \"#utility.yul\":6052:6140   */\n      mstore\n        /* \"#utility.yul\":6159:6163   */\n      0x41\n        /* \"#utility.yul\":6156:6157   */\n      0x04\n        /* \"#utility.yul\":6149:6164   */\n      mstore\n        /* \"#utility.yul\":6183:6187   */\n      0x24\n        /* \"#utility.yul\":6180:6181   */\n      0x00\n        /* \"#utility.yul\":6173:6188   */\n      revert\n        /* \"#utility.yul\":6200:6481   */\n    tag_283:\n        /* \"#utility.yul\":6283:6310   */\n      tag_386\n        /* \"#utility.yul\":6305:6309   */\n      dup3\n        /* \"#utility.yul\":6283:6310   */\n      tag_262\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6275:6281   */\n      dup2\n        /* \"#utility.yul\":6271:6311   */\n      add\n        /* \"#utility.yul\":6413:6419   */\n      dup2\n        /* \"#utility.yul\":6401:6411   */\n      dup2\n        /* \"#utility.yul\":6398:6420   */\n      lt\n        /* \"#utility.yul\":6377:6395   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6365:6375   */\n      dup3\n        /* \"#utility.yul\":6362:6396   */\n      gt\n        /* \"#utility.yul\":6359:6421   */\n      or\n        /* \"#utility.yul\":6356:6444   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":6424:6442   */\n      tag_388\n      tag_282\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6356:6444   */\n    tag_387:\n        /* \"#utility.yul\":6464:6474   */\n      dup1\n        /* \"#utility.yul\":6460:6462   */\n      0x40\n        /* \"#utility.yul\":6453:6475   */\n      mstore\n        /* \"#utility.yul\":6243:6481   */\n      pop\n        /* \"#utility.yul\":6200:6481   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6487:6616   */\n    tag_284:\n        /* \"#utility.yul\":6521:6527   */\n      0x00\n        /* \"#utility.yul\":6548:6568   */\n      tag_390\n      tag_264\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6538:6568   */\n      swap1\n      pop\n        /* \"#utility.yul\":6577:6610   */\n      tag_391\n        /* \"#utility.yul\":6605:6609   */\n      dup3\n        /* \"#utility.yul\":6597:6603   */\n      dup3\n        /* \"#utility.yul\":6577:6610   */\n      tag_283\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6487:6616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6622:6930   */\n    tag_285:\n        /* \"#utility.yul\":6684:6688   */\n      0x00\n        /* \"#utility.yul\":6774:6792   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6766:6772   */\n      dup3\n        /* \"#utility.yul\":6763:6793   */\n      gt\n        /* \"#utility.yul\":6760:6816   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":6796:6814   */\n      tag_394\n      tag_282\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6760:6816   */\n    tag_393:\n        /* \"#utility.yul\":6834:6863   */\n      tag_395\n        /* \"#utility.yul\":6856:6862   */\n      dup3\n        /* \"#utility.yul\":6834:6863   */\n      tag_262\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6826:6863   */\n      swap1\n      pop\n        /* \"#utility.yul\":6918:6922   */\n      0x20\n        /* \"#utility.yul\":6912:6916   */\n      dup2\n        /* \"#utility.yul\":6908:6923   */\n      add\n        /* \"#utility.yul\":6900:6923   */\n      swap1\n      pop\n        /* \"#utility.yul\":6622:6930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6936:7084   */\n    tag_286:\n        /* \"#utility.yul\":7034:7040   */\n      dup3\n        /* \"#utility.yul\":7029:7032   */\n      dup2\n        /* \"#utility.yul\":7024:7027   */\n      dup4\n        /* \"#utility.yul\":7011:7041   */\n      calldatacopy\n        /* \"#utility.yul\":7075:7076   */\n      0x00\n        /* \"#utility.yul\":7066:7072   */\n      dup4\n        /* \"#utility.yul\":7061:7064   */\n      dup4\n        /* \"#utility.yul\":7057:7073   */\n      add\n        /* \"#utility.yul\":7050:7077   */\n      mstore\n        /* \"#utility.yul\":6936:7084   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7090:7515   */\n    tag_287:\n        /* \"#utility.yul\":7168:7173   */\n      0x00\n        /* \"#utility.yul\":7193:7259   */\n      tag_398\n        /* \"#utility.yul\":7209:7258   */\n      tag_399\n        /* \"#utility.yul\":7251:7257   */\n      dup5\n        /* \"#utility.yul\":7209:7258   */\n      tag_285\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7193:7259   */\n      tag_284\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":7184:7259   */\n      swap1\n      pop\n        /* \"#utility.yul\":7282:7288   */\n      dup3\n        /* \"#utility.yul\":7275:7280   */\n      dup2\n        /* \"#utility.yul\":7268:7289   */\n      mstore\n        /* \"#utility.yul\":7320:7324   */\n      0x20\n        /* \"#utility.yul\":7313:7318   */\n      dup2\n        /* \"#utility.yul\":7309:7325   */\n      add\n        /* \"#utility.yul\":7358:7361   */\n      dup5\n        /* \"#utility.yul\":7349:7355   */\n      dup5\n        /* \"#utility.yul\":7344:7347   */\n      dup5\n        /* \"#utility.yul\":7340:7356   */\n      add\n        /* \"#utility.yul\":7337:7362   */\n      gt\n        /* \"#utility.yul\":7334:7446   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":7365:7444   */\n      tag_401\n      tag_281\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7334:7446   */\n    tag_400:\n        /* \"#utility.yul\":7455:7509   */\n      tag_402\n        /* \"#utility.yul\":7502:7508   */\n      dup5\n        /* \"#utility.yul\":7497:7500   */\n      dup3\n        /* \"#utility.yul\":7492:7495   */\n      dup6\n        /* \"#utility.yul\":7455:7509   */\n      tag_286\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7174:7515   */\n      pop\n        /* \"#utility.yul\":7090:7515   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7535:7875   */\n    tag_288:\n        /* \"#utility.yul\":7591:7596   */\n      0x00\n        /* \"#utility.yul\":7640:7643   */\n      dup3\n        /* \"#utility.yul\":7633:7637   */\n      0x1f\n        /* \"#utility.yul\":7625:7631   */\n      dup4\n        /* \"#utility.yul\":7621:7638   */\n      add\n        /* \"#utility.yul\":7617:7644   */\n      slt\n        /* \"#utility.yul\":7607:7729   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":7648:7727   */\n      tag_405\n      tag_280\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7607:7729   */\n    tag_404:\n        /* \"#utility.yul\":7765:7771   */\n      dup2\n        /* \"#utility.yul\":7752:7772   */\n      calldataload\n        /* \"#utility.yul\":7790:7869   */\n      tag_406\n        /* \"#utility.yul\":7865:7868   */\n      dup5\n        /* \"#utility.yul\":7857:7863   */\n      dup3\n        /* \"#utility.yul\":7850:7854   */\n      0x20\n        /* \"#utility.yul\":7842:7848   */\n      dup7\n        /* \"#utility.yul\":7838:7855   */\n      add\n        /* \"#utility.yul\":7790:7869   */\n      tag_287\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7781:7869   */\n      swap2\n      pop\n        /* \"#utility.yul\":7597:7875   */\n      pop\n        /* \"#utility.yul\":7535:7875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7881:8860   */\n    tag_75:\n        /* \"#utility.yul\":7978:7984   */\n      0x00\n        /* \"#utility.yul\":7986:7992   */\n      0x00\n        /* \"#utility.yul\":7994:8000   */\n      0x00\n        /* \"#utility.yul\":8043:8045   */\n      0x60\n        /* \"#utility.yul\":8031:8040   */\n      dup5\n        /* \"#utility.yul\":8022:8029   */\n      dup7\n        /* \"#utility.yul\":8018:8041   */\n      sub\n        /* \"#utility.yul\":8014:8046   */\n      slt\n        /* \"#utility.yul\":8011:8130   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":8049:8128   */\n      tag_409\n      tag_265\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8011:8130   */\n    tag_408:\n        /* \"#utility.yul\":8197:8198   */\n      0x00\n        /* \"#utility.yul\":8186:8195   */\n      dup5\n        /* \"#utility.yul\":8182:8199   */\n      add\n        /* \"#utility.yul\":8169:8200   */\n      calldataload\n        /* \"#utility.yul\":8227:8245   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8219:8225   */\n      dup2\n        /* \"#utility.yul\":8216:8246   */\n      gt\n        /* \"#utility.yul\":8213:8330   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":8249:8328   */\n      tag_411\n      tag_266\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8213:8330   */\n    tag_410:\n        /* \"#utility.yul\":8354:8417   */\n      tag_412\n        /* \"#utility.yul\":8409:8416   */\n      dup7\n        /* \"#utility.yul\":8400:8406   */\n      dup3\n        /* \"#utility.yul\":8389:8398   */\n      dup8\n        /* \"#utility.yul\":8385:8407   */\n      add\n        /* \"#utility.yul\":8354:8417   */\n      tag_288\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8344:8417   */\n      swap4\n      pop\n        /* \"#utility.yul\":8140:8427   */\n      pop\n        /* \"#utility.yul\":8494:8496   */\n      0x20\n        /* \"#utility.yul\":8483:8492   */\n      dup5\n        /* \"#utility.yul\":8479:8497   */\n      add\n        /* \"#utility.yul\":8466:8498   */\n      calldataload\n        /* \"#utility.yul\":8525:8543   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8517:8523   */\n      dup2\n        /* \"#utility.yul\":8514:8544   */\n      gt\n        /* \"#utility.yul\":8511:8628   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":8547:8626   */\n      tag_414\n      tag_266\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8511:8628   */\n    tag_413:\n        /* \"#utility.yul\":8652:8715   */\n      tag_415\n        /* \"#utility.yul\":8707:8714   */\n      dup7\n        /* \"#utility.yul\":8698:8704   */\n      dup3\n        /* \"#utility.yul\":8687:8696   */\n      dup8\n        /* \"#utility.yul\":8683:8705   */\n      add\n        /* \"#utility.yul\":8652:8715   */\n      tag_288\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8642:8715   */\n      swap3\n      pop\n        /* \"#utility.yul\":8437:8725   */\n      pop\n        /* \"#utility.yul\":8764:8766   */\n      0x40\n        /* \"#utility.yul\":8790:8843   */\n      tag_416\n        /* \"#utility.yul\":8835:8842   */\n      dup7\n        /* \"#utility.yul\":8826:8832   */\n      dup3\n        /* \"#utility.yul\":8815:8824   */\n      dup8\n        /* \"#utility.yul\":8811:8833   */\n      add\n        /* \"#utility.yul\":8790:8843   */\n      tag_273\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8780:8843   */\n      swap2\n      pop\n        /* \"#utility.yul\":8735:8853   */\n      pop\n        /* \"#utility.yul\":7881:8860   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8866:9340   */\n    tag_79:\n        /* \"#utility.yul\":8934:8940   */\n      0x00\n        /* \"#utility.yul\":8942:8948   */\n      0x00\n        /* \"#utility.yul\":8991:8993   */\n      0x40\n        /* \"#utility.yul\":8979:8988   */\n      dup4\n        /* \"#utility.yul\":8970:8977   */\n      dup6\n        /* \"#utility.yul\":8966:8989   */\n      sub\n        /* \"#utility.yul\":8962:8994   */\n      slt\n        /* \"#utility.yul\":8959:9078   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":8997:9076   */\n      tag_419\n      tag_265\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8959:9078   */\n    tag_418:\n        /* \"#utility.yul\":9117:9118   */\n      0x00\n        /* \"#utility.yul\":9142:9195   */\n      tag_420\n        /* \"#utility.yul\":9187:9194   */\n      dup6\n        /* \"#utility.yul\":9178:9184   */\n      dup3\n        /* \"#utility.yul\":9167:9176   */\n      dup7\n        /* \"#utility.yul\":9163:9185   */\n      add\n        /* \"#utility.yul\":9142:9195   */\n      tag_270\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9132:9195   */\n      swap3\n      pop\n        /* \"#utility.yul\":9088:9205   */\n      pop\n        /* \"#utility.yul\":9244:9246   */\n      0x20\n        /* \"#utility.yul\":9270:9323   */\n      tag_421\n        /* \"#utility.yul\":9315:9322   */\n      dup6\n        /* \"#utility.yul\":9306:9312   */\n      dup3\n        /* \"#utility.yul\":9295:9304   */\n      dup7\n        /* \"#utility.yul\":9291:9313   */\n      add\n        /* \"#utility.yul\":9270:9323   */\n      tag_270\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9260:9323   */\n      swap2\n      pop\n        /* \"#utility.yul\":9215:9333   */\n      pop\n        /* \"#utility.yul\":8866:9340   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9346:9526   */\n    tag_289:\n        /* \"#utility.yul\":9394:9471   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9391:9392   */\n      0x00\n        /* \"#utility.yul\":9384:9472   */\n      mstore\n        /* \"#utility.yul\":9491:9495   */\n      0x22\n        /* \"#utility.yul\":9488:9489   */\n      0x04\n        /* \"#utility.yul\":9481:9496   */\n      mstore\n        /* \"#utility.yul\":9515:9519   */\n      0x24\n        /* \"#utility.yul\":9512:9513   */\n      0x00\n        /* \"#utility.yul\":9505:9520   */\n      revert\n        /* \"#utility.yul\":9532:9852   */\n    tag_89:\n        /* \"#utility.yul\":9576:9582   */\n      0x00\n        /* \"#utility.yul\":9613:9614   */\n      0x02\n        /* \"#utility.yul\":9607:9611   */\n      dup3\n        /* \"#utility.yul\":9603:9615   */\n      div\n        /* \"#utility.yul\":9593:9615   */\n      swap1\n      pop\n        /* \"#utility.yul\":9660:9661   */\n      0x01\n        /* \"#utility.yul\":9654:9658   */\n      dup3\n        /* \"#utility.yul\":9650:9662   */\n      and\n        /* \"#utility.yul\":9681:9699   */\n      dup1\n        /* \"#utility.yul\":9671:9752   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":9737:9741   */\n      0x7f\n        /* \"#utility.yul\":9729:9735   */\n      dup3\n        /* \"#utility.yul\":9725:9742   */\n      and\n        /* \"#utility.yul\":9715:9742   */\n      swap2\n      pop\n        /* \"#utility.yul\":9671:9752   */\n    tag_424:\n        /* \"#utility.yul\":9799:9801   */\n      0x20\n        /* \"#utility.yul\":9791:9797   */\n      dup3\n        /* \"#utility.yul\":9788:9802   */\n      lt\n        /* \"#utility.yul\":9768:9786   */\n      dup2\n        /* \"#utility.yul\":9765:9803   */\n      sub\n        /* \"#utility.yul\":9762:9846   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":9818:9836   */\n      tag_426\n      tag_289\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9762:9846   */\n    tag_425:\n        /* \"#utility.yul\":9583:9852   */\n      pop\n        /* \"#utility.yul\":9532:9852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9858:10038   */\n    tag_290:\n        /* \"#utility.yul\":9906:9983   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9903:9904   */\n      0x00\n        /* \"#utility.yul\":9896:9984   */\n      mstore\n        /* \"#utility.yul\":10003:10007   */\n      0x11\n        /* \"#utility.yul\":10000:10001   */\n      0x04\n        /* \"#utility.yul\":9993:10008   */\n      mstore\n        /* \"#utility.yul\":10027:10031   */\n      0x24\n        /* \"#utility.yul\":10024:10025   */\n      0x00\n        /* \"#utility.yul\":10017:10032   */\n      revert\n        /* \"#utility.yul\":10044:10235   */\n    tag_115:\n        /* \"#utility.yul\":10084:10087   */\n      0x00\n        /* \"#utility.yul\":10103:10123   */\n      tag_429\n        /* \"#utility.yul\":10121:10122   */\n      dup3\n        /* \"#utility.yul\":10103:10123   */\n      tag_271\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10098:10123   */\n      swap2\n      pop\n        /* \"#utility.yul\":10137:10157   */\n      tag_430\n        /* \"#utility.yul\":10155:10156   */\n      dup4\n        /* \"#utility.yul\":10137:10157   */\n      tag_271\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":10132:10157   */\n      swap3\n      pop\n        /* \"#utility.yul\":10180:10181   */\n      dup3\n        /* \"#utility.yul\":10177:10178   */\n      dup3\n        /* \"#utility.yul\":10173:10182   */\n      add\n        /* \"#utility.yul\":10166:10182   */\n      swap1\n      pop\n        /* \"#utility.yul\":10201:10204   */\n      dup1\n        /* \"#utility.yul\":10198:10199   */\n      dup3\n        /* \"#utility.yul\":10195:10205   */\n      gt\n        /* \"#utility.yul\":10192:10228   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":10208:10226   */\n      tag_432\n      tag_290\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10192:10228   */\n    tag_431:\n        /* \"#utility.yul\":10044:10235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10241:10403   */\n    tag_291:\n        /* \"#utility.yul\":10381:10395   */\n      0x4361702065786365656465640000000000000000000000000000000000000000\n        /* \"#utility.yul\":10377:10378   */\n      0x00\n        /* \"#utility.yul\":10369:10375   */\n      dup3\n        /* \"#utility.yul\":10365:10379   */\n      add\n        /* \"#utility.yul\":10358:10396   */\n      mstore\n        /* \"#utility.yul\":10241:10403   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10409:10775   */\n    tag_292:\n        /* \"#utility.yul\":10551:10554   */\n      0x00\n        /* \"#utility.yul\":10572:10639   */\n      tag_435\n        /* \"#utility.yul\":10636:10638   */\n      0x0c\n        /* \"#utility.yul\":10631:10634   */\n      dup4\n        /* \"#utility.yul\":10572:10639   */\n      tag_260\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10565:10639   */\n      swap2\n      pop\n        /* \"#utility.yul\":10648:10741   */\n      tag_436\n        /* \"#utility.yul\":10737:10740   */\n      dup3\n        /* \"#utility.yul\":10648:10741   */\n      tag_291\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10766:10768   */\n      0x20\n        /* \"#utility.yul\":10761:10764   */\n      dup3\n        /* \"#utility.yul\":10757:10769   */\n      add\n        /* \"#utility.yul\":10750:10769   */\n      swap1\n      pop\n        /* \"#utility.yul\":10409:10775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10781:11200   */\n    tag_118:\n        /* \"#utility.yul\":10947:10951   */\n      0x00\n        /* \"#utility.yul\":10985:10987   */\n      0x20\n        /* \"#utility.yul\":10974:10983   */\n      dup3\n        /* \"#utility.yul\":10970:10988   */\n      add\n        /* \"#utility.yul\":10962:10988   */\n      swap1\n      pop\n        /* \"#utility.yul\":11034:11043   */\n      dup2\n        /* \"#utility.yul\":11028:11032   */\n      dup2\n        /* \"#utility.yul\":11024:11044   */\n      sub\n        /* \"#utility.yul\":11020:11021   */\n      0x00\n        /* \"#utility.yul\":11009:11018   */\n      dup4\n        /* \"#utility.yul\":11005:11022   */\n      add\n        /* \"#utility.yul\":10998:11045   */\n      mstore\n        /* \"#utility.yul\":11062:11193   */\n      tag_438\n        /* \"#utility.yul\":11188:11192   */\n      dup2\n        /* \"#utility.yul\":11062:11193   */\n      tag_292\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11054:11193   */\n      swap1\n      pop\n        /* \"#utility.yul\":10781:11200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11206:11372   */\n    tag_293:\n        /* \"#utility.yul\":11346:11364   */\n      0x4e657720636170203c20737570706c7900000000000000000000000000000000\n        /* \"#utility.yul\":11342:11343   */\n      0x00\n        /* \"#utility.yul\":11334:11340   */\n      dup3\n        /* \"#utility.yul\":11330:11344   */\n      add\n        /* \"#utility.yul\":11323:11365   */\n      mstore\n        /* \"#utility.yul\":11206:11372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11378:11744   */\n    tag_294:\n        /* \"#utility.yul\":11520:11523   */\n      0x00\n        /* \"#utility.yul\":11541:11608   */\n      tag_441\n        /* \"#utility.yul\":11605:11607   */\n      0x10\n        /* \"#utility.yul\":11600:11603   */\n      dup4\n        /* \"#utility.yul\":11541:11608   */\n      tag_260\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11534:11608   */\n      swap2\n      pop\n        /* \"#utility.yul\":11617:11710   */\n      tag_442\n        /* \"#utility.yul\":11706:11709   */\n      dup3\n        /* \"#utility.yul\":11617:11710   */\n      tag_293\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11735:11737   */\n      0x20\n        /* \"#utility.yul\":11730:11733   */\n      dup3\n        /* \"#utility.yul\":11726:11738   */\n      add\n        /* \"#utility.yul\":11719:11738   */\n      swap1\n      pop\n        /* \"#utility.yul\":11378:11744   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11750:12169   */\n    tag_144:\n        /* \"#utility.yul\":11916:11920   */\n      0x00\n        /* \"#utility.yul\":11954:11956   */\n      0x20\n        /* \"#utility.yul\":11943:11952   */\n      dup3\n        /* \"#utility.yul\":11939:11957   */\n      add\n        /* \"#utility.yul\":11931:11957   */\n      swap1\n      pop\n        /* \"#utility.yul\":12003:12012   */\n      dup2\n        /* \"#utility.yul\":11997:12001   */\n      dup2\n        /* \"#utility.yul\":11993:12013   */\n      sub\n        /* \"#utility.yul\":11989:11990   */\n      0x00\n        /* \"#utility.yul\":11978:11987   */\n      dup4\n        /* \"#utility.yul\":11974:11991   */\n      add\n        /* \"#utility.yul\":11967:12014   */\n      mstore\n        /* \"#utility.yul\":12031:12162   */\n      tag_444\n        /* \"#utility.yul\":12157:12161   */\n      dup2\n        /* \"#utility.yul\":12031:12162   */\n      tag_294\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":12023:12162   */\n      swap1\n      pop\n        /* \"#utility.yul\":11750:12169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12175:12340   */\n    tag_295:\n        /* \"#utility.yul\":12315:12332   */\n      0x436170206d757374206265203e20300000000000000000000000000000000000\n        /* \"#utility.yul\":12311:12312   */\n      0x00\n        /* \"#utility.yul\":12303:12309   */\n      dup3\n        /* \"#utility.yul\":12299:12313   */\n      add\n        /* \"#utility.yul\":12292:12333   */\n      mstore\n        /* \"#utility.yul\":12175:12340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12346:12712   */\n    tag_296:\n        /* \"#utility.yul\":12488:12491   */\n      0x00\n        /* \"#utility.yul\":12509:12576   */\n      tag_447\n        /* \"#utility.yul\":12573:12575   */\n      0x0f\n        /* \"#utility.yul\":12568:12571   */\n      dup4\n        /* \"#utility.yul\":12509:12576   */\n      tag_260\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12502:12576   */\n      swap2\n      pop\n        /* \"#utility.yul\":12585:12678   */\n      tag_448\n        /* \"#utility.yul\":12674:12677   */\n      dup3\n        /* \"#utility.yul\":12585:12678   */\n      tag_295\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":12703:12705   */\n      0x20\n        /* \"#utility.yul\":12698:12701   */\n      dup3\n        /* \"#utility.yul\":12694:12706   */\n      add\n        /* \"#utility.yul\":12687:12706   */\n      swap1\n      pop\n        /* \"#utility.yul\":12346:12712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12718:13137   */\n    tag_163:\n        /* \"#utility.yul\":12884:12888   */\n      0x00\n        /* \"#utility.yul\":12922:12924   */\n      0x20\n        /* \"#utility.yul\":12911:12920   */\n      dup3\n        /* \"#utility.yul\":12907:12925   */\n      add\n        /* \"#utility.yul\":12899:12925   */\n      swap1\n      pop\n        /* \"#utility.yul\":12971:12980   */\n      dup2\n        /* \"#utility.yul\":12965:12969   */\n      dup2\n        /* \"#utility.yul\":12961:12981   */\n      sub\n        /* \"#utility.yul\":12957:12958   */\n      0x00\n        /* \"#utility.yul\":12946:12955   */\n      dup4\n        /* \"#utility.yul\":12942:12959   */\n      add\n        /* \"#utility.yul\":12935:12982   */\n      mstore\n        /* \"#utility.yul\":12999:13130   */\n      tag_450\n        /* \"#utility.yul\":13125:13129   */\n      dup2\n        /* \"#utility.yul\":12999:13130   */\n      tag_296\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12991:13130   */\n      swap1\n      pop\n        /* \"#utility.yul\":12718:13137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13143:13228   */\n    tag_297:\n        /* \"#utility.yul\":13188:13195   */\n      0x00\n        /* \"#utility.yul\":13217:13222   */\n      dup2\n        /* \"#utility.yul\":13206:13222   */\n      swap1\n      pop\n        /* \"#utility.yul\":13143:13228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13234:13335   */\n    tag_298:\n        /* \"#utility.yul\":13270:13277   */\n      0x00\n        /* \"#utility.yul\":13310:13328   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13303:13308   */\n      dup3\n        /* \"#utility.yul\":13299:13329   */\n      and\n        /* \"#utility.yul\":13288:13329   */\n      swap1\n      pop\n        /* \"#utility.yul\":13234:13335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13341:13401   */\n    tag_299:\n        /* \"#utility.yul\":13369:13372   */\n      0x00\n        /* \"#utility.yul\":13390:13395   */\n      dup2\n        /* \"#utility.yul\":13383:13395   */\n      swap1\n      pop\n        /* \"#utility.yul\":13341:13401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13407:13563   */\n    tag_300:\n        /* \"#utility.yul\":13464:13473   */\n      0x00\n        /* \"#utility.yul\":13497:13557   */\n      tag_455\n        /* \"#utility.yul\":13514:13556   */\n      tag_456\n        /* \"#utility.yul\":13523:13555   */\n      tag_457\n        /* \"#utility.yul\":13549:13554   */\n      dup5\n        /* \"#utility.yul\":13523:13555   */\n      tag_297\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13514:13556   */\n      tag_299\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13497:13557   */\n      tag_298\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":13484:13557   */\n      swap1\n      pop\n        /* \"#utility.yul\":13407:13563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13569:13714   */\n    tag_301:\n        /* \"#utility.yul\":13663:13707   */\n      tag_459\n        /* \"#utility.yul\":13701:13706   */\n      dup2\n        /* \"#utility.yul\":13663:13707   */\n      tag_300\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13658:13661   */\n      dup3\n        /* \"#utility.yul\":13651:13708   */\n      mstore\n        /* \"#utility.yul\":13569:13714   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13720:13956   */\n    tag_166:\n        /* \"#utility.yul\":13820:13824   */\n      0x00\n        /* \"#utility.yul\":13858:13860   */\n      0x20\n        /* \"#utility.yul\":13847:13856   */\n      dup3\n        /* \"#utility.yul\":13843:13861   */\n      add\n        /* \"#utility.yul\":13835:13861   */\n      swap1\n      pop\n        /* \"#utility.yul\":13871:13949   */\n      tag_461\n        /* \"#utility.yul\":13946:13947   */\n      0x00\n        /* \"#utility.yul\":13935:13944   */\n      dup4\n        /* \"#utility.yul\":13931:13948   */\n      add\n        /* \"#utility.yul\":13922:13928   */\n      dup5\n        /* \"#utility.yul\":13871:13949   */\n      tag_301\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":13720:13956   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13962:14404   */\n    tag_185:\n        /* \"#utility.yul\":14111:14115   */\n      0x00\n        /* \"#utility.yul\":14149:14151   */\n      0x60\n        /* \"#utility.yul\":14138:14147   */\n      dup3\n        /* \"#utility.yul\":14134:14152   */\n      add\n        /* \"#utility.yul\":14126:14152   */\n      swap1\n      pop\n        /* \"#utility.yul\":14162:14233   */\n      tag_463\n        /* \"#utility.yul\":14230:14231   */\n      0x00\n        /* \"#utility.yul\":14219:14228   */\n      dup4\n        /* \"#utility.yul\":14215:14232   */\n      add\n        /* \"#utility.yul\":14206:14212   */\n      dup7\n        /* \"#utility.yul\":14162:14233   */\n      tag_279\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14243:14315   */\n      tag_464\n        /* \"#utility.yul\":14311:14313   */\n      0x20\n        /* \"#utility.yul\":14300:14309   */\n      dup4\n        /* \"#utility.yul\":14296:14314   */\n      add\n        /* \"#utility.yul\":14287:14293   */\n      dup6\n        /* \"#utility.yul\":14243:14315   */\n      tag_276\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":14325:14397   */\n      tag_465\n        /* \"#utility.yul\":14393:14395   */\n      0x40\n        /* \"#utility.yul\":14382:14391   */\n      dup4\n        /* \"#utility.yul\":14378:14396   */\n      add\n        /* \"#utility.yul\":14369:14375   */\n      dup5\n        /* \"#utility.yul\":14325:14397   */\n      tag_276\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13962:14404   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14410:14551   */\n    tag_302:\n        /* \"#utility.yul\":14459:14463   */\n      0x00\n        /* \"#utility.yul\":14482:14485   */\n      dup2\n        /* \"#utility.yul\":14474:14485   */\n      swap1\n      pop\n        /* \"#utility.yul\":14505:14508   */\n      dup2\n        /* \"#utility.yul\":14502:14503   */\n      0x00\n        /* \"#utility.yul\":14495:14509   */\n      mstore\n        /* \"#utility.yul\":14539:14543   */\n      0x20\n        /* \"#utility.yul\":14536:14537   */\n      0x00\n        /* \"#utility.yul\":14526:14544   */\n      keccak256\n        /* \"#utility.yul\":14518:14544   */\n      swap1\n      pop\n        /* \"#utility.yul\":14410:14551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14557:14650   */\n    tag_303:\n        /* \"#utility.yul\":14594:14600   */\n      0x00\n        /* \"#utility.yul\":14641:14643   */\n      0x20\n        /* \"#utility.yul\":14636:14638   */\n      0x1f\n        /* \"#utility.yul\":14629:14634   */\n      dup4\n        /* \"#utility.yul\":14625:14639   */\n      add\n        /* \"#utility.yul\":14621:14644   */\n      div\n        /* \"#utility.yul\":14611:14644   */\n      swap1\n      pop\n        /* \"#utility.yul\":14557:14650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14656:14763   */\n    tag_304:\n        /* \"#utility.yul\":14700:14708   */\n      0x00\n        /* \"#utility.yul\":14750:14755   */\n      dup3\n        /* \"#utility.yul\":14744:14748   */\n      dup3\n        /* \"#utility.yul\":14740:14756   */\n      shl\n        /* \"#utility.yul\":14719:14756   */\n      swap1\n      pop\n        /* \"#utility.yul\":14656:14763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14769:15162   */\n    tag_305:\n        /* \"#utility.yul\":14838:14844   */\n      0x00\n        /* \"#utility.yul\":14888:14889   */\n      0x08\n        /* \"#utility.yul\":14876:14886   */\n      dup4\n        /* \"#utility.yul\":14872:14890   */\n      mul\n        /* \"#utility.yul\":14911:15008   */\n      tag_470\n        /* \"#utility.yul\":14941:15007   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14930:14939   */\n      dup3\n        /* \"#utility.yul\":14911:15008   */\n      tag_304\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15029:15068   */\n      tag_471\n        /* \"#utility.yul\":15059:15067   */\n      dup7\n        /* \"#utility.yul\":15048:15057   */\n      dup4\n        /* \"#utility.yul\":15029:15068   */\n      tag_304\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15017:15068   */\n      swap6\n      pop\n        /* \"#utility.yul\":15101:15105   */\n      dup1\n        /* \"#utility.yul\":15097:15106   */\n      not\n        /* \"#utility.yul\":15090:15095   */\n      dup5\n        /* \"#utility.yul\":15086:15107   */\n      and\n        /* \"#utility.yul\":15077:15107   */\n      swap4\n      pop\n        /* \"#utility.yul\":15150:15154   */\n      dup1\n        /* \"#utility.yul\":15140:15148   */\n      dup7\n        /* \"#utility.yul\":15136:15155   */\n      and\n        /* \"#utility.yul\":15129:15134   */\n      dup5\n        /* \"#utility.yul\":15126:15156   */\n      or\n        /* \"#utility.yul\":15116:15156   */\n      swap3\n      pop\n        /* \"#utility.yul\":14845:15162   */\n      pop\n      pop\n        /* \"#utility.yul\":14769:15162   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15168:15310   */\n    tag_306:\n        /* \"#utility.yul\":15218:15227   */\n      0x00\n        /* \"#utility.yul\":15251:15304   */\n      tag_473\n        /* \"#utility.yul\":15269:15303   */\n      tag_474\n        /* \"#utility.yul\":15278:15302   */\n      tag_475\n        /* \"#utility.yul\":15296:15301   */\n      dup5\n        /* \"#utility.yul\":15278:15302   */\n      tag_271\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":15269:15303   */\n      tag_299\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":15251:15304   */\n      tag_271\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":15238:15304   */\n      swap1\n      pop\n        /* \"#utility.yul\":15168:15310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15316:15391   */\n    tag_307:\n        /* \"#utility.yul\":15359:15362   */\n      0x00\n        /* \"#utility.yul\":15380:15385   */\n      dup2\n        /* \"#utility.yul\":15373:15385   */\n      swap1\n      pop\n        /* \"#utility.yul\":15316:15391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15397:15666   */\n    tag_308:\n        /* \"#utility.yul\":15507:15546   */\n      tag_478\n        /* \"#utility.yul\":15538:15545   */\n      dup4\n        /* \"#utility.yul\":15507:15546   */\n      tag_306\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":15568:15659   */\n      tag_479\n        /* \"#utility.yul\":15617:15658   */\n      tag_480\n        /* \"#utility.yul\":15641:15657   */\n      dup3\n        /* \"#utility.yul\":15617:15658   */\n      tag_307\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":15609:15615   */\n      dup5\n        /* \"#utility.yul\":15602:15606   */\n      dup5\n        /* \"#utility.yul\":15596:15607   */\n      sload\n        /* \"#utility.yul\":15568:15659   */\n      tag_305\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15562:15566   */\n      dup3\n        /* \"#utility.yul\":15555:15660   */\n      sstore\n        /* \"#utility.yul\":15473:15666   */\n      pop\n        /* \"#utility.yul\":15397:15666   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15672:15745   */\n    tag_309:\n        /* \"#utility.yul\":15717:15720   */\n      0x00\n        /* \"#utility.yul\":15738:15739   */\n      0x00\n        /* \"#utility.yul\":15731:15739   */\n      swap1\n      pop\n        /* \"#utility.yul\":15672:15745   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15751:15940   */\n    tag_310:\n        /* \"#utility.yul\":15828:15860   */\n      tag_483\n      tag_309\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15869:15934   */\n      tag_484\n        /* \"#utility.yul\":15927:15933   */\n      dup2\n        /* \"#utility.yul\":15919:15925   */\n      dup5\n        /* \"#utility.yul\":15913:15917   */\n      dup5\n        /* \"#utility.yul\":15869:15934   */\n      tag_308\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":15804:15940   */\n      pop\n        /* \"#utility.yul\":15751:15940   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15946:16132   */\n    tag_311:\n        /* \"#utility.yul\":16006:16126   */\n    tag_486:\n        /* \"#utility.yul\":16023:16026   */\n      dup2\n        /* \"#utility.yul\":16016:16021   */\n      dup2\n        /* \"#utility.yul\":16013:16027   */\n      lt\n        /* \"#utility.yul\":16006:16126   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":16077:16116   */\n      tag_489\n        /* \"#utility.yul\":16114:16115   */\n      0x00\n        /* \"#utility.yul\":16107:16112   */\n      dup3\n        /* \"#utility.yul\":16077:16116   */\n      tag_310\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":16050:16051   */\n      0x01\n        /* \"#utility.yul\":16043:16048   */\n      dup2\n        /* \"#utility.yul\":16039:16052   */\n      add\n        /* \"#utility.yul\":16030:16052   */\n      swap1\n      pop\n        /* \"#utility.yul\":16006:16126   */\n      jump(tag_486)\n    tag_488:\n        /* \"#utility.yul\":15946:16132   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16138:16681   */\n    tag_312:\n        /* \"#utility.yul\":16239:16241   */\n      0x1f\n        /* \"#utility.yul\":16234:16237   */\n      dup3\n        /* \"#utility.yul\":16231:16242   */\n      gt\n        /* \"#utility.yul\":16228:16674   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":16273:16311   */\n      tag_492\n        /* \"#utility.yul\":16305:16310   */\n      dup2\n        /* \"#utility.yul\":16273:16311   */\n      tag_302\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":16357:16386   */\n      tag_493\n        /* \"#utility.yul\":16375:16385   */\n      dup5\n        /* \"#utility.yul\":16357:16386   */\n      tag_303\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":16347:16355   */\n      dup2\n        /* \"#utility.yul\":16343:16387   */\n      add\n        /* \"#utility.yul\":16540:16542   */\n      0x20\n        /* \"#utility.yul\":16528:16538   */\n      dup6\n        /* \"#utility.yul\":16525:16543   */\n      lt\n        /* \"#utility.yul\":16522:16571   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":16561:16569   */\n      dup2\n        /* \"#utility.yul\":16546:16569   */\n      swap1\n      pop\n        /* \"#utility.yul\":16522:16571   */\n    tag_494:\n        /* \"#utility.yul\":16584:16664   */\n      tag_495\n        /* \"#utility.yul\":16640:16662   */\n      tag_496\n        /* \"#utility.yul\":16658:16661   */\n      dup6\n        /* \"#utility.yul\":16640:16662   */\n      tag_303\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":16630:16638   */\n      dup4\n        /* \"#utility.yul\":16626:16663   */\n      add\n        /* \"#utility.yul\":16613:16624   */\n      dup3\n        /* \"#utility.yul\":16584:16664   */\n      tag_311\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":16243:16674   */\n      pop\n      pop\n        /* \"#utility.yul\":16228:16674   */\n    tag_491:\n        /* \"#utility.yul\":16138:16681   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16687:16804   */\n    tag_313:\n        /* \"#utility.yul\":16741:16749   */\n      0x00\n        /* \"#utility.yul\":16791:16796   */\n      dup3\n        /* \"#utility.yul\":16785:16789   */\n      dup3\n        /* \"#utility.yul\":16781:16797   */\n      shr\n        /* \"#utility.yul\":16760:16797   */\n      swap1\n      pop\n        /* \"#utility.yul\":16687:16804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16810:16979   */\n    tag_314:\n        /* \"#utility.yul\":16854:16860   */\n      0x00\n        /* \"#utility.yul\":16887:16938   */\n      tag_499\n        /* \"#utility.yul\":16935:16936   */\n      0x00\n        /* \"#utility.yul\":16931:16937   */\n      not\n        /* \"#utility.yul\":16923:16928   */\n      dup5\n        /* \"#utility.yul\":16920:16921   */\n      0x08\n        /* \"#utility.yul\":16916:16929   */\n      mul\n        /* \"#utility.yul\":16887:16938   */\n      tag_313\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":16883:16939   */\n      not\n        /* \"#utility.yul\":16968:16972   */\n      dup1\n        /* \"#utility.yul\":16962:16966   */\n      dup4\n        /* \"#utility.yul\":16958:16973   */\n      and\n        /* \"#utility.yul\":16948:16973   */\n      swap2\n      pop\n        /* \"#utility.yul\":16861:16979   */\n      pop\n        /* \"#utility.yul\":16810:16979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16984:17279   */\n    tag_315:\n        /* \"#utility.yul\":17060:17064   */\n      0x00\n        /* \"#utility.yul\":17206:17235   */\n      tag_501\n        /* \"#utility.yul\":17231:17234   */\n      dup4\n        /* \"#utility.yul\":17225:17229   */\n      dup4\n        /* \"#utility.yul\":17206:17235   */\n      tag_314\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":17198:17235   */\n      swap2\n      pop\n        /* \"#utility.yul\":17268:17271   */\n      dup3\n        /* \"#utility.yul\":17265:17266   */\n      0x02\n        /* \"#utility.yul\":17261:17272   */\n      mul\n        /* \"#utility.yul\":17255:17259   */\n      dup3\n        /* \"#utility.yul\":17252:17273   */\n      or\n        /* \"#utility.yul\":17244:17273   */\n      swap1\n      pop\n        /* \"#utility.yul\":16984:17279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17284:18679   */\n    tag_249:\n        /* \"#utility.yul\":17401:17438   */\n      tag_503\n        /* \"#utility.yul\":17434:17437   */\n      dup3\n        /* \"#utility.yul\":17401:17438   */\n      tag_259\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":17503:17521   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17495:17501   */\n      dup2\n        /* \"#utility.yul\":17492:17522   */\n      gt\n        /* \"#utility.yul\":17489:17545   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":17525:17543   */\n      tag_505\n      tag_282\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17489:17545   */\n    tag_504:\n        /* \"#utility.yul\":17569:17607   */\n      tag_506\n        /* \"#utility.yul\":17601:17605   */\n      dup3\n        /* \"#utility.yul\":17595:17606   */\n      sload\n        /* \"#utility.yul\":17569:17607   */\n      tag_89\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":17654:17721   */\n      tag_507\n        /* \"#utility.yul\":17714:17720   */\n      dup3\n        /* \"#utility.yul\":17706:17712   */\n      dup3\n        /* \"#utility.yul\":17700:17704   */\n      dup6\n        /* \"#utility.yul\":17654:17721   */\n      tag_312\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":17748:17749   */\n      0x00\n        /* \"#utility.yul\":17772:17776   */\n      0x20\n        /* \"#utility.yul\":17759:17776   */\n      swap1\n      pop\n        /* \"#utility.yul\":17804:17806   */\n      0x1f\n        /* \"#utility.yul\":17796:17802   */\n      dup4\n        /* \"#utility.yul\":17793:17807   */\n      gt\n        /* \"#utility.yul\":17821:17822   */\n      0x01\n        /* \"#utility.yul\":17816:18434   */\n      dup2\n      eq\n      tag_509\n      jumpi\n        /* \"#utility.yul\":18478:18479   */\n      0x00\n        /* \"#utility.yul\":18495:18501   */\n      dup5\n        /* \"#utility.yul\":18492:18569   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":18544:18553   */\n      dup3\n        /* \"#utility.yul\":18539:18542   */\n      dup8\n        /* \"#utility.yul\":18535:18554   */\n      add\n        /* \"#utility.yul\":18529:18555   */\n      mload\n        /* \"#utility.yul\":18520:18555   */\n      swap1\n      pop\n        /* \"#utility.yul\":18492:18569   */\n    tag_510:\n        /* \"#utility.yul\":18595:18662   */\n      tag_511\n        /* \"#utility.yul\":18655:18661   */\n      dup6\n        /* \"#utility.yul\":18648:18653   */\n      dup3\n        /* \"#utility.yul\":18595:18662   */\n      tag_315\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":18589:18593   */\n      dup7\n        /* \"#utility.yul\":18582:18663   */\n      sstore\n        /* \"#utility.yul\":18451:18673   */\n      pop\n        /* \"#utility.yul\":17786:18673   */\n      jump(tag_508)\n        /* \"#utility.yul\":17816:18434   */\n    tag_509:\n        /* \"#utility.yul\":17868:17872   */\n      0x1f\n        /* \"#utility.yul\":17864:17873   */\n      not\n        /* \"#utility.yul\":17856:17862   */\n      dup5\n        /* \"#utility.yul\":17852:17874   */\n      and\n        /* \"#utility.yul\":17902:17939   */\n      tag_512\n        /* \"#utility.yul\":17934:17938   */\n      dup7\n        /* \"#utility.yul\":17902:17939   */\n      tag_302\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":17961:17962   */\n      0x00\n        /* \"#utility.yul\":17975:18183   */\n    tag_513:\n        /* \"#utility.yul\":17989:17996   */\n      dup3\n        /* \"#utility.yul\":17986:17987   */\n      dup2\n        /* \"#utility.yul\":17983:17997   */\n      lt\n        /* \"#utility.yul\":17975:18183   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":18068:18077   */\n      dup5\n        /* \"#utility.yul\":18063:18066   */\n      dup10\n        /* \"#utility.yul\":18059:18078   */\n      add\n        /* \"#utility.yul\":18053:18079   */\n      mload\n        /* \"#utility.yul\":18045:18051   */\n      dup3\n        /* \"#utility.yul\":18038:18080   */\n      sstore\n        /* \"#utility.yul\":18119:18120   */\n      0x01\n        /* \"#utility.yul\":18111:18117   */\n      dup3\n        /* \"#utility.yul\":18107:18121   */\n      add\n        /* \"#utility.yul\":18097:18121   */\n      swap2\n      pop\n        /* \"#utility.yul\":18166:18168   */\n      0x20\n        /* \"#utility.yul\":18155:18164   */\n      dup6\n        /* \"#utility.yul\":18151:18169   */\n      add\n        /* \"#utility.yul\":18138:18169   */\n      swap5\n      pop\n        /* \"#utility.yul\":18012:18016   */\n      0x20\n        /* \"#utility.yul\":18009:18010   */\n      dup2\n        /* \"#utility.yul\":18005:18017   */\n      add\n        /* \"#utility.yul\":18000:18017   */\n      swap1\n      pop\n        /* \"#utility.yul\":17975:18183   */\n      jump(tag_513)\n    tag_515:\n        /* \"#utility.yul\":18211:18217   */\n      dup7\n        /* \"#utility.yul\":18202:18209   */\n      dup4\n        /* \"#utility.yul\":18199:18218   */\n      lt\n        /* \"#utility.yul\":18196:18375   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":18269:18278   */\n      dup5\n        /* \"#utility.yul\":18264:18267   */\n      dup10\n        /* \"#utility.yul\":18260:18279   */\n      add\n        /* \"#utility.yul\":18254:18280   */\n      mload\n        /* \"#utility.yul\":18312:18360   */\n      tag_517\n        /* \"#utility.yul\":18354:18358   */\n      0x1f\n        /* \"#utility.yul\":18346:18352   */\n      dup10\n        /* \"#utility.yul\":18342:18359   */\n      and\n        /* \"#utility.yul\":18331:18340   */\n      dup3\n        /* \"#utility.yul\":18312:18360   */\n      tag_314\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":18304:18310   */\n      dup4\n        /* \"#utility.yul\":18297:18361   */\n      sstore\n        /* \"#utility.yul\":18219:18375   */\n      pop\n        /* \"#utility.yul\":18196:18375   */\n    tag_516:\n        /* \"#utility.yul\":18421:18422   */\n      0x01\n        /* \"#utility.yul\":18417:18418   */\n      0x02\n        /* \"#utility.yul\":18409:18415   */\n      dup9\n        /* \"#utility.yul\":18405:18419   */\n      mul\n        /* \"#utility.yul\":18401:18423   */\n      add\n        /* \"#utility.yul\":18395:18399   */\n      dup9\n        /* \"#utility.yul\":18388:18424   */\n      sstore\n        /* \"#utility.yul\":17823:18434   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17786:18673   */\n    tag_508:\n      pop\n        /* \"#utility.yul\":17376:18679   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17284:18679   */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206a0f7d6eae071863db396a76ac6fb048e019f033719e9c2ab7c7a6c3a952deac64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50611c808061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063715018a611610095578063a9059cbb11610064578063a9059cbb14610288578063b119490e146102b8578063dd62ed3e146102d4578063f2fde38b14610304576100fe565b8063715018a6146102265780638da5cb5b1461023057806395d89b411461024e578063a7d688961461026c576100fe565b8063313ce567116100d1578063313ce5671461019e578063355274ea146101bc57806340c10f19146101da57806370a08231146101f6576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f5ffd5b61010a610320565b6040516101179190611301565b60405180910390f35b61013a600480360381019061013591906113bf565b6103be565b6040516101479190611417565b60405180910390f35b6101586103e0565b604051610165919061143f565b60405180910390f35b61018860048036038101906101839190611458565b6103f7565b6040516101959190611417565b60405180910390f35b6101a6610425565b6040516101b391906114c3565b60405180910390f35b6101c461042d565b6040516101d1919061143f565b60405180910390f35b6101f460048036038101906101ef91906113bf565b610435565b005b610210600480360381019061020b91906114dc565b6104a1565b60405161021d919061143f565b60405180910390f35b61022e6104f4565b005b610238610507565b6040516102459190611516565b60405180910390f35b61025661053c565b6040516102639190611301565b60405180910390f35b6102866004803603810190610281919061152f565b6105da565b005b6102a2600480360381019061029d91906113bf565b610635565b6040516102af9190611417565b60405180910390f35b6102d260048036038101906102cd9190611686565b610657565b005b6102ee60048036038101906102e9919061170e565b61082c565b6040516102fb919061143f565b60405180910390f35b61031e600480360381019061031991906114dc565b6108bc565b005b60605f61032b610940565b905080600301805461033c90611779565b80601f016020809104026020016040519081016040528092919081815260200182805461036890611779565b80156103b35780601f1061038a576101008083540402835291602001916103b3565b820191905f5260205f20905b81548152906001019060200180831161039657829003601f168201915b505050505091505090565b5f5f6103c8610967565b90506103d581858561096e565b600191505092915050565b5f5f6103ea610940565b9050806002015491505090565b5f5f610401610967565b905061040e858285610980565b610419858585610a13565b60019150509392505050565b5f6012905090565b5f5f54905090565b61043d610b03565b5f54816104486103e0565b61045291906117d6565b1115610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a90611853565b60405180910390fd5b61049d8282610b8a565b5050565b5f5f6104ab610940565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b6104fc610b03565b6105055f610c09565b565b5f5f610511610cda565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610547610940565b905080600401805461055890611779565b80601f016020809104026020016040519081016040528092919081815260200182805461058490611779565b80156105cf5780601f106105a6576101008083540402835291602001916105cf565b820191905f5260205f20905b8154815290600101906020018083116105b257829003601f168201915b505050505091505090565b6105e2610b03565b6105ea6103e0565b81101561062c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610623906118bb565b60405180910390fd5b805f8190555050565b5f5f61063f610967565b905061064c818585610a13565b600191505092915050565b5f610660610d01565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156106a85750825b90505f60018367ffffffffffffffff161480156106db57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156106e9575080155b15610720576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561076d576001855f0160086101000a81548160ff0219169083151502179055505b6107778888610d14565b61078033610d2a565b5f86116107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611923565b60405180910390fd5b855f819055508315610822575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516108199190611996565b60405180910390a15b5050505050505050565b5f5f610836610940565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6108c4610b03565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610934575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161092b9190611516565b60405180910390fd5b61093d81610c09565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b61097b8383836001610d3e565b505050565b5f61098b848461082c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a0d57818110156109fe578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109f5939291906119af565b60405180910390fd5b610a0c84848484035f610d3e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a83575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a7a9190611516565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610aea9190611516565b60405180910390fd5b610afe838383610f1b565b505050565b610b0b610967565b73ffffffffffffffffffffffffffffffffffffffff16610b29610507565b73ffffffffffffffffffffffffffffffffffffffff1614610b8857610b4c610967565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b7f9190611516565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bfa575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bf19190611516565b60405180910390fd5b610c055f8383610f1b565b5050565b5f610c12610cda565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f5f610d0b61114a565b90508091505090565b610d1c611173565b610d2682826111b3565b5050565b610d32611173565b610d3b816111ef565b50565b5f610d47610940565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610db9575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610db09190611516565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e29575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e209190611516565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115610f14578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610f0b919061143f565b60405180910390a35b5050505050565b5f610f24610940565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f785781816002015f828254610f6c91906117d6565b9250508190555061104a565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611003578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ffa939291906119af565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110935781816002015f82825403925050819055506110df565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161113c919061143f565b60405180910390a350505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b61117b611273565b6111b1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6111bb611173565b5f6111c4610940565b9050828160030190816111d79190611b7b565b50818160040190816111e99190611b7b565b50505050565b6111f7611173565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611267575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161125e9190611516565b60405180910390fd5b61127081610c09565b50565b5f61127c610d01565b5f0160089054906101000a900460ff16905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6112d382611291565b6112dd818561129b565b93506112ed8185602086016112ab565b6112f6816112b9565b840191505092915050565b5f6020820190508181035f83015261131981846112c9565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61135b82611332565b9050919050565b61136b81611351565b8114611375575f5ffd5b50565b5f8135905061138681611362565b92915050565b5f819050919050565b61139e8161138c565b81146113a8575f5ffd5b50565b5f813590506113b981611395565b92915050565b5f5f604083850312156113d5576113d461132a565b5b5f6113e285828601611378565b92505060206113f3858286016113ab565b9150509250929050565b5f8115159050919050565b611411816113fd565b82525050565b5f60208201905061142a5f830184611408565b92915050565b6114398161138c565b82525050565b5f6020820190506114525f830184611430565b92915050565b5f5f5f6060848603121561146f5761146e61132a565b5b5f61147c86828701611378565b935050602061148d86828701611378565b925050604061149e868287016113ab565b9150509250925092565b5f60ff82169050919050565b6114bd816114a8565b82525050565b5f6020820190506114d65f8301846114b4565b92915050565b5f602082840312156114f1576114f061132a565b5b5f6114fe84828501611378565b91505092915050565b61151081611351565b82525050565b5f6020820190506115295f830184611507565b92915050565b5f602082840312156115445761154361132a565b5b5f611551848285016113ab565b91505092915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611598826112b9565b810181811067ffffffffffffffff821117156115b7576115b6611562565b5b80604052505050565b5f6115c9611321565b90506115d5828261158f565b919050565b5f67ffffffffffffffff8211156115f4576115f3611562565b5b6115fd826112b9565b9050602081019050919050565b828183375f83830152505050565b5f61162a611625846115da565b6115c0565b9050828152602081018484840111156116465761164561155e565b5b61165184828561160a565b509392505050565b5f82601f83011261166d5761166c61155a565b5b813561167d848260208601611618565b91505092915050565b5f5f5f6060848603121561169d5761169c61132a565b5b5f84013567ffffffffffffffff8111156116ba576116b961132e565b5b6116c686828701611659565b935050602084013567ffffffffffffffff8111156116e7576116e661132e565b5b6116f386828701611659565b9250506040611704868287016113ab565b9150509250925092565b5f5f604083850312156117245761172361132a565b5b5f61173185828601611378565b925050602061174285828601611378565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061179057607f821691505b6020821081036117a3576117a261174c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117e08261138c565b91506117eb8361138c565b9250828201905080821115611803576118026117a9565b5b92915050565b7f43617020657863656564656400000000000000000000000000000000000000005f82015250565b5f61183d600c8361129b565b915061184882611809565b602082019050919050565b5f6020820190508181035f83015261186a81611831565b9050919050565b7f4e657720636170203c20737570706c79000000000000000000000000000000005f82015250565b5f6118a560108361129b565b91506118b082611871565b602082019050919050565b5f6020820190508181035f8301526118d281611899565b9050919050565b7f436170206d757374206265203e203000000000000000000000000000000000005f82015250565b5f61190d600f8361129b565b9150611918826118d9565b602082019050919050565b5f6020820190508181035f83015261193a81611901565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61198061197b61197684611941565b61195d565b61194a565b9050919050565b61199081611966565b82525050565b5f6020820190506119a95f830184611987565b92915050565b5f6060820190506119c25f830186611507565b6119cf6020830185611430565b6119dc6040830184611430565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611a407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a05565b611a4a8683611a05565b95508019841693508086168417925050509392505050565b5f611a7c611a77611a728461138c565b61195d565b61138c565b9050919050565b5f819050919050565b611a9583611a62565b611aa9611aa182611a83565b848454611a11565b825550505050565b5f5f905090565b611ac0611ab1565b611acb818484611a8c565b505050565b5b81811015611aee57611ae35f82611ab8565b600181019050611ad1565b5050565b601f821115611b3357611b04816119e4565b611b0d846119f6565b81016020851015611b1c578190505b611b30611b28856119f6565b830182611ad0565b50505b505050565b5f82821c905092915050565b5f611b535f1984600802611b38565b1980831691505092915050565b5f611b6b8383611b44565b9150826002028217905092915050565b611b8482611291565b67ffffffffffffffff811115611b9d57611b9c611562565b5b611ba78254611779565b611bb2828285611af2565b5f60209050601f831160018114611be3575f8415611bd1578287015190505b611bdb8582611b60565b865550611c42565b601f198416611bf1866119e4565b5f5b82811015611c1857848901518255600182019150602085019450602081019050611bf3565b86831015611c355784890151611c31601f891682611b44565b8355505b6001600288020188555050505b50505050505056fea26469706673582212206a0f7d6eae071863db396a76ac6fb048e019f033719e9c2ab7c7a6c3a952deac64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C80 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xB119490E EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x304 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xA7D68896 EQ PUSH2 0x26C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x4F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x32B PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x1779 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x1779 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x396 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3C8 PUSH2 0x967 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D5 DUP2 DUP6 DUP6 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3EA PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x401 PUSH2 0x967 JUMP JUMPDEST SWAP1 POP PUSH2 0x40E DUP6 DUP3 DUP6 PUSH2 0x980 JUMP JUMPDEST PUSH2 0x419 DUP6 DUP6 DUP6 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x43D PUSH2 0xB03 JUMP JUMPDEST PUSH0 SLOAD DUP2 PUSH2 0x448 PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x17D6 JUMP JUMPDEST GT ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48A SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x49D DUP3 DUP3 PUSH2 0xB8A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4AB PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FC PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x505 PUSH0 PUSH2 0xC09 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x511 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x547 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x1779 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x1779 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5E2 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x3E0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0x18BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x63F PUSH2 0x967 JUMP JUMPDEST SWAP1 POP PUSH2 0x64C DUP2 DUP6 DUP6 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x660 PUSH2 0xD01 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x6A8 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x6DB JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x6E9 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x76D JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x777 DUP9 DUP9 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x780 CALLER PUSH2 0xD2A JUMP JUMPDEST PUSH0 DUP7 GT PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B9 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH0 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x822 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x836 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C4 PUSH2 0xB03 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x934 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93D DUP2 PUSH2 0xC09 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x97B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD3E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x98B DUP5 DUP5 PUSH2 0x82C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA0D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9FE JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD3E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA83 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEA SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAFE DUP4 DUP4 DUP4 PUSH2 0xF1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB0B PUSH2 0x967 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB29 PUSH2 0x507 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB88 JUMPI PUSH2 0xB4C PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF1 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC05 PUSH0 DUP4 DUP4 PUSH2 0xF1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC12 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD0B PUSH2 0x114A JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0x1173 JUMP JUMPDEST PUSH2 0xD26 DUP3 DUP3 PUSH2 0x11B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD32 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0xD3B DUP2 PUSH2 0x11EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xD47 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB0 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE29 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE20 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0xF14 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0xF0B SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF24 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF78 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF6C SWAP2 SWAP1 PUSH2 0x17D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x104A JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1003 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1093 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10DF JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x113C SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x117B PUSH2 0x1273 JUMP JUMPDEST PUSH2 0x11B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11BB PUSH2 0x1173 JUMP JUMPDEST PUSH0 PUSH2 0x11C4 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x11D7 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x11E9 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x11F7 PUSH2 0x1173 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1267 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125E SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1270 DUP2 PUSH2 0xC09 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x127C PUSH2 0xD01 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D3 DUP3 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x12DD DUP2 DUP6 PUSH2 0x129B JUMP JUMPDEST SWAP4 POP PUSH2 0x12ED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x12F6 DUP2 PUSH2 0x12B9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1319 DUP2 DUP5 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x135B DUP3 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x136B DUP2 PUSH2 0x1351 JUMP JUMPDEST DUP2 EQ PUSH2 0x1375 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1386 DUP2 PUSH2 0x1362 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139E DUP2 PUSH2 0x138C JUMP JUMPDEST DUP2 EQ PUSH2 0x13A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B9 DUP2 PUSH2 0x1395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D5 JUMPI PUSH2 0x13D4 PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13F3 DUP6 DUP3 DUP7 ADD PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1411 DUP2 PUSH2 0x13FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142A PUSH0 DUP4 ADD DUP5 PUSH2 0x1408 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1439 DUP2 PUSH2 0x138C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1452 PUSH0 DUP4 ADD DUP5 PUSH2 0x1430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x146F JUMPI PUSH2 0x146E PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147C DUP7 DUP3 DUP8 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x148D DUP7 DUP3 DUP8 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x149E DUP7 DUP3 DUP8 ADD PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BD DUP2 PUSH2 0x14A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F1 JUMPI PUSH2 0x14F0 PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FE DUP5 DUP3 DUP6 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1510 DUP2 PUSH2 0x1351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1529 PUSH0 DUP4 ADD DUP5 PUSH2 0x1507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1551 DUP5 DUP3 DUP6 ADD PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1598 DUP3 PUSH2 0x12B9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15B7 JUMPI PUSH2 0x15B6 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15C9 PUSH2 0x1321 JUMP JUMPDEST SWAP1 POP PUSH2 0x15D5 DUP3 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x15F3 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH2 0x15FD DUP3 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x162A PUSH2 0x1625 DUP5 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x15C0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1646 JUMPI PUSH2 0x1645 PUSH2 0x155E JUMP JUMPDEST JUMPDEST PUSH2 0x1651 DUP5 DUP3 DUP6 PUSH2 0x160A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x166D JUMPI PUSH2 0x166C PUSH2 0x155A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x167D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1618 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x169D JUMPI PUSH2 0x169C PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16B9 PUSH2 0x132E JUMP JUMPDEST JUMPDEST PUSH2 0x16C6 DUP7 DUP3 DUP8 ADD PUSH2 0x1659 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0x132E JUMP JUMPDEST JUMPDEST PUSH2 0x16F3 DUP7 DUP3 DUP8 ADD PUSH2 0x1659 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1704 DUP7 DUP3 DUP8 ADD PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1724 JUMPI PUSH2 0x1723 PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1731 DUP6 DUP3 DUP7 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1742 DUP6 DUP3 DUP7 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1790 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17A3 JUMPI PUSH2 0x17A2 PUSH2 0x174C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17E0 DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH2 0x17EB DUP4 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1803 JUMPI PUSH2 0x1802 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4361702065786365656465640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x183D PUSH1 0xC DUP4 PUSH2 0x129B JUMP JUMPDEST SWAP2 POP PUSH2 0x1848 DUP3 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x186A DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E657720636170203C20737570706C7900000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18A5 PUSH1 0x10 DUP4 PUSH2 0x129B JUMP JUMPDEST SWAP2 POP PUSH2 0x18B0 DUP3 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D2 DUP2 PUSH2 0x1899 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436170206D757374206265203E20300000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x190D PUSH1 0xF DUP4 PUSH2 0x129B JUMP JUMPDEST SWAP2 POP PUSH2 0x1918 DUP3 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x193A DUP2 PUSH2 0x1901 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1980 PUSH2 0x197B PUSH2 0x1976 DUP5 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x195D JUMP JUMPDEST PUSH2 0x194A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1990 DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19C2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0x19CF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1430 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x1A4A DUP7 DUP4 PUSH2 0x1A05 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7C PUSH2 0x1A77 PUSH2 0x1A72 DUP5 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x195D JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A95 DUP4 PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x1AA9 PUSH2 0x1AA1 DUP3 PUSH2 0x1A83 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1A11 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1AC0 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x1ACB DUP2 DUP5 DUP5 PUSH2 0x1A8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AE3 PUSH0 DUP3 PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1AD1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B33 JUMPI PUSH2 0x1B04 DUP2 PUSH2 0x19E4 JUMP JUMPDEST PUSH2 0x1B0D DUP5 PUSH2 0x19F6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B1C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B30 PUSH2 0x1B28 DUP6 PUSH2 0x19F6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1AD0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B53 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B38 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6B DUP4 DUP4 PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B84 DUP3 PUSH2 0x1291 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B9D JUMPI PUSH2 0x1B9C PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH2 0x1BA7 DUP3 SLOAD PUSH2 0x1779 JUMP JUMPDEST PUSH2 0x1BB2 DUP3 DUP3 DUP6 PUSH2 0x1AF2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BE3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1BD1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1BDB DUP6 DUP3 PUSH2 0x1B60 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1BF1 DUP7 PUSH2 0x19E4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C18 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BF3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C35 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1C31 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B44 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xF7D6EAE071863DB396A76 0xAC PUSH16 0xB048E019F033719E9C2AB7C7A6C3A952 0xDE 0xAC PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "290:747:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__ERC20_init_530": {
									"entryPoint": 3348,
									"id": 530,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_558": {
									"entryPoint": 4531,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 3370,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 4591,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_approve_1030": {
									"entryPoint": 3390,
									"id": 1030,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_962": {
									"entryPoint": 2414,
									"id": 962,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 4467,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 2819,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_514": {
									"entryPoint": 2368,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_461": {
									"entryPoint": 3329,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 3290,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": 4426,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 4723,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_911": {
									"entryPoint": 2954,
									"id": 911,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1107": {
									"entryPoint": 2407,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1078": {
									"entryPoint": 2432,
									"id": 1078,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 3081,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_786": {
									"entryPoint": 2579,
									"id": 786,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_878": {
									"entryPoint": 3867,
									"id": 878,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_683": {
									"entryPoint": 2092,
									"id": 683,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_707": {
									"entryPoint": 958,
									"id": 707,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_635": {
									"entryPoint": 1185,
									"id": 635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cap_1445": {
									"entryPoint": 1069,
									"id": 1445,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_599": {
									"entryPoint": 1061,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1412": {
									"entryPoint": 1623,
									"id": 1412,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mint_1437": {
									"entryPoint": 1077,
									"id": 1437,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_574": {
									"entryPoint": 800,
									"id": 574,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 1287,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 1268,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_590": {
									"entryPoint": 1340,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_615": {
									"entryPoint": 992,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_739": {
									"entryPoint": 1015,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 2236,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_659": {
									"entryPoint": 1589,
									"id": 659,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateCap_1465": {
									"entryPoint": 1498,
									"id": 1465,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 5656,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 5721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 6628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 6898,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 6465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5642,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4779,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 6787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5466,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 6968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 6840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f": {
									"entryPoint": 6361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94": {
									"entryPoint": 6153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 6796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 6833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18682:8",
										"nodeType": "YulBlock",
										"src": "0:18682:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4359:43:8",
													"nodeType": "YulBlock",
													"src": "4359:43:8",
													"statements": [
														{
															"nativeSrc": "4369:27:8",
															"nodeType": "YulAssignment",
															"src": "4369:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:8"
																},
																"nativeSrc": "4380:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:8",
														"nodeType": "YulTypedName",
														"src": "4341:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:8",
														"nodeType": "YulTypedName",
														"src": "4351:7:8",
														"type": ""
													}
												],
												"src": "4316:86:8"
											},
											{
												"body": {
													"nativeSrc": "4469:51:8",
													"nodeType": "YulBlock",
													"src": "4469:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:8"
																		},
																		"nativeSrc": "4491:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:8"
																},
																"nativeSrc": "4479:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:8"
															},
															"nativeSrc": "4479:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:8",
														"nodeType": "YulTypedName",
														"src": "4457:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:8",
														"nodeType": "YulTypedName",
														"src": "4464:3:8",
														"type": ""
													}
												],
												"src": "4408:112:8"
											},
											{
												"body": {
													"nativeSrc": "4620:120:8",
													"nodeType": "YulBlock",
													"src": "4620:120:8",
													"statements": [
														{
															"nativeSrc": "4630:26:8",
															"nodeType": "YulAssignment",
															"src": "4630:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:8"
																},
																"nativeSrc": "4638:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:8"
																		},
																		"nativeSrc": "4715:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:8"
																},
																"nativeSrc": "4666:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:8"
															},
															"nativeSrc": "4666:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:8",
														"nodeType": "YulTypedName",
														"src": "4592:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:8",
														"nodeType": "YulTypedName",
														"src": "4604:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:8",
														"nodeType": "YulTypedName",
														"src": "4615:4:8",
														"type": ""
													}
												],
												"src": "4526:214:8"
											},
											{
												"body": {
													"nativeSrc": "4812:263:8",
													"nodeType": "YulBlock",
													"src": "4812:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:8",
																"nodeType": "YulBlock",
																"src": "4858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:8"
																			},
																			"nativeSrc": "4860:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:8"
																		},
																		"nativeSrc": "4860:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:8"
																		},
																		"nativeSrc": "4829:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:8"
																},
																"nativeSrc": "4825:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:8"
															},
															"nativeSrc": "4822:119:8",
															"nodeType": "YulIf",
															"src": "4822:119:8"
														},
														{
															"nativeSrc": "4951:117:8",
															"nodeType": "YulBlock",
															"src": "4951:117:8",
															"statements": [
																{
																	"nativeSrc": "4966:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:8"
																				},
																				"nativeSrc": "5026:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:8"
																		},
																		"nativeSrc": "5005:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:8",
														"nodeType": "YulTypedName",
														"src": "4782:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:8",
														"nodeType": "YulTypedName",
														"src": "4793:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:8",
														"nodeType": "YulTypedName",
														"src": "4805:6:8",
														"type": ""
													}
												],
												"src": "4746:329:8"
											},
											{
												"body": {
													"nativeSrc": "5146:53:8",
													"nodeType": "YulBlock",
													"src": "5146:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:8"
																		},
																		"nativeSrc": "5168:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:8"
																},
																"nativeSrc": "5156:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:8"
															},
															"nativeSrc": "5156:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:8",
														"nodeType": "YulTypedName",
														"src": "5134:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:8",
														"nodeType": "YulTypedName",
														"src": "5141:3:8",
														"type": ""
													}
												],
												"src": "5081:118:8"
											},
											{
												"body": {
													"nativeSrc": "5303:124:8",
													"nodeType": "YulBlock",
													"src": "5303:124:8",
													"statements": [
														{
															"nativeSrc": "5313:26:8",
															"nodeType": "YulAssignment",
															"src": "5313:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nativeSrc": "5321:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:8"
																		},
																		"nativeSrc": "5402:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:8"
																},
																"nativeSrc": "5349:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:8"
															},
															"nativeSrc": "5349:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:8",
														"nodeType": "YulTypedName",
														"src": "5275:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:8",
														"nodeType": "YulTypedName",
														"src": "5287:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:8",
														"nodeType": "YulTypedName",
														"src": "5298:4:8",
														"type": ""
													}
												],
												"src": "5205:222:8"
											},
											{
												"body": {
													"nativeSrc": "5499:263:8",
													"nodeType": "YulBlock",
													"src": "5499:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:8",
																"nodeType": "YulBlock",
																"src": "5545:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:8"
																			},
																			"nativeSrc": "5547:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:8"
																		},
																		"nativeSrc": "5547:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:8"
																		},
																		"nativeSrc": "5516:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:8"
																},
																"nativeSrc": "5512:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:8"
															},
															"nativeSrc": "5509:119:8",
															"nodeType": "YulIf",
															"src": "5509:119:8"
														},
														{
															"nativeSrc": "5638:117:8",
															"nodeType": "YulBlock",
															"src": "5638:117:8",
															"statements": [
																{
																	"nativeSrc": "5653:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:8"
																				},
																				"nativeSrc": "5713:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5692:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:8"
																		},
																		"nativeSrc": "5692:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5433:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:8",
														"nodeType": "YulTypedName",
														"src": "5469:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:8",
														"nodeType": "YulTypedName",
														"src": "5480:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:8",
														"nodeType": "YulTypedName",
														"src": "5492:6:8",
														"type": ""
													}
												],
												"src": "5433:329:8"
											},
											{
												"body": {
													"nativeSrc": "5857:28:8",
													"nodeType": "YulBlock",
													"src": "5857:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5874:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5874:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5877:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5877:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5867:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:8"
																},
																"nativeSrc": "5867:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5867:12:8"
															},
															"nativeSrc": "5867:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "5867:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5768:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5768:117:8"
											},
											{
												"body": {
													"nativeSrc": "5980:28:8",
													"nodeType": "YulBlock",
													"src": "5980:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5997:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5997:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6000:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6000:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5990:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5990:6:8"
																},
																"nativeSrc": "5990:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5990:12:8"
															},
															"nativeSrc": "5990:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "5990:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5891:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5891:117:8"
											},
											{
												"body": {
													"nativeSrc": "6042:152:8",
													"nodeType": "YulBlock",
													"src": "6042:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6059:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6059:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6062:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6062:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6052:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6052:6:8"
																},
																"nativeSrc": "6052:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6052:88:8"
															},
															"nativeSrc": "6052:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6052:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6156:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6156:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6159:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6159:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6149:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6149:6:8"
																},
																"nativeSrc": "6149:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6149:15:8"
															},
															"nativeSrc": "6149:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6149:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6183:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6183:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6173:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6173:6:8"
																},
																"nativeSrc": "6173:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6173:15:8"
															},
															"nativeSrc": "6173:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6173:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6014:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6014:180:8"
											},
											{
												"body": {
													"nativeSrc": "6243:238:8",
													"nodeType": "YulBlock",
													"src": "6243:238:8",
													"statements": [
														{
															"nativeSrc": "6253:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6253:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6275:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6275:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6305:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6305:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6283:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "6283:21:8"
																		},
																		"nativeSrc": "6283:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6283:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6271:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6271:3:8"
																},
																"nativeSrc": "6271:40:8",
																"nodeType": "YulFunctionCall",
																"src": "6271:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6257:10:8",
																	"nodeType": "YulTypedName",
																	"src": "6257:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6422:22:8",
																"nodeType": "YulBlock",
																"src": "6422:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6424:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6424:16:8"
																			},
																			"nativeSrc": "6424:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6424:18:8"
																		},
																		"nativeSrc": "6424:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6424:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6365:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "6365:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6377:18:8",
																				"nodeType": "YulLiteral",
																				"src": "6377:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6362:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6362:2:8"
																		},
																		"nativeSrc": "6362:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6362:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6401:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "6401:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6413:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6413:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6398:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6398:2:8"
																		},
																		"nativeSrc": "6398:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6398:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6359:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6359:2:8"
																},
																"nativeSrc": "6359:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6359:62:8"
															},
															"nativeSrc": "6356:88:8",
															"nodeType": "YulIf",
															"src": "6356:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6460:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6460:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6464:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "6464:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6453:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6453:6:8"
																},
																"nativeSrc": "6453:22:8",
																"nodeType": "YulFunctionCall",
																"src": "6453:22:8"
															},
															"nativeSrc": "6453:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "6453:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6200:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6229:6:8",
														"nodeType": "YulTypedName",
														"src": "6229:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6237:4:8",
														"nodeType": "YulTypedName",
														"src": "6237:4:8",
														"type": ""
													}
												],
												"src": "6200:281:8"
											},
											{
												"body": {
													"nativeSrc": "6528:88:8",
													"nodeType": "YulBlock",
													"src": "6528:88:8",
													"statements": [
														{
															"nativeSrc": "6538:30:8",
															"nodeType": "YulAssignment",
															"src": "6538:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6548:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "6548:18:8"
																},
																"nativeSrc": "6548:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6548:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6538:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6538:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6597:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6597:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6605:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6605:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6577:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "6577:19:8"
																},
																"nativeSrc": "6577:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6577:33:8"
															},
															"nativeSrc": "6577:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6577:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6487:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6512:4:8",
														"nodeType": "YulTypedName",
														"src": "6512:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6521:6:8",
														"nodeType": "YulTypedName",
														"src": "6521:6:8",
														"type": ""
													}
												],
												"src": "6487:129:8"
											},
											{
												"body": {
													"nativeSrc": "6689:241:8",
													"nodeType": "YulBlock",
													"src": "6689:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6794:22:8",
																"nodeType": "YulBlock",
																"src": "6794:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6796:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6796:16:8"
																			},
																			"nativeSrc": "6796:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6796:18:8"
																		},
																		"nativeSrc": "6796:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6796:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6766:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6766:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6774:18:8",
																		"nodeType": "YulLiteral",
																		"src": "6774:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6763:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6763:2:8"
																},
																"nativeSrc": "6763:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6763:30:8"
															},
															"nativeSrc": "6760:56:8",
															"nodeType": "YulIf",
															"src": "6760:56:8"
														},
														{
															"nativeSrc": "6826:37:8",
															"nodeType": "YulAssignment",
															"src": "6826:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6856:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6856:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6834:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "6834:21:8"
																},
																"nativeSrc": "6834:29:8",
																"nodeType": "YulFunctionCall",
																"src": "6834:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6826:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6826:4:8"
																}
															]
														},
														{
															"nativeSrc": "6900:23:8",
															"nodeType": "YulAssignment",
															"src": "6900:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6912:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6912:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6918:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6918:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6908:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:8"
																},
																"nativeSrc": "6908:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6908:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6900:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6900:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6622:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6673:6:8",
														"nodeType": "YulTypedName",
														"src": "6673:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6684:4:8",
														"nodeType": "YulTypedName",
														"src": "6684:4:8",
														"type": ""
													}
												],
												"src": "6622:308:8"
											},
											{
												"body": {
													"nativeSrc": "7000:84:8",
													"nodeType": "YulBlock",
													"src": "7000:84:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7024:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7024:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7029:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7029:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7034:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7034:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7011:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7011:12:8"
																},
																"nativeSrc": "7011:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7011:30:8"
															},
															"nativeSrc": "7011:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7011:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7061:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7061:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7066:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7066:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7057:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:8"
																		},
																		"nativeSrc": "7057:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7057:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7075:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7075:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7050:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7050:6:8"
																},
																"nativeSrc": "7050:27:8",
																"nodeType": "YulFunctionCall",
																"src": "7050:27:8"
															},
															"nativeSrc": "7050:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "7050:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6936:148:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6982:3:8",
														"nodeType": "YulTypedName",
														"src": "6982:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6987:3:8",
														"nodeType": "YulTypedName",
														"src": "6987:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6992:6:8",
														"nodeType": "YulTypedName",
														"src": "6992:6:8",
														"type": ""
													}
												],
												"src": "6936:148:8"
											},
											{
												"body": {
													"nativeSrc": "7174:341:8",
													"nodeType": "YulBlock",
													"src": "7174:341:8",
													"statements": [
														{
															"nativeSrc": "7184:75:8",
															"nodeType": "YulAssignment",
															"src": "7184:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7251:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7251:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7209:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "7209:41:8"
																		},
																		"nativeSrc": "7209:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7209:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7193:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "7193:15:8"
																},
																"nativeSrc": "7193:66:8",
																"nodeType": "YulFunctionCall",
																"src": "7193:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7184:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7184:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7275:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7275:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7282:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7282:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7268:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7268:6:8"
																},
																"nativeSrc": "7268:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7268:21:8"
															},
															"nativeSrc": "7268:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7268:21:8"
														},
														{
															"nativeSrc": "7298:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7298:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7313:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7313:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7320:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7320:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7309:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7309:3:8"
																},
																"nativeSrc": "7309:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7309:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7302:3:8",
																	"nodeType": "YulTypedName",
																	"src": "7302:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7363:83:8",
																"nodeType": "YulBlock",
																"src": "7363:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7365:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7365:77:8"
																			},
																			"nativeSrc": "7365:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7365:79:8"
																		},
																		"nativeSrc": "7365:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7365:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7344:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7344:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7349:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7349:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7340:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7340:3:8"
																		},
																		"nativeSrc": "7340:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7340:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7358:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7358:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7337:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7337:2:8"
																},
																"nativeSrc": "7337:25:8",
																"nodeType": "YulFunctionCall",
																"src": "7337:25:8"
															},
															"nativeSrc": "7334:112:8",
															"nodeType": "YulIf",
															"src": "7334:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7492:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7492:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7497:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7497:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7502:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7502:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7455:36:8",
																	"nodeType": "YulIdentifier",
																	"src": "7455:36:8"
																},
																"nativeSrc": "7455:54:8",
																"nodeType": "YulFunctionCall",
																"src": "7455:54:8"
															},
															"nativeSrc": "7455:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "7455:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7090:425:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7147:3:8",
														"nodeType": "YulTypedName",
														"src": "7147:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7152:6:8",
														"nodeType": "YulTypedName",
														"src": "7152:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7160:3:8",
														"nodeType": "YulTypedName",
														"src": "7160:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7168:5:8",
														"nodeType": "YulTypedName",
														"src": "7168:5:8",
														"type": ""
													}
												],
												"src": "7090:425:8"
											},
											{
												"body": {
													"nativeSrc": "7597:278:8",
													"nodeType": "YulBlock",
													"src": "7597:278:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7646:83:8",
																"nodeType": "YulBlock",
																"src": "7646:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7648:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7648:77:8"
																			},
																			"nativeSrc": "7648:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7648:79:8"
																		},
																		"nativeSrc": "7648:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7648:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7625:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7625:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7633:4:8",
																						"nodeType": "YulLiteral",
																						"src": "7633:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7621:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7621:3:8"
																				},
																				"nativeSrc": "7621:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7621:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7640:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7640:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7617:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7617:3:8"
																		},
																		"nativeSrc": "7617:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7617:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7610:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7610:6:8"
																},
																"nativeSrc": "7610:35:8",
																"nodeType": "YulFunctionCall",
																"src": "7610:35:8"
															},
															"nativeSrc": "7607:122:8",
															"nodeType": "YulIf",
															"src": "7607:122:8"
														},
														{
															"nativeSrc": "7738:34:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7738:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7765:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7765:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7752:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7752:12:8"
																},
																"nativeSrc": "7752:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7752:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7742:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7742:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7781:88:8",
															"nodeType": "YulAssignment",
															"src": "7781:88:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7842:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7842:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7850:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7850:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7838:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7838:3:8"
																		},
																		"nativeSrc": "7838:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7838:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7857:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7857:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7865:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7865:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7790:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "7790:47:8"
																},
																"nativeSrc": "7790:79:8",
																"nodeType": "YulFunctionCall",
																"src": "7790:79:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7781:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7781:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7535:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7575:6:8",
														"nodeType": "YulTypedName",
														"src": "7575:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7583:3:8",
														"nodeType": "YulTypedName",
														"src": "7583:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7591:5:8",
														"nodeType": "YulTypedName",
														"src": "7591:5:8",
														"type": ""
													}
												],
												"src": "7535:340:8"
											},
											{
												"body": {
													"nativeSrc": "8001:859:8",
													"nodeType": "YulBlock",
													"src": "8001:859:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8047:83:8",
																"nodeType": "YulBlock",
																"src": "8047:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8049:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8049:77:8"
																			},
																			"nativeSrc": "8049:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8049:79:8"
																		},
																		"nativeSrc": "8049:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8049:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8022:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8022:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8031:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8031:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8018:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8018:3:8"
																		},
																		"nativeSrc": "8018:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8018:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8043:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8043:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8014:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8014:3:8"
																},
																"nativeSrc": "8014:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8014:32:8"
															},
															"nativeSrc": "8011:119:8",
															"nodeType": "YulIf",
															"src": "8011:119:8"
														},
														{
															"nativeSrc": "8140:287:8",
															"nodeType": "YulBlock",
															"src": "8140:287:8",
															"statements": [
																{
																	"nativeSrc": "8155:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8155:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8186:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8186:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8197:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8197:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8182:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8182:3:8"
																				},
																				"nativeSrc": "8182:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8182:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8169:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "8169:12:8"
																		},
																		"nativeSrc": "8169:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8169:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8159:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8159:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8247:83:8",
																		"nodeType": "YulBlock",
																		"src": "8247:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8249:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "8249:77:8"
																					},
																					"nativeSrc": "8249:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8249:79:8"
																				},
																				"nativeSrc": "8249:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8249:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8219:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8219:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8227:18:8",
																				"nodeType": "YulLiteral",
																				"src": "8227:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8216:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8216:2:8"
																		},
																		"nativeSrc": "8216:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8216:30:8"
																	},
																	"nativeSrc": "8213:117:8",
																	"nodeType": "YulIf",
																	"src": "8213:117:8"
																},
																{
																	"nativeSrc": "8344:73:8",
																	"nodeType": "YulAssignment",
																	"src": "8344:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8389:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8389:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8400:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8400:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8385:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8385:3:8"
																				},
																				"nativeSrc": "8385:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8385:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8409:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8409:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8354:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "8354:30:8"
																		},
																		"nativeSrc": "8354:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8354:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8344:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8344:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8437:288:8",
															"nodeType": "YulBlock",
															"src": "8437:288:8",
															"statements": [
																{
																	"nativeSrc": "8452:46:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8452:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8483:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8483:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8494:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8494:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8479:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8479:3:8"
																				},
																				"nativeSrc": "8479:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8479:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8466:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "8466:12:8"
																		},
																		"nativeSrc": "8466:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8466:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8456:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8456:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8545:83:8",
																		"nodeType": "YulBlock",
																		"src": "8545:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8547:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "8547:77:8"
																					},
																					"nativeSrc": "8547:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8547:79:8"
																				},
																				"nativeSrc": "8547:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8547:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8517:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8517:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8525:18:8",
																				"nodeType": "YulLiteral",
																				"src": "8525:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8514:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8514:2:8"
																		},
																		"nativeSrc": "8514:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8514:30:8"
																	},
																	"nativeSrc": "8511:117:8",
																	"nodeType": "YulIf",
																	"src": "8511:117:8"
																},
																{
																	"nativeSrc": "8642:73:8",
																	"nodeType": "YulAssignment",
																	"src": "8642:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8687:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8687:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8698:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8698:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8683:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8683:3:8"
																				},
																				"nativeSrc": "8683:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8683:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8707:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8707:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8652:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "8652:30:8"
																		},
																		"nativeSrc": "8652:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8652:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8642:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8642:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8735:118:8",
															"nodeType": "YulBlock",
															"src": "8735:118:8",
															"statements": [
																{
																	"nativeSrc": "8750:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8750:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8764:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8764:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8754:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8754:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8780:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8780:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8815:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8815:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8826:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8826:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8811:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8811:3:8"
																				},
																				"nativeSrc": "8811:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8811:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8835:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8835:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8790:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8790:20:8"
																		},
																		"nativeSrc": "8790:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8790:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8780:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8780:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nativeSrc": "7881:979:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7955:9:8",
														"nodeType": "YulTypedName",
														"src": "7955:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7966:7:8",
														"nodeType": "YulTypedName",
														"src": "7966:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7978:6:8",
														"nodeType": "YulTypedName",
														"src": "7978:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7986:6:8",
														"nodeType": "YulTypedName",
														"src": "7986:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7994:6:8",
														"nodeType": "YulTypedName",
														"src": "7994:6:8",
														"type": ""
													}
												],
												"src": "7881:979:8"
											},
											{
												"body": {
													"nativeSrc": "8949:391:8",
													"nodeType": "YulBlock",
													"src": "8949:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8995:83:8",
																"nodeType": "YulBlock",
																"src": "8995:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8997:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8997:77:8"
																			},
																			"nativeSrc": "8997:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8997:79:8"
																		},
																		"nativeSrc": "8997:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8997:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8970:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8970:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8979:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8979:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8966:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8966:3:8"
																		},
																		"nativeSrc": "8966:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8966:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8991:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8991:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8962:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8962:3:8"
																},
																"nativeSrc": "8962:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8962:32:8"
															},
															"nativeSrc": "8959:119:8",
															"nodeType": "YulIf",
															"src": "8959:119:8"
														},
														{
															"nativeSrc": "9088:117:8",
															"nodeType": "YulBlock",
															"src": "9088:117:8",
															"statements": [
																{
																	"nativeSrc": "9103:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9103:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9117:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9117:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9107:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9107:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9132:63:8",
																	"nodeType": "YulAssignment",
																	"src": "9132:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9167:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9167:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9178:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9178:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9163:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9163:3:8"
																				},
																				"nativeSrc": "9163:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9163:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9187:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9187:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9142:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "9142:20:8"
																		},
																		"nativeSrc": "9142:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9142:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9132:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9132:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9215:118:8",
															"nodeType": "YulBlock",
															"src": "9215:118:8",
															"statements": [
																{
																	"nativeSrc": "9230:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9230:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9244:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9244:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9234:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9234:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9260:63:8",
																	"nodeType": "YulAssignment",
																	"src": "9260:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9295:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9295:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9306:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9306:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9291:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9291:3:8"
																				},
																				"nativeSrc": "9291:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9291:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9315:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9315:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9270:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "9270:20:8"
																		},
																		"nativeSrc": "9270:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9270:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9260:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9260:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8866:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8911:9:8",
														"nodeType": "YulTypedName",
														"src": "8911:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8922:7:8",
														"nodeType": "YulTypedName",
														"src": "8922:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8934:6:8",
														"nodeType": "YulTypedName",
														"src": "8934:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8942:6:8",
														"nodeType": "YulTypedName",
														"src": "8942:6:8",
														"type": ""
													}
												],
												"src": "8866:474:8"
											},
											{
												"body": {
													"nativeSrc": "9374:152:8",
													"nodeType": "YulBlock",
													"src": "9374:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9391:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9391:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9394:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9394:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9384:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9384:6:8"
																},
																"nativeSrc": "9384:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9384:88:8"
															},
															"nativeSrc": "9384:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9384:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9488:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9488:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9491:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9491:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9481:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9481:6:8"
																},
																"nativeSrc": "9481:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9481:15:8"
															},
															"nativeSrc": "9481:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9481:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9512:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9512:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9515:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9515:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9505:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9505:6:8"
																},
																"nativeSrc": "9505:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9505:15:8"
															},
															"nativeSrc": "9505:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9505:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9346:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9346:180:8"
											},
											{
												"body": {
													"nativeSrc": "9583:269:8",
													"nodeType": "YulBlock",
													"src": "9583:269:8",
													"statements": [
														{
															"nativeSrc": "9593:22:8",
															"nodeType": "YulAssignment",
															"src": "9593:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9607:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9607:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9613:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9613:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9603:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9603:3:8"
																},
																"nativeSrc": "9603:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9603:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9593:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9593:6:8"
																}
															]
														},
														{
															"nativeSrc": "9624:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9624:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9654:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9654:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9660:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9660:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9650:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9650:3:8"
																},
																"nativeSrc": "9650:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9650:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9628:18:8",
																	"nodeType": "YulTypedName",
																	"src": "9628:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9701:51:8",
																"nodeType": "YulBlock",
																"src": "9701:51:8",
																"statements": [
																	{
																		"nativeSrc": "9715:27:8",
																		"nodeType": "YulAssignment",
																		"src": "9715:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9729:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9729:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9737:4:8",
																					"nodeType": "YulLiteral",
																					"src": "9737:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9725:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9725:3:8"
																			},
																			"nativeSrc": "9725:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9725:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9715:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9715:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9681:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9681:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9674:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9674:6:8"
																},
																"nativeSrc": "9674:26:8",
																"nodeType": "YulFunctionCall",
																"src": "9674:26:8"
															},
															"nativeSrc": "9671:81:8",
															"nodeType": "YulIf",
															"src": "9671:81:8"
														},
														{
															"body": {
																"nativeSrc": "9804:42:8",
																"nodeType": "YulBlock",
																"src": "9804:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9818:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9818:16:8"
																			},
																			"nativeSrc": "9818:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9818:18:8"
																		},
																		"nativeSrc": "9818:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9818:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9768:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9768:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9791:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9791:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9799:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9799:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9788:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9788:2:8"
																		},
																		"nativeSrc": "9788:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9788:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9765:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9765:2:8"
																},
																"nativeSrc": "9765:38:8",
																"nodeType": "YulFunctionCall",
																"src": "9765:38:8"
															},
															"nativeSrc": "9762:84:8",
															"nodeType": "YulIf",
															"src": "9762:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9532:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9567:4:8",
														"nodeType": "YulTypedName",
														"src": "9567:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9576:6:8",
														"nodeType": "YulTypedName",
														"src": "9576:6:8",
														"type": ""
													}
												],
												"src": "9532:320:8"
											},
											{
												"body": {
													"nativeSrc": "9886:152:8",
													"nodeType": "YulBlock",
													"src": "9886:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9903:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9903:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9906:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9906:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9896:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9896:6:8"
																},
																"nativeSrc": "9896:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9896:88:8"
															},
															"nativeSrc": "9896:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9896:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10000:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10000:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10003:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10003:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9993:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9993:6:8"
																},
																"nativeSrc": "9993:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9993:15:8"
															},
															"nativeSrc": "9993:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9993:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10024:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10024:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10027:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10027:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10017:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10017:6:8"
																},
																"nativeSrc": "10017:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10017:15:8"
															},
															"nativeSrc": "10017:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10017:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9858:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9858:180:8"
											},
											{
												"body": {
													"nativeSrc": "10088:147:8",
													"nodeType": "YulBlock",
													"src": "10088:147:8",
													"statements": [
														{
															"nativeSrc": "10098:25:8",
															"nodeType": "YulAssignment",
															"src": "10098:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10121:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10121:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10103:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10103:17:8"
																},
																"nativeSrc": "10103:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10103:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10098:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10098:1:8"
																}
															]
														},
														{
															"nativeSrc": "10132:25:8",
															"nodeType": "YulAssignment",
															"src": "10132:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10155:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10155:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10137:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10137:17:8"
																},
																"nativeSrc": "10137:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10137:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10132:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10132:1:8"
																}
															]
														},
														{
															"nativeSrc": "10166:16:8",
															"nodeType": "YulAssignment",
															"src": "10166:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10177:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10177:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10180:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10180:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10173:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10173:3:8"
																},
																"nativeSrc": "10173:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10173:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10166:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10166:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10206:22:8",
																"nodeType": "YulBlock",
																"src": "10206:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10208:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10208:16:8"
																			},
																			"nativeSrc": "10208:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10208:18:8"
																		},
																		"nativeSrc": "10208:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10208:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10198:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10198:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10201:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10201:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10195:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10195:2:8"
																},
																"nativeSrc": "10195:10:8",
																"nodeType": "YulFunctionCall",
																"src": "10195:10:8"
															},
															"nativeSrc": "10192:36:8",
															"nodeType": "YulIf",
															"src": "10192:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10044:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10075:1:8",
														"nodeType": "YulTypedName",
														"src": "10075:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10078:1:8",
														"nodeType": "YulTypedName",
														"src": "10078:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10084:3:8",
														"nodeType": "YulTypedName",
														"src": "10084:3:8",
														"type": ""
													}
												],
												"src": "10044:191:8"
											},
											{
												"body": {
													"nativeSrc": "10347:56:8",
													"nodeType": "YulBlock",
													"src": "10347:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10369:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10369:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10377:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10377:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10365:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10365:3:8"
																		},
																		"nativeSrc": "10365:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10365:14:8"
																	},
																	{
																		"hexValue": "436170206578636565646564",
																		"kind": "string",
																		"nativeSrc": "10381:14:8",
																		"nodeType": "YulLiteral",
																		"src": "10381:14:8",
																		"type": "",
																		"value": "Cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10358:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10358:6:8"
																},
																"nativeSrc": "10358:38:8",
																"nodeType": "YulFunctionCall",
																"src": "10358:38:8"
															},
															"nativeSrc": "10358:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "10358:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94",
												"nativeSrc": "10241:162:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10339:6:8",
														"nodeType": "YulTypedName",
														"src": "10339:6:8",
														"type": ""
													}
												],
												"src": "10241:162:8"
											},
											{
												"body": {
													"nativeSrc": "10555:220:8",
													"nodeType": "YulBlock",
													"src": "10555:220:8",
													"statements": [
														{
															"nativeSrc": "10565:74:8",
															"nodeType": "YulAssignment",
															"src": "10565:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10631:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10631:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10636:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10636:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10572:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10572:58:8"
																},
																"nativeSrc": "10572:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10572:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10565:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10565:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10737:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10737:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94",
																	"nativeSrc": "10648:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10648:88:8"
																},
																"nativeSrc": "10648:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10648:93:8"
															},
															"nativeSrc": "10648:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10648:93:8"
														},
														{
															"nativeSrc": "10750:19:8",
															"nodeType": "YulAssignment",
															"src": "10750:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10761:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10761:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10766:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10766:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10757:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10757:3:8"
																},
																"nativeSrc": "10757:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10757:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10750:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10750:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10409:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10543:3:8",
														"nodeType": "YulTypedName",
														"src": "10543:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10551:3:8",
														"nodeType": "YulTypedName",
														"src": "10551:3:8",
														"type": ""
													}
												],
												"src": "10409:366:8"
											},
											{
												"body": {
													"nativeSrc": "10952:248:8",
													"nodeType": "YulBlock",
													"src": "10952:248:8",
													"statements": [
														{
															"nativeSrc": "10962:26:8",
															"nodeType": "YulAssignment",
															"src": "10962:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10974:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10974:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10985:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10985:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10970:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10970:3:8"
																},
																"nativeSrc": "10970:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10970:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10962:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10962:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11009:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11009:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11020:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11020:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11005:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11005:3:8"
																		},
																		"nativeSrc": "11005:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11005:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11028:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11028:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11034:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11034:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11024:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11024:3:8"
																		},
																		"nativeSrc": "11024:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11024:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10998:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10998:6:8"
																},
																"nativeSrc": "10998:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10998:47:8"
															},
															"nativeSrc": "10998:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10998:47:8"
														},
														{
															"nativeSrc": "11054:139:8",
															"nodeType": "YulAssignment",
															"src": "11054:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11188:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11188:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11062:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11062:124:8"
																},
																"nativeSrc": "11062:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11062:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11054:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11054:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10781:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10932:9:8",
														"nodeType": "YulTypedName",
														"src": "10932:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10947:4:8",
														"nodeType": "YulTypedName",
														"src": "10947:4:8",
														"type": ""
													}
												],
												"src": "10781:419:8"
											},
											{
												"body": {
													"nativeSrc": "11312:60:8",
													"nodeType": "YulBlock",
													"src": "11312:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11334:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11334:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11342:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11342:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11330:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11330:3:8"
																		},
																		"nativeSrc": "11330:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11330:14:8"
																	},
																	{
																		"hexValue": "4e657720636170203c20737570706c79",
																		"kind": "string",
																		"nativeSrc": "11346:18:8",
																		"nodeType": "YulLiteral",
																		"src": "11346:18:8",
																		"type": "",
																		"value": "New cap < supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11323:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11323:6:8"
																},
																"nativeSrc": "11323:42:8",
																"nodeType": "YulFunctionCall",
																"src": "11323:42:8"
															},
															"nativeSrc": "11323:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "11323:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535",
												"nativeSrc": "11206:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11304:6:8",
														"nodeType": "YulTypedName",
														"src": "11304:6:8",
														"type": ""
													}
												],
												"src": "11206:166:8"
											},
											{
												"body": {
													"nativeSrc": "11524:220:8",
													"nodeType": "YulBlock",
													"src": "11524:220:8",
													"statements": [
														{
															"nativeSrc": "11534:74:8",
															"nodeType": "YulAssignment",
															"src": "11534:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11600:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11600:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11605:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11605:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11541:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11541:58:8"
																},
																"nativeSrc": "11541:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11541:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11534:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11534:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11706:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11706:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535",
																	"nativeSrc": "11617:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11617:88:8"
																},
																"nativeSrc": "11617:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11617:93:8"
															},
															"nativeSrc": "11617:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11617:93:8"
														},
														{
															"nativeSrc": "11719:19:8",
															"nodeType": "YulAssignment",
															"src": "11719:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11730:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11730:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11735:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11735:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11726:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11726:3:8"
																},
																"nativeSrc": "11726:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11726:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11719:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11378:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11512:3:8",
														"nodeType": "YulTypedName",
														"src": "11512:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11520:3:8",
														"nodeType": "YulTypedName",
														"src": "11520:3:8",
														"type": ""
													}
												],
												"src": "11378:366:8"
											},
											{
												"body": {
													"nativeSrc": "11921:248:8",
													"nodeType": "YulBlock",
													"src": "11921:248:8",
													"statements": [
														{
															"nativeSrc": "11931:26:8",
															"nodeType": "YulAssignment",
															"src": "11931:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11943:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11943:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11954:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11954:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11939:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11939:3:8"
																},
																"nativeSrc": "11939:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11939:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11931:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11931:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11978:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11978:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11989:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11989:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11974:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11974:3:8"
																		},
																		"nativeSrc": "11974:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11974:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11997:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11997:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12003:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12003:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11993:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11993:3:8"
																		},
																		"nativeSrc": "11993:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11993:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11967:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11967:6:8"
																},
																"nativeSrc": "11967:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11967:47:8"
															},
															"nativeSrc": "11967:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11967:47:8"
														},
														{
															"nativeSrc": "12023:139:8",
															"nodeType": "YulAssignment",
															"src": "12023:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12157:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12157:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12031:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12031:124:8"
																},
																"nativeSrc": "12031:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12031:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12023:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12023:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11750:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11901:9:8",
														"nodeType": "YulTypedName",
														"src": "11901:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11916:4:8",
														"nodeType": "YulTypedName",
														"src": "11916:4:8",
														"type": ""
													}
												],
												"src": "11750:419:8"
											},
											{
												"body": {
													"nativeSrc": "12281:59:8",
													"nodeType": "YulBlock",
													"src": "12281:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12303:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12303:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12311:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12311:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12299:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12299:3:8"
																		},
																		"nativeSrc": "12299:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12299:14:8"
																	},
																	{
																		"hexValue": "436170206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "12315:17:8",
																		"nodeType": "YulLiteral",
																		"src": "12315:17:8",
																		"type": "",
																		"value": "Cap must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12292:6:8"
																},
																"nativeSrc": "12292:41:8",
																"nodeType": "YulFunctionCall",
																"src": "12292:41:8"
															},
															"nativeSrc": "12292:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "12292:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f",
												"nativeSrc": "12175:165:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12273:6:8",
														"nodeType": "YulTypedName",
														"src": "12273:6:8",
														"type": ""
													}
												],
												"src": "12175:165:8"
											},
											{
												"body": {
													"nativeSrc": "12492:220:8",
													"nodeType": "YulBlock",
													"src": "12492:220:8",
													"statements": [
														{
															"nativeSrc": "12502:74:8",
															"nodeType": "YulAssignment",
															"src": "12502:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12568:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12568:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12573:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12573:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12509:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12509:58:8"
																},
																"nativeSrc": "12509:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12509:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12502:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12502:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12674:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12674:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f",
																	"nativeSrc": "12585:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12585:88:8"
																},
																"nativeSrc": "12585:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12585:93:8"
															},
															"nativeSrc": "12585:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12585:93:8"
														},
														{
															"nativeSrc": "12687:19:8",
															"nodeType": "YulAssignment",
															"src": "12687:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12698:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12698:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12703:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12703:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12694:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12694:3:8"
																},
																"nativeSrc": "12694:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12694:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12687:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12687:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12346:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12480:3:8",
														"nodeType": "YulTypedName",
														"src": "12480:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12488:3:8",
														"nodeType": "YulTypedName",
														"src": "12488:3:8",
														"type": ""
													}
												],
												"src": "12346:366:8"
											},
											{
												"body": {
													"nativeSrc": "12889:248:8",
													"nodeType": "YulBlock",
													"src": "12889:248:8",
													"statements": [
														{
															"nativeSrc": "12899:26:8",
															"nodeType": "YulAssignment",
															"src": "12899:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12911:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12911:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12922:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12922:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12907:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12907:3:8"
																},
																"nativeSrc": "12907:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12907:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12899:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12899:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12946:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12946:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12957:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12957:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12942:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12942:3:8"
																		},
																		"nativeSrc": "12942:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12942:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12965:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12965:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12971:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12971:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12961:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12961:3:8"
																		},
																		"nativeSrc": "12961:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12961:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12935:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12935:6:8"
																},
																"nativeSrc": "12935:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12935:47:8"
															},
															"nativeSrc": "12935:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12935:47:8"
														},
														{
															"nativeSrc": "12991:139:8",
															"nodeType": "YulAssignment",
															"src": "12991:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13125:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13125:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12999:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12999:124:8"
																},
																"nativeSrc": "12999:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12999:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12991:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12991:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12718:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12869:9:8",
														"nodeType": "YulTypedName",
														"src": "12869:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12884:4:8",
														"nodeType": "YulTypedName",
														"src": "12884:4:8",
														"type": ""
													}
												],
												"src": "12718:419:8"
											},
											{
												"body": {
													"nativeSrc": "13196:32:8",
													"nodeType": "YulBlock",
													"src": "13196:32:8",
													"statements": [
														{
															"nativeSrc": "13206:16:8",
															"nodeType": "YulAssignment",
															"src": "13206:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "13217:5:8",
																"nodeType": "YulIdentifier",
																"src": "13217:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13206:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "13206:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "13143:85:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13178:5:8",
														"nodeType": "YulTypedName",
														"src": "13178:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13188:7:8",
														"nodeType": "YulTypedName",
														"src": "13188:7:8",
														"type": ""
													}
												],
												"src": "13143:85:8"
											},
											{
												"body": {
													"nativeSrc": "13278:57:8",
													"nodeType": "YulBlock",
													"src": "13278:57:8",
													"statements": [
														{
															"nativeSrc": "13288:41:8",
															"nodeType": "YulAssignment",
															"src": "13288:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13303:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13303:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13310:18:8",
																		"nodeType": "YulLiteral",
																		"src": "13310:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13299:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13299:3:8"
																},
																"nativeSrc": "13299:30:8",
																"nodeType": "YulFunctionCall",
																"src": "13299:30:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13288:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "13288:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "13234:101:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13260:5:8",
														"nodeType": "YulTypedName",
														"src": "13260:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13270:7:8",
														"nodeType": "YulTypedName",
														"src": "13270:7:8",
														"type": ""
													}
												],
												"src": "13234:101:8"
											},
											{
												"body": {
													"nativeSrc": "13373:28:8",
													"nodeType": "YulBlock",
													"src": "13373:28:8",
													"statements": [
														{
															"nativeSrc": "13383:12:8",
															"nodeType": "YulAssignment",
															"src": "13383:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "13390:5:8",
																"nodeType": "YulIdentifier",
																"src": "13390:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13383:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13383:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "13341:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13359:5:8",
														"nodeType": "YulTypedName",
														"src": "13359:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13369:3:8",
														"nodeType": "YulTypedName",
														"src": "13369:3:8",
														"type": ""
													}
												],
												"src": "13341:60:8"
											},
											{
												"body": {
													"nativeSrc": "13474:89:8",
													"nodeType": "YulBlock",
													"src": "13474:89:8",
													"statements": [
														{
															"nativeSrc": "13484:73:8",
															"nodeType": "YulAssignment",
															"src": "13484:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13549:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "13549:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "13523:25:8",
																					"nodeType": "YulIdentifier",
																					"src": "13523:25:8"
																				},
																				"nativeSrc": "13523:32:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13523:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13514:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "13514:8:8"
																		},
																		"nativeSrc": "13514:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13514:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "13497:16:8",
																	"nodeType": "YulIdentifier",
																	"src": "13497:16:8"
																},
																"nativeSrc": "13497:60:8",
																"nodeType": "YulFunctionCall",
																"src": "13497:60:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13484:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "13484:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "13407:156:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13454:5:8",
														"nodeType": "YulTypedName",
														"src": "13454:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13464:9:8",
														"nodeType": "YulTypedName",
														"src": "13464:9:8",
														"type": ""
													}
												],
												"src": "13407:156:8"
											},
											{
												"body": {
													"nativeSrc": "13641:73:8",
													"nodeType": "YulBlock",
													"src": "13641:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13658:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13658:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13701:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "13701:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "13663:37:8",
																			"nodeType": "YulIdentifier",
																			"src": "13663:37:8"
																		},
																		"nativeSrc": "13663:44:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13663:44:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13651:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13651:6:8"
																},
																"nativeSrc": "13651:57:8",
																"nodeType": "YulFunctionCall",
																"src": "13651:57:8"
															},
															"nativeSrc": "13651:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "13651:57:8"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "13569:145:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13629:5:8",
														"nodeType": "YulTypedName",
														"src": "13629:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13636:3:8",
														"nodeType": "YulTypedName",
														"src": "13636:3:8",
														"type": ""
													}
												],
												"src": "13569:145:8"
											},
											{
												"body": {
													"nativeSrc": "13825:131:8",
													"nodeType": "YulBlock",
													"src": "13825:131:8",
													"statements": [
														{
															"nativeSrc": "13835:26:8",
															"nodeType": "YulAssignment",
															"src": "13835:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13847:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13847:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13858:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13858:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13843:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13843:3:8"
																},
																"nativeSrc": "13843:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13843:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13835:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13835:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13922:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13922:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13935:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13935:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13946:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13946:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13931:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13931:3:8"
																		},
																		"nativeSrc": "13931:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13931:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "13871:50:8",
																	"nodeType": "YulIdentifier",
																	"src": "13871:50:8"
																},
																"nativeSrc": "13871:78:8",
																"nodeType": "YulFunctionCall",
																"src": "13871:78:8"
															},
															"nativeSrc": "13871:78:8",
															"nodeType": "YulExpressionStatement",
															"src": "13871:78:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "13720:236:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13797:9:8",
														"nodeType": "YulTypedName",
														"src": "13797:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13809:6:8",
														"nodeType": "YulTypedName",
														"src": "13809:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13820:4:8",
														"nodeType": "YulTypedName",
														"src": "13820:4:8",
														"type": ""
													}
												],
												"src": "13720:236:8"
											},
											{
												"body": {
													"nativeSrc": "14116:288:8",
													"nodeType": "YulBlock",
													"src": "14116:288:8",
													"statements": [
														{
															"nativeSrc": "14126:26:8",
															"nodeType": "YulAssignment",
															"src": "14126:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14138:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14138:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14149:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14149:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14134:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14134:3:8"
																},
																"nativeSrc": "14134:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14134:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14126:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14126:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14206:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14206:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14219:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14219:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14230:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14230:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14215:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14215:3:8"
																		},
																		"nativeSrc": "14215:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14215:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14162:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14162:43:8"
																},
																"nativeSrc": "14162:71:8",
																"nodeType": "YulFunctionCall",
																"src": "14162:71:8"
															},
															"nativeSrc": "14162:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "14162:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14287:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14287:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14300:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14300:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14311:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14311:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14296:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14296:3:8"
																		},
																		"nativeSrc": "14296:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14296:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14243:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14243:43:8"
																},
																"nativeSrc": "14243:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14243:72:8"
															},
															"nativeSrc": "14243:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14243:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14369:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14369:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14382:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14382:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14393:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14393:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14378:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14378:3:8"
																		},
																		"nativeSrc": "14378:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14378:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14325:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14325:43:8"
																},
																"nativeSrc": "14325:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14325:72:8"
															},
															"nativeSrc": "14325:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14325:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13962:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14072:9:8",
														"nodeType": "YulTypedName",
														"src": "14072:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14084:6:8",
														"nodeType": "YulTypedName",
														"src": "14084:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14092:6:8",
														"nodeType": "YulTypedName",
														"src": "14092:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14100:6:8",
														"nodeType": "YulTypedName",
														"src": "14100:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14111:4:8",
														"nodeType": "YulTypedName",
														"src": "14111:4:8",
														"type": ""
													}
												],
												"src": "13962:442:8"
											},
											{
												"body": {
													"nativeSrc": "14464:87:8",
													"nodeType": "YulBlock",
													"src": "14464:87:8",
													"statements": [
														{
															"nativeSrc": "14474:11:8",
															"nodeType": "YulAssignment",
															"src": "14474:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "14482:3:8",
																"nodeType": "YulIdentifier",
																"src": "14482:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14474:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14474:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14502:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14502:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "14505:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14505:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14495:6:8"
																},
																"nativeSrc": "14495:14:8",
																"nodeType": "YulFunctionCall",
																"src": "14495:14:8"
															},
															"nativeSrc": "14495:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "14495:14:8"
														},
														{
															"nativeSrc": "14518:26:8",
															"nodeType": "YulAssignment",
															"src": "14518:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14536:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14539:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14539:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "14526:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "14526:9:8"
																},
																"nativeSrc": "14526:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14526:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14518:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14518:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "14410:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14451:3:8",
														"nodeType": "YulTypedName",
														"src": "14451:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14459:4:8",
														"nodeType": "YulTypedName",
														"src": "14459:4:8",
														"type": ""
													}
												],
												"src": "14410:141:8"
											},
											{
												"body": {
													"nativeSrc": "14601:49:8",
													"nodeType": "YulBlock",
													"src": "14601:49:8",
													"statements": [
														{
															"nativeSrc": "14611:33:8",
															"nodeType": "YulAssignment",
															"src": "14611:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14629:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "14629:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14636:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14636:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14625:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14625:3:8"
																		},
																		"nativeSrc": "14625:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14625:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14641:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14641:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14621:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14621:3:8"
																},
																"nativeSrc": "14621:23:8",
																"nodeType": "YulFunctionCall",
																"src": "14621:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14611:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14611:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "14557:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14584:5:8",
														"nodeType": "YulTypedName",
														"src": "14584:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14594:6:8",
														"nodeType": "YulTypedName",
														"src": "14594:6:8",
														"type": ""
													}
												],
												"src": "14557:93:8"
											},
											{
												"body": {
													"nativeSrc": "14709:54:8",
													"nodeType": "YulBlock",
													"src": "14709:54:8",
													"statements": [
														{
															"nativeSrc": "14719:37:8",
															"nodeType": "YulAssignment",
															"src": "14719:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14744:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14744:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14750:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14750:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14740:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14740:3:8"
																},
																"nativeSrc": "14740:16:8",
																"nodeType": "YulFunctionCall",
																"src": "14740:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14719:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "14719:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "14656:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14684:4:8",
														"nodeType": "YulTypedName",
														"src": "14684:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14690:5:8",
														"nodeType": "YulTypedName",
														"src": "14690:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14700:8:8",
														"nodeType": "YulTypedName",
														"src": "14700:8:8",
														"type": ""
													}
												],
												"src": "14656:107:8"
											},
											{
												"body": {
													"nativeSrc": "14845:317:8",
													"nodeType": "YulBlock",
													"src": "14845:317:8",
													"statements": [
														{
															"nativeSrc": "14855:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14855:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14876:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "14876:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14888:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14888:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14872:3:8"
																},
																"nativeSrc": "14872:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14872:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14859:9:8",
																	"nodeType": "YulTypedName",
																	"src": "14859:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14899:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14899:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14930:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14930:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14941:66:8",
																		"nodeType": "YulLiteral",
																		"src": "14941:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14911:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "14911:18:8"
																},
																"nativeSrc": "14911:97:8",
																"nodeType": "YulFunctionCall",
																"src": "14911:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14903:4:8",
																	"nodeType": "YulTypedName",
																	"src": "14903:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15017:51:8",
															"nodeType": "YulAssignment",
															"src": "15017:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15048:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15048:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "15059:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "15059:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15029:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "15029:18:8"
																},
																"nativeSrc": "15029:39:8",
																"nodeType": "YulFunctionCall",
																"src": "15029:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "15017:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "15017:8:8"
																}
															]
														},
														{
															"nativeSrc": "15077:30:8",
															"nodeType": "YulAssignment",
															"src": "15077:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15090:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15090:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "15101:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15101:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "15097:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15097:3:8"
																		},
																		"nativeSrc": "15097:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15097:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15086:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15086:3:8"
																},
																"nativeSrc": "15086:21:8",
																"nodeType": "YulFunctionCall",
																"src": "15086:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15077:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15077:5:8"
																}
															]
														},
														{
															"nativeSrc": "15116:40:8",
															"nodeType": "YulAssignment",
															"src": "15116:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15129:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15129:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "15140:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "15140:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "15150:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15150:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15136:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15136:3:8"
																		},
																		"nativeSrc": "15136:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15136:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15126:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "15126:2:8"
																},
																"nativeSrc": "15126:30:8",
																"nodeType": "YulFunctionCall",
																"src": "15126:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15116:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15116:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14769:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14806:5:8",
														"nodeType": "YulTypedName",
														"src": "14806:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14813:10:8",
														"nodeType": "YulTypedName",
														"src": "14813:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14825:8:8",
														"nodeType": "YulTypedName",
														"src": "14825:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14838:6:8",
														"nodeType": "YulTypedName",
														"src": "14838:6:8",
														"type": ""
													}
												],
												"src": "14769:393:8"
											},
											{
												"body": {
													"nativeSrc": "15228:82:8",
													"nodeType": "YulBlock",
													"src": "15228:82:8",
													"statements": [
														{
															"nativeSrc": "15238:66:8",
															"nodeType": "YulAssignment",
															"src": "15238:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15296:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "15296:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15278:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "15278:17:8"
																				},
																				"nativeSrc": "15278:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15278:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15269:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "15269:8:8"
																		},
																		"nativeSrc": "15269:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15269:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15251:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "15251:17:8"
																},
																"nativeSrc": "15251:53:8",
																"nodeType": "YulFunctionCall",
																"src": "15251:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15238:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "15238:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "15168:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15208:5:8",
														"nodeType": "YulTypedName",
														"src": "15208:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15218:9:8",
														"nodeType": "YulTypedName",
														"src": "15218:9:8",
														"type": ""
													}
												],
												"src": "15168:142:8"
											},
											{
												"body": {
													"nativeSrc": "15363:28:8",
													"nodeType": "YulBlock",
													"src": "15363:28:8",
													"statements": [
														{
															"nativeSrc": "15373:12:8",
															"nodeType": "YulAssignment",
															"src": "15373:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "15380:5:8",
																"nodeType": "YulIdentifier",
																"src": "15380:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15373:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15373:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "15316:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15349:5:8",
														"nodeType": "YulTypedName",
														"src": "15349:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15359:3:8",
														"nodeType": "YulTypedName",
														"src": "15359:3:8",
														"type": ""
													}
												],
												"src": "15316:75:8"
											},
											{
												"body": {
													"nativeSrc": "15473:193:8",
													"nodeType": "YulBlock",
													"src": "15473:193:8",
													"statements": [
														{
															"nativeSrc": "15483:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15483:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "15538:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "15538:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "15507:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "15507:30:8"
																},
																"nativeSrc": "15507:39:8",
																"nodeType": "YulFunctionCall",
																"src": "15507:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "15487:16:8",
																	"nodeType": "YulTypedName",
																	"src": "15487:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15562:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15562:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15602:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "15602:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15596:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "15596:5:8"
																				},
																				"nativeSrc": "15596:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15596:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15609:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15609:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15641:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "15641:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15617:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "15617:23:8"
																				},
																				"nativeSrc": "15617:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15617:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "15568:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "15568:27:8"
																		},
																		"nativeSrc": "15568:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15568:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15555:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15555:6:8"
																},
																"nativeSrc": "15555:105:8",
																"nodeType": "YulFunctionCall",
																"src": "15555:105:8"
															},
															"nativeSrc": "15555:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "15555:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "15397:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15450:4:8",
														"nodeType": "YulTypedName",
														"src": "15450:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15456:6:8",
														"nodeType": "YulTypedName",
														"src": "15456:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "15464:7:8",
														"nodeType": "YulTypedName",
														"src": "15464:7:8",
														"type": ""
													}
												],
												"src": "15397:269:8"
											},
											{
												"body": {
													"nativeSrc": "15721:24:8",
													"nodeType": "YulBlock",
													"src": "15721:24:8",
													"statements": [
														{
															"nativeSrc": "15731:8:8",
															"nodeType": "YulAssignment",
															"src": "15731:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "15738:1:8",
																"nodeType": "YulLiteral",
																"src": "15738:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15731:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15731:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "15672:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15717:3:8",
														"nodeType": "YulTypedName",
														"src": "15717:3:8",
														"type": ""
													}
												],
												"src": "15672:73:8"
											},
											{
												"body": {
													"nativeSrc": "15804:136:8",
													"nodeType": "YulBlock",
													"src": "15804:136:8",
													"statements": [
														{
															"nativeSrc": "15814:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15814:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15828:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "15828:30:8"
																},
																"nativeSrc": "15828:32:8",
																"nodeType": "YulFunctionCall",
																"src": "15828:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15818:6:8",
																	"nodeType": "YulTypedName",
																	"src": "15818:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15913:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15913:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15919:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15919:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15927:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15927:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15869:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15869:43:8"
																},
																"nativeSrc": "15869:65:8",
																"nodeType": "YulFunctionCall",
																"src": "15869:65:8"
															},
															"nativeSrc": "15869:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "15869:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15751:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15790:4:8",
														"nodeType": "YulTypedName",
														"src": "15790:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15796:6:8",
														"nodeType": "YulTypedName",
														"src": "15796:6:8",
														"type": ""
													}
												],
												"src": "15751:189:8"
											},
											{
												"body": {
													"nativeSrc": "15996:136:8",
													"nodeType": "YulBlock",
													"src": "15996:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "16063:63:8",
																"nodeType": "YulBlock",
																"src": "16063:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16107:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "16107:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16114:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16114:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "16077:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "16077:29:8"
																			},
																			"nativeSrc": "16077:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16077:39:8"
																		},
																		"nativeSrc": "16077:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16077:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "16016:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16016:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "16023:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16023:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16013:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16013:2:8"
																},
																"nativeSrc": "16013:14:8",
																"nodeType": "YulFunctionCall",
																"src": "16013:14:8"
															},
															"nativeSrc": "16006:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16028:26:8",
																"nodeType": "YulBlock",
																"src": "16028:26:8",
																"statements": [
																	{
																		"nativeSrc": "16030:22:8",
																		"nodeType": "YulAssignment",
																		"src": "16030:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16043:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "16043:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16050:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16050:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16039:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "16039:3:8"
																			},
																			"nativeSrc": "16039:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16039:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "16030:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "16030:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16010:2:8",
																"nodeType": "YulBlock",
																"src": "16010:2:8",
																"statements": []
															},
															"src": "16006:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15946:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15984:5:8",
														"nodeType": "YulTypedName",
														"src": "15984:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15991:3:8",
														"nodeType": "YulTypedName",
														"src": "15991:3:8",
														"type": ""
													}
												],
												"src": "15946:186:8"
											},
											{
												"body": {
													"nativeSrc": "16217:464:8",
													"nodeType": "YulBlock",
													"src": "16217:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "16243:431:8",
																"nodeType": "YulBlock",
																"src": "16243:431:8",
																"statements": [
																	{
																		"nativeSrc": "16257:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16257:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "16305:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "16305:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "16273:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "16273:31:8"
																			},
																			"nativeSrc": "16273:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16273:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "16261:8:8",
																				"nodeType": "YulTypedName",
																				"src": "16261:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16324:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16324:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "16347:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "16347:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "16375:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "16375:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "16357:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "16357:17:8"
																					},
																					"nativeSrc": "16357:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16357:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16343:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "16343:3:8"
																			},
																			"nativeSrc": "16343:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16343:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "16328:11:8",
																				"nodeType": "YulTypedName",
																				"src": "16328:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16544:27:8",
																			"nodeType": "YulBlock",
																			"src": "16544:27:8",
																			"statements": [
																				{
																					"nativeSrc": "16546:23:8",
																					"nodeType": "YulAssignment",
																					"src": "16546:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "16561:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "16561:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "16546:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "16546:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "16528:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "16528:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16540:2:8",
																					"nodeType": "YulLiteral",
																					"src": "16540:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "16525:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "16525:2:8"
																			},
																			"nativeSrc": "16525:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16525:18:8"
																		},
																		"nativeSrc": "16522:49:8",
																		"nodeType": "YulIf",
																		"src": "16522:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16613:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "16613:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16630:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "16630:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "16658:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "16658:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16640:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "16640:17:8"
																							},
																							"nativeSrc": "16640:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "16640:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16626:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "16626:3:8"
																					},
																					"nativeSrc": "16626:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16626:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "16584:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "16584:28:8"
																			},
																			"nativeSrc": "16584:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16584:80:8"
																		},
																		"nativeSrc": "16584:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16584:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "16234:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16234:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16239:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16239:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16231:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16231:2:8"
																},
																"nativeSrc": "16231:11:8",
																"nodeType": "YulFunctionCall",
																"src": "16231:11:8"
															},
															"nativeSrc": "16228:446:8",
															"nodeType": "YulIf",
															"src": "16228:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "16138:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "16193:5:8",
														"nodeType": "YulTypedName",
														"src": "16193:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16200:3:8",
														"nodeType": "YulTypedName",
														"src": "16200:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "16205:10:8",
														"nodeType": "YulTypedName",
														"src": "16205:10:8",
														"type": ""
													}
												],
												"src": "16138:543:8"
											},
											{
												"body": {
													"nativeSrc": "16750:54:8",
													"nodeType": "YulBlock",
													"src": "16750:54:8",
													"statements": [
														{
															"nativeSrc": "16760:37:8",
															"nodeType": "YulAssignment",
															"src": "16760:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16785:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16785:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16791:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16791:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16781:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16781:3:8"
																},
																"nativeSrc": "16781:16:8",
																"nodeType": "YulFunctionCall",
																"src": "16781:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16760:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "16760:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "16687:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16725:4:8",
														"nodeType": "YulTypedName",
														"src": "16725:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16731:5:8",
														"nodeType": "YulTypedName",
														"src": "16731:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16741:8:8",
														"nodeType": "YulTypedName",
														"src": "16741:8:8",
														"type": ""
													}
												],
												"src": "16687:117:8"
											},
											{
												"body": {
													"nativeSrc": "16861:118:8",
													"nodeType": "YulBlock",
													"src": "16861:118:8",
													"statements": [
														{
															"nativeSrc": "16871:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16871:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16920:1:8",
																						"nodeType": "YulLiteral",
																						"src": "16920:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16923:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "16923:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16916:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16916:3:8"
																				},
																				"nativeSrc": "16916:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16916:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16935:1:8",
																						"nodeType": "YulLiteral",
																						"src": "16935:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16931:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16931:3:8"
																				},
																				"nativeSrc": "16931:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16931:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16887:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "16887:28:8"
																		},
																		"nativeSrc": "16887:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16887:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16883:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16883:3:8"
																},
																"nativeSrc": "16883:56:8",
																"nodeType": "YulFunctionCall",
																"src": "16883:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16875:4:8",
																	"nodeType": "YulTypedName",
																	"src": "16875:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16948:25:8",
															"nodeType": "YulAssignment",
															"src": "16948:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16962:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16962:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16968:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16968:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16958:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16958:3:8"
																},
																"nativeSrc": "16958:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16958:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16948:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16948:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16810:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16838:4:8",
														"nodeType": "YulTypedName",
														"src": "16838:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16844:5:8",
														"nodeType": "YulTypedName",
														"src": "16844:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16854:6:8",
														"nodeType": "YulTypedName",
														"src": "16854:6:8",
														"type": ""
													}
												],
												"src": "16810:169:8"
											},
											{
												"body": {
													"nativeSrc": "17065:214:8",
													"nodeType": "YulBlock",
													"src": "17065:214:8",
													"statements": [
														{
															"nativeSrc": "17198:37:8",
															"nodeType": "YulAssignment",
															"src": "17198:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17225:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17225:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "17231:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17231:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "17206:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "17206:18:8"
																},
																"nativeSrc": "17206:29:8",
																"nodeType": "YulFunctionCall",
																"src": "17206:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17198:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17198:4:8"
																}
															]
														},
														{
															"nativeSrc": "17244:29:8",
															"nodeType": "YulAssignment",
															"src": "17244:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17255:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17255:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17265:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17265:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "17268:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "17268:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "17261:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17261:3:8"
																		},
																		"nativeSrc": "17261:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17261:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17252:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "17252:2:8"
																},
																"nativeSrc": "17252:21:8",
																"nodeType": "YulFunctionCall",
																"src": "17252:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "17244:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17244:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16984:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17046:4:8",
														"nodeType": "YulTypedName",
														"src": "17046:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17052:3:8",
														"nodeType": "YulTypedName",
														"src": "17052:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "17060:4:8",
														"nodeType": "YulTypedName",
														"src": "17060:4:8",
														"type": ""
													}
												],
												"src": "16984:295:8"
											},
											{
												"body": {
													"nativeSrc": "17376:1303:8",
													"nodeType": "YulBlock",
													"src": "17376:1303:8",
													"statements": [
														{
															"nativeSrc": "17387:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17387:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "17434:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17434:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17401:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "17401:32:8"
																},
																"nativeSrc": "17401:37:8",
																"nodeType": "YulFunctionCall",
																"src": "17401:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "17391:6:8",
																	"nodeType": "YulTypedName",
																	"src": "17391:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17523:22:8",
																"nodeType": "YulBlock",
																"src": "17523:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17525:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "17525:16:8"
																			},
																			"nativeSrc": "17525:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17525:18:8"
																		},
																		"nativeSrc": "17525:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17525:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17495:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17495:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17503:18:8",
																		"nodeType": "YulLiteral",
																		"src": "17503:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17492:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "17492:2:8"
																},
																"nativeSrc": "17492:30:8",
																"nodeType": "YulFunctionCall",
																"src": "17492:30:8"
															},
															"nativeSrc": "17489:56:8",
															"nodeType": "YulIf",
															"src": "17489:56:8"
														},
														{
															"nativeSrc": "17555:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17555:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17601:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17601:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17595:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "17595:5:8"
																		},
																		"nativeSrc": "17595:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17595:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "17569:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "17569:25:8"
																},
																"nativeSrc": "17569:38:8",
																"nodeType": "YulFunctionCall",
																"src": "17569:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "17559:6:8",
																	"nodeType": "YulTypedName",
																	"src": "17559:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17700:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17700:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17706:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17706:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17714:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17714:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "17654:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "17654:45:8"
																},
																"nativeSrc": "17654:67:8",
																"nodeType": "YulFunctionCall",
																"src": "17654:67:8"
															},
															"nativeSrc": "17654:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "17654:67:8"
														},
														{
															"nativeSrc": "17731:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17731:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "17748:1:8",
																"nodeType": "YulLiteral",
																"src": "17748:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17735:9:8",
																	"nodeType": "YulTypedName",
																	"src": "17735:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17759:17:8",
															"nodeType": "YulAssignment",
															"src": "17759:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "17772:4:8",
																"nodeType": "YulLiteral",
																"src": "17772:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17759:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "17759:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17823:611:8",
																		"nodeType": "YulBlock",
																		"src": "17823:611:8",
																		"statements": [
																			{
																				"nativeSrc": "17837:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17837:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17856:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "17856:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17868:4:8",
																									"nodeType": "YulLiteral",
																									"src": "17868:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17864:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "17864:3:8"
																							},
																							"nativeSrc": "17864:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "17864:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17852:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "17852:3:8"
																					},
																					"nativeSrc": "17852:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17852:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17841:7:8",
																						"nodeType": "YulTypedName",
																						"src": "17841:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17888:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17888:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17934:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "17934:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17902:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "17902:31:8"
																					},
																					"nativeSrc": "17902:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17902:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17892:6:8",
																						"nodeType": "YulTypedName",
																						"src": "17892:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17952:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17952:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17961:1:8",
																					"nodeType": "YulLiteral",
																					"src": "17961:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17956:1:8",
																						"nodeType": "YulTypedName",
																						"src": "17956:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18020:163:8",
																					"nodeType": "YulBlock",
																					"src": "18020:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18045:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "18045:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "18063:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "18063:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "18068:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "18068:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "18059:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "18059:3:8"
																												},
																												"nativeSrc": "18059:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "18059:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "18053:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "18053:5:8"
																										},
																										"nativeSrc": "18053:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "18053:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18038:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "18038:6:8"
																								},
																								"nativeSrc": "18038:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18038:42:8"
																							},
																							"nativeSrc": "18038:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "18038:42:8"
																						},
																						{
																							"nativeSrc": "18097:24:8",
																							"nodeType": "YulAssignment",
																							"src": "18097:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18111:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "18111:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18119:1:8",
																										"nodeType": "YulLiteral",
																										"src": "18119:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18107:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "18107:3:8"
																								},
																								"nativeSrc": "18107:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18107:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "18097:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "18097:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "18138:31:8",
																							"nodeType": "YulAssignment",
																							"src": "18138:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "18155:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "18155:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18166:2:8",
																										"nodeType": "YulLiteral",
																										"src": "18166:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18151:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "18151:3:8"
																								},
																								"nativeSrc": "18151:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18151:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "18138:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "18138:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17986:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "17986:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17989:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "17989:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17983:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "17983:2:8"
																					},
																					"nativeSrc": "17983:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17983:14:8"
																				},
																				"nativeSrc": "17975:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17998:21:8",
																					"nodeType": "YulBlock",
																					"src": "17998:21:8",
																					"statements": [
																						{
																							"nativeSrc": "18000:17:8",
																							"nodeType": "YulAssignment",
																							"src": "18000:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "18009:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "18009:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18012:4:8",
																										"nodeType": "YulLiteral",
																										"src": "18012:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18005:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "18005:3:8"
																								},
																								"nativeSrc": "18005:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18005:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "18000:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "18000:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17979:3:8",
																					"nodeType": "YulBlock",
																					"src": "17979:3:8",
																					"statements": []
																				},
																				"src": "17975:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "18219:156:8",
																					"nodeType": "YulBlock",
																					"src": "18219:156:8",
																					"statements": [
																						{
																							"nativeSrc": "18237:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "18237:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18264:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "18264:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18269:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "18269:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18260:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "18260:3:8"
																										},
																										"nativeSrc": "18260:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "18260:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18254:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "18254:5:8"
																								},
																								"nativeSrc": "18254:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18254:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "18241:9:8",
																									"nodeType": "YulTypedName",
																									"src": "18241:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18304:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "18304:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "18331:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "18331:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "18346:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "18346:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "18354:4:8",
																														"nodeType": "YulLiteral",
																														"src": "18354:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "18342:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "18342:3:8"
																												},
																												"nativeSrc": "18342:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "18342:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "18312:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "18312:18:8"
																										},
																										"nativeSrc": "18312:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "18312:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18297:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "18297:6:8"
																								},
																								"nativeSrc": "18297:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18297:64:8"
																							},
																							"nativeSrc": "18297:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "18297:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18202:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "18202:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "18211:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "18211:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18199:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "18199:2:8"
																					},
																					"nativeSrc": "18199:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "18199:19:8"
																				},
																				"nativeSrc": "18196:179:8",
																				"nodeType": "YulIf",
																				"src": "18196:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18395:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "18395:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "18409:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "18409:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18417:1:8",
																											"nodeType": "YulLiteral",
																											"src": "18417:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "18405:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "18405:3:8"
																									},
																									"nativeSrc": "18405:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "18405:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18421:1:8",
																									"nodeType": "YulLiteral",
																									"src": "18421:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18401:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "18401:3:8"
																							},
																							"nativeSrc": "18401:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "18401:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18388:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "18388:6:8"
																					},
																					"nativeSrc": "18388:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "18388:36:8"
																				},
																				"nativeSrc": "18388:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "18388:36:8"
																			}
																		]
																	},
																	"nativeSrc": "17816:618:8",
																	"nodeType": "YulCase",
																	"src": "17816:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17821:1:8",
																		"nodeType": "YulLiteral",
																		"src": "17821:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18451:222:8",
																		"nodeType": "YulBlock",
																		"src": "18451:222:8",
																		"statements": [
																			{
																				"nativeSrc": "18465:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18465:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18478:1:8",
																					"nodeType": "YulLiteral",
																					"src": "18478:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "18469:5:8",
																						"nodeType": "YulTypedName",
																						"src": "18469:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18502:67:8",
																					"nodeType": "YulBlock",
																					"src": "18502:67:8",
																					"statements": [
																						{
																							"nativeSrc": "18520:35:8",
																							"nodeType": "YulAssignment",
																							"src": "18520:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18539:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "18539:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18544:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "18544:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18535:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "18535:3:8"
																										},
																										"nativeSrc": "18535:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "18535:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18529:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "18529:5:8"
																								},
																								"nativeSrc": "18529:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "18529:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "18520:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "18520:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "18495:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "18495:6:8"
																				},
																				"nativeSrc": "18492:77:8",
																				"nodeType": "YulIf",
																				"src": "18492:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18589:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "18589:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18648:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "18648:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "18655:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "18655:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18595:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "18595:52:8"
																							},
																							"nativeSrc": "18595:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "18595:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18582:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "18582:6:8"
																					},
																					"nativeSrc": "18582:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "18582:81:8"
																				},
																				"nativeSrc": "18582:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "18582:81:8"
																			}
																		]
																	},
																	"nativeSrc": "18443:230:8",
																	"nodeType": "YulCase",
																	"src": "18443:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17796:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17796:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17804:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17804:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17793:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "17793:2:8"
																},
																"nativeSrc": "17793:14:8",
																"nodeType": "YulFunctionCall",
																"src": "17793:14:8"
															},
															"nativeSrc": "17786:887:8",
															"nodeType": "YulSwitch",
															"src": "17786:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "17284:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17365:4:8",
														"nodeType": "YulTypedName",
														"src": "17365:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "17371:3:8",
														"nodeType": "YulTypedName",
														"src": "17371:3:8",
														"type": ""
													}
												],
												"src": "17284:1395:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cap exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535(memPtr) {\n\n        mstore(add(memPtr, 0), \"New cap < supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cap must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063715018a611610095578063a9059cbb11610064578063a9059cbb14610288578063b119490e146102b8578063dd62ed3e146102d4578063f2fde38b14610304576100fe565b8063715018a6146102265780638da5cb5b1461023057806395d89b411461024e578063a7d688961461026c576100fe565b8063313ce567116100d1578063313ce5671461019e578063355274ea146101bc57806340c10f19146101da57806370a08231146101f6576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f5ffd5b61010a610320565b6040516101179190611301565b60405180910390f35b61013a600480360381019061013591906113bf565b6103be565b6040516101479190611417565b60405180910390f35b6101586103e0565b604051610165919061143f565b60405180910390f35b61018860048036038101906101839190611458565b6103f7565b6040516101959190611417565b60405180910390f35b6101a6610425565b6040516101b391906114c3565b60405180910390f35b6101c461042d565b6040516101d1919061143f565b60405180910390f35b6101f460048036038101906101ef91906113bf565b610435565b005b610210600480360381019061020b91906114dc565b6104a1565b60405161021d919061143f565b60405180910390f35b61022e6104f4565b005b610238610507565b6040516102459190611516565b60405180910390f35b61025661053c565b6040516102639190611301565b60405180910390f35b6102866004803603810190610281919061152f565b6105da565b005b6102a2600480360381019061029d91906113bf565b610635565b6040516102af9190611417565b60405180910390f35b6102d260048036038101906102cd9190611686565b610657565b005b6102ee60048036038101906102e9919061170e565b61082c565b6040516102fb919061143f565b60405180910390f35b61031e600480360381019061031991906114dc565b6108bc565b005b60605f61032b610940565b905080600301805461033c90611779565b80601f016020809104026020016040519081016040528092919081815260200182805461036890611779565b80156103b35780601f1061038a576101008083540402835291602001916103b3565b820191905f5260205f20905b81548152906001019060200180831161039657829003601f168201915b505050505091505090565b5f5f6103c8610967565b90506103d581858561096e565b600191505092915050565b5f5f6103ea610940565b9050806002015491505090565b5f5f610401610967565b905061040e858285610980565b610419858585610a13565b60019150509392505050565b5f6012905090565b5f5f54905090565b61043d610b03565b5f54816104486103e0565b61045291906117d6565b1115610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a90611853565b60405180910390fd5b61049d8282610b8a565b5050565b5f5f6104ab610940565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b6104fc610b03565b6105055f610c09565b565b5f5f610511610cda565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610547610940565b905080600401805461055890611779565b80601f016020809104026020016040519081016040528092919081815260200182805461058490611779565b80156105cf5780601f106105a6576101008083540402835291602001916105cf565b820191905f5260205f20905b8154815290600101906020018083116105b257829003601f168201915b505050505091505090565b6105e2610b03565b6105ea6103e0565b81101561062c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610623906118bb565b60405180910390fd5b805f8190555050565b5f5f61063f610967565b905061064c818585610a13565b600191505092915050565b5f610660610d01565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156106a85750825b90505f60018367ffffffffffffffff161480156106db57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156106e9575080155b15610720576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561076d576001855f0160086101000a81548160ff0219169083151502179055505b6107778888610d14565b61078033610d2a565b5f86116107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611923565b60405180910390fd5b855f819055508315610822575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516108199190611996565b60405180910390a15b5050505050505050565b5f5f610836610940565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6108c4610b03565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610934575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161092b9190611516565b60405180910390fd5b61093d81610c09565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b61097b8383836001610d3e565b505050565b5f61098b848461082c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a0d57818110156109fe578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109f5939291906119af565b60405180910390fd5b610a0c84848484035f610d3e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a83575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a7a9190611516565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610aea9190611516565b60405180910390fd5b610afe838383610f1b565b505050565b610b0b610967565b73ffffffffffffffffffffffffffffffffffffffff16610b29610507565b73ffffffffffffffffffffffffffffffffffffffff1614610b8857610b4c610967565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b7f9190611516565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bfa575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bf19190611516565b60405180910390fd5b610c055f8383610f1b565b5050565b5f610c12610cda565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f5f610d0b61114a565b90508091505090565b610d1c611173565b610d2682826111b3565b5050565b610d32611173565b610d3b816111ef565b50565b5f610d47610940565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610db9575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610db09190611516565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e29575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e209190611516565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115610f14578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610f0b919061143f565b60405180910390a35b5050505050565b5f610f24610940565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f785781816002015f828254610f6c91906117d6565b9250508190555061104a565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611003578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ffa939291906119af565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110935781816002015f82825403925050819055506110df565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161113c919061143f565b60405180910390a350505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b61117b611273565b6111b1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6111bb611173565b5f6111c4610940565b9050828160030190816111d79190611b7b565b50818160040190816111e99190611b7b565b50505050565b6111f7611173565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611267575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161125e9190611516565b60405180910390fd5b61127081610c09565b50565b5f61127c610d01565b5f0160089054906101000a900460ff16905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6112d382611291565b6112dd818561129b565b93506112ed8185602086016112ab565b6112f6816112b9565b840191505092915050565b5f6020820190508181035f83015261131981846112c9565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61135b82611332565b9050919050565b61136b81611351565b8114611375575f5ffd5b50565b5f8135905061138681611362565b92915050565b5f819050919050565b61139e8161138c565b81146113a8575f5ffd5b50565b5f813590506113b981611395565b92915050565b5f5f604083850312156113d5576113d461132a565b5b5f6113e285828601611378565b92505060206113f3858286016113ab565b9150509250929050565b5f8115159050919050565b611411816113fd565b82525050565b5f60208201905061142a5f830184611408565b92915050565b6114398161138c565b82525050565b5f6020820190506114525f830184611430565b92915050565b5f5f5f6060848603121561146f5761146e61132a565b5b5f61147c86828701611378565b935050602061148d86828701611378565b925050604061149e868287016113ab565b9150509250925092565b5f60ff82169050919050565b6114bd816114a8565b82525050565b5f6020820190506114d65f8301846114b4565b92915050565b5f602082840312156114f1576114f061132a565b5b5f6114fe84828501611378565b91505092915050565b61151081611351565b82525050565b5f6020820190506115295f830184611507565b92915050565b5f602082840312156115445761154361132a565b5b5f611551848285016113ab565b91505092915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611598826112b9565b810181811067ffffffffffffffff821117156115b7576115b6611562565b5b80604052505050565b5f6115c9611321565b90506115d5828261158f565b919050565b5f67ffffffffffffffff8211156115f4576115f3611562565b5b6115fd826112b9565b9050602081019050919050565b828183375f83830152505050565b5f61162a611625846115da565b6115c0565b9050828152602081018484840111156116465761164561155e565b5b61165184828561160a565b509392505050565b5f82601f83011261166d5761166c61155a565b5b813561167d848260208601611618565b91505092915050565b5f5f5f6060848603121561169d5761169c61132a565b5b5f84013567ffffffffffffffff8111156116ba576116b961132e565b5b6116c686828701611659565b935050602084013567ffffffffffffffff8111156116e7576116e661132e565b5b6116f386828701611659565b9250506040611704868287016113ab565b9150509250925092565b5f5f604083850312156117245761172361132a565b5b5f61173185828601611378565b925050602061174285828601611378565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061179057607f821691505b6020821081036117a3576117a261174c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117e08261138c565b91506117eb8361138c565b9250828201905080821115611803576118026117a9565b5b92915050565b7f43617020657863656564656400000000000000000000000000000000000000005f82015250565b5f61183d600c8361129b565b915061184882611809565b602082019050919050565b5f6020820190508181035f83015261186a81611831565b9050919050565b7f4e657720636170203c20737570706c79000000000000000000000000000000005f82015250565b5f6118a560108361129b565b91506118b082611871565b602082019050919050565b5f6020820190508181035f8301526118d281611899565b9050919050565b7f436170206d757374206265203e203000000000000000000000000000000000005f82015250565b5f61190d600f8361129b565b9150611918826118d9565b602082019050919050565b5f6020820190508181035f83015261193a81611901565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61198061197b61197684611941565b61195d565b61194a565b9050919050565b61199081611966565b82525050565b5f6020820190506119a95f830184611987565b92915050565b5f6060820190506119c25f830186611507565b6119cf6020830185611430565b6119dc6040830184611430565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611a407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a05565b611a4a8683611a05565b95508019841693508086168417925050509392505050565b5f611a7c611a77611a728461138c565b61195d565b61138c565b9050919050565b5f819050919050565b611a9583611a62565b611aa9611aa182611a83565b848454611a11565b825550505050565b5f5f905090565b611ac0611ab1565b611acb818484611a8c565b505050565b5b81811015611aee57611ae35f82611ab8565b600181019050611ad1565b5050565b601f821115611b3357611b04816119e4565b611b0d846119f6565b81016020851015611b1c578190505b611b30611b28856119f6565b830182611ad0565b50505b505050565b5f82821c905092915050565b5f611b535f1984600802611b38565b1980831691505092915050565b5f611b6b8383611b44565b9150826002028217905092915050565b611b8482611291565b67ffffffffffffffff811115611b9d57611b9c611562565b5b611ba78254611779565b611bb2828285611af2565b5f60209050601f831160018114611be3575f8415611bd1578287015190505b611bdb8582611b60565b865550611c42565b601f198416611bf1866119e4565b5f5b82811015611c1857848901518255600182019150602085019450602081019050611bf3565b86831015611c355784890151611c31601f891682611b44565b8355505b6001600288020188555050505b50505050505056fea26469706673582212206a0f7d6eae071863db396a76ac6fb048e019f033719e9c2ab7c7a6c3a952deac64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xB119490E EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x304 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xA7D68896 EQ PUSH2 0x26C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x4F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x32B PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x1779 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x1779 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x396 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3C8 PUSH2 0x967 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D5 DUP2 DUP6 DUP6 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3EA PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x401 PUSH2 0x967 JUMP JUMPDEST SWAP1 POP PUSH2 0x40E DUP6 DUP3 DUP6 PUSH2 0x980 JUMP JUMPDEST PUSH2 0x419 DUP6 DUP6 DUP6 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x43D PUSH2 0xB03 JUMP JUMPDEST PUSH0 SLOAD DUP2 PUSH2 0x448 PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x17D6 JUMP JUMPDEST GT ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48A SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x49D DUP3 DUP3 PUSH2 0xB8A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4AB PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FC PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x505 PUSH0 PUSH2 0xC09 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x511 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x547 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x1779 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x1779 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5E2 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x3E0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0x18BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x63F PUSH2 0x967 JUMP JUMPDEST SWAP1 POP PUSH2 0x64C DUP2 DUP6 DUP6 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x660 PUSH2 0xD01 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x6A8 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x6DB JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x6E9 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x76D JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x777 DUP9 DUP9 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x780 CALLER PUSH2 0xD2A JUMP JUMPDEST PUSH0 DUP7 GT PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B9 SWAP1 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH0 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x822 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x836 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C4 PUSH2 0xB03 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x934 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93D DUP2 PUSH2 0xC09 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x97B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD3E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x98B DUP5 DUP5 PUSH2 0x82C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA0D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9FE JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD3E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA83 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEA SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAFE DUP4 DUP4 DUP4 PUSH2 0xF1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB0B PUSH2 0x967 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB29 PUSH2 0x507 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB88 JUMPI PUSH2 0xB4C PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF1 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC05 PUSH0 DUP4 DUP4 PUSH2 0xF1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC12 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD0B PUSH2 0x114A JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0x1173 JUMP JUMPDEST PUSH2 0xD26 DUP3 DUP3 PUSH2 0x11B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD32 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0xD3B DUP2 PUSH2 0x11EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xD47 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB0 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE29 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE20 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0xF14 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0xF0B SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF24 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF78 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF6C SWAP2 SWAP1 PUSH2 0x17D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x104A JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1003 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1093 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10DF JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x113C SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x117B PUSH2 0x1273 JUMP JUMPDEST PUSH2 0x11B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11BB PUSH2 0x1173 JUMP JUMPDEST PUSH0 PUSH2 0x11C4 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x11D7 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x11E9 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x11F7 PUSH2 0x1173 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1267 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125E SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1270 DUP2 PUSH2 0xC09 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x127C PUSH2 0xD01 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D3 DUP3 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x12DD DUP2 DUP6 PUSH2 0x129B JUMP JUMPDEST SWAP4 POP PUSH2 0x12ED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x12F6 DUP2 PUSH2 0x12B9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1319 DUP2 DUP5 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x135B DUP3 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x136B DUP2 PUSH2 0x1351 JUMP JUMPDEST DUP2 EQ PUSH2 0x1375 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1386 DUP2 PUSH2 0x1362 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139E DUP2 PUSH2 0x138C JUMP JUMPDEST DUP2 EQ PUSH2 0x13A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B9 DUP2 PUSH2 0x1395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D5 JUMPI PUSH2 0x13D4 PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13F3 DUP6 DUP3 DUP7 ADD PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1411 DUP2 PUSH2 0x13FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142A PUSH0 DUP4 ADD DUP5 PUSH2 0x1408 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1439 DUP2 PUSH2 0x138C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1452 PUSH0 DUP4 ADD DUP5 PUSH2 0x1430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x146F JUMPI PUSH2 0x146E PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x147C DUP7 DUP3 DUP8 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x148D DUP7 DUP3 DUP8 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x149E DUP7 DUP3 DUP8 ADD PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BD DUP2 PUSH2 0x14A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F1 JUMPI PUSH2 0x14F0 PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FE DUP5 DUP3 DUP6 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1510 DUP2 PUSH2 0x1351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1529 PUSH0 DUP4 ADD DUP5 PUSH2 0x1507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1551 DUP5 DUP3 DUP6 ADD PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1598 DUP3 PUSH2 0x12B9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15B7 JUMPI PUSH2 0x15B6 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15C9 PUSH2 0x1321 JUMP JUMPDEST SWAP1 POP PUSH2 0x15D5 DUP3 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x15F3 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH2 0x15FD DUP3 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x162A PUSH2 0x1625 DUP5 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x15C0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1646 JUMPI PUSH2 0x1645 PUSH2 0x155E JUMP JUMPDEST JUMPDEST PUSH2 0x1651 DUP5 DUP3 DUP6 PUSH2 0x160A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x166D JUMPI PUSH2 0x166C PUSH2 0x155A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x167D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1618 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x169D JUMPI PUSH2 0x169C PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16B9 PUSH2 0x132E JUMP JUMPDEST JUMPDEST PUSH2 0x16C6 DUP7 DUP3 DUP8 ADD PUSH2 0x1659 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0x132E JUMP JUMPDEST JUMPDEST PUSH2 0x16F3 DUP7 DUP3 DUP8 ADD PUSH2 0x1659 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1704 DUP7 DUP3 DUP8 ADD PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1724 JUMPI PUSH2 0x1723 PUSH2 0x132A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1731 DUP6 DUP3 DUP7 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1742 DUP6 DUP3 DUP7 ADD PUSH2 0x1378 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1790 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17A3 JUMPI PUSH2 0x17A2 PUSH2 0x174C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17E0 DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH2 0x17EB DUP4 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1803 JUMPI PUSH2 0x1802 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4361702065786365656465640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x183D PUSH1 0xC DUP4 PUSH2 0x129B JUMP JUMPDEST SWAP2 POP PUSH2 0x1848 DUP3 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x186A DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E657720636170203C20737570706C7900000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18A5 PUSH1 0x10 DUP4 PUSH2 0x129B JUMP JUMPDEST SWAP2 POP PUSH2 0x18B0 DUP3 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D2 DUP2 PUSH2 0x1899 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436170206D757374206265203E20300000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x190D PUSH1 0xF DUP4 PUSH2 0x129B JUMP JUMPDEST SWAP2 POP PUSH2 0x1918 DUP3 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x193A DUP2 PUSH2 0x1901 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1980 PUSH2 0x197B PUSH2 0x1976 DUP5 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x195D JUMP JUMPDEST PUSH2 0x194A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1990 DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19C2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0x19CF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1430 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x1A4A DUP7 DUP4 PUSH2 0x1A05 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7C PUSH2 0x1A77 PUSH2 0x1A72 DUP5 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x195D JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A95 DUP4 PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x1AA9 PUSH2 0x1AA1 DUP3 PUSH2 0x1A83 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1A11 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1AC0 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x1ACB DUP2 DUP5 DUP5 PUSH2 0x1A8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AE3 PUSH0 DUP3 PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1AD1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B33 JUMPI PUSH2 0x1B04 DUP2 PUSH2 0x19E4 JUMP JUMPDEST PUSH2 0x1B0D DUP5 PUSH2 0x19F6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B1C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B30 PUSH2 0x1B28 DUP6 PUSH2 0x19F6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1AD0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B53 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B38 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6B DUP4 DUP4 PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B84 DUP3 PUSH2 0x1291 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B9D JUMPI PUSH2 0x1B9C PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH2 0x1BA7 DUP3 SLOAD PUSH2 0x1779 JUMP JUMPDEST PUSH2 0x1BB2 DUP3 DUP3 DUP6 PUSH2 0x1AF2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BE3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1BD1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1BDB DUP6 DUP3 PUSH2 0x1B60 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1BF1 DUP7 PUSH2 0x19E4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C18 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BF3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C35 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1C31 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B44 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xF7D6EAE071863DB396A76 0xAC PUSH16 0xB048E019F033719E9C2AB7C7A6C3A952 0xDE 0xAC PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "290:747:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5191:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3877:152;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5969:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3735:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;812:73:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;648:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4087:171:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;2441:144;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2954:148:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;891:144:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4453:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;401:241:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4689:195:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2697:144:2;2742:13;2767:22;2792:18;:16;:18::i;:::-;2767:43;;2827:1;:7;;2820:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;5191:186::-;5264:4;5280:13;5296:12;:10;:12::i;:::-;5280:28;;5318:31;5327:5;5334:7;5343:5;5318:8;:31::i;:::-;5366:4;5359:11;;;5191:186;;;;:::o;3877:152::-;3929:7;3948:22;3973:18;:16;:18::i;:::-;3948:43;;4008:1;:14;;;4001:21;;;3877:152;:::o;5969:244::-;6056:4;6072:15;6090:12;:10;:12::i;:::-;6072:30;;6112:37;6128:4;6134:7;6143:5;6112:15;:37::i;:::-;6159:26;6169:4;6175:2;6179:5;6159:9;:26::i;:::-;6202:4;6195:11;;;5969:244;;;;;:::o;3735:82::-;3784:5;3808:2;3801:9;;3735:82;:::o;812:73:7:-;848:7;874:4;;867:11;;812:73;:::o;648:158::-;2334:13:0;:11;:13::i;:::-;751:4:7::1;;741:6;725:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:30;;717:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;782:17;788:2;792:6;782:5;:17::i;:::-;648:158:::0;;:::o;4087:171:2:-;4152:7;4171:22;4196:18;:16;:18::i;:::-;4171:43;;4231:1;:11;;:20;4243:7;4231:20;;;;;;;;;;;;;;;;4224:27;;;4087:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2441:144::-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2954:148:2:-;3001:13;3026:22;3051:18;:16;:18::i;:::-;3026:43;;3086:1;:9;;3079:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:148;:::o;891:144:7:-;2334:13:0;:11;:13::i;:::-;971::7::1;:11;:13::i;:::-;961:6;:23;;953:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1022:6;1015:4;:13;;;;891:144:::0;:::o;4453:178:2:-;4522:4;4538:13;4554:12;:10;:12::i;:::-;4538:28;;4576:27;4586:5;4593:2;4597:5;4576:9;:27::i;:::-;4620:4;4613:11;;;4453:178;;;;:::o;401:241:7:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;506:26:7::1;519:4;525:6;506:12;:26::i;:::-;542;557:10;542:14;:26::i;:::-;593:1;586:4;:8;578:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;631:4;624;:11;;;;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;401:241:7;;;:::o;4689:195:2:-;4769:7;4788:22;4813:18;:16;:18::i;:::-;4788:43;;4848:1;:13;;:20;4862:5;4848:20;;;;;;;;;;;;;;;:29;4869:7;4848:29;;;;;;;;;;;;;;;;4841:36;;;4689:195;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1947:153:2:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;9982:128:2:-;10066:37;10075:5;10082:7;10091:5;10098:4;10066:8;:37::i;:::-;9982:128;;;:::o;11726:476::-;11825:24;11852:25;11862:5;11869:7;11852:9;:25::i;:::-;11825:52;;11910:17;11891:16;:36;11887:309;;;11966:5;11947:16;:24;11943:130;;;12025:7;12034:16;12052:5;11998:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11943:130;12114:57;12123:5;12130:7;12158:5;12139:16;:24;12165:5;12114:8;:57::i;:::-;11887:309;11815:387;11726:476;;;:::o;6586:300::-;6685:1;6669:18;;:4;:18;;;6665:86;;6737:1;6710:30;;;;;;;;;;;:::i;:::-;;;;;;;;6665:86;6778:1;6764:16;;:2;:16;;;6760:86;;6832:1;6803:32;;;;;;;;;;;:::i;:::-;;;;;;;;6760:86;6855:24;6863:4;6869:2;6873:5;6855:7;:24::i;:::-;6586:300;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;8714:208:2:-;8803:1;8784:21;;:7;:21;;;8780:91;;8857:1;8828:32;;;;;;;;;;;:::i;:::-;;;;;;;;8780:91;8880:35;8896:1;8900:7;8909:5;8880:7;:35::i;:::-;8714:208;;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;2263:147:2:-;6929:20:1;:18;:20::i;:::-;2365:38:2::1;2388:5;2395:7;2365:22;:38::i;:::-;2263:147:::0;;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;10957:487:2:-;11065:22;11090:18;:16;:18::i;:::-;11065:43;;11139:1;11122:19;;:5;:19;;;11118:89;;11193:1;11164:32;;;;;;;;;;;:::i;:::-;;;;;;;;11118:89;11239:1;11220:21;;:7;:21;;;11216:90;;11292:1;11264:31;;;;;;;;;;;:::i;:::-;;;;;;;;11216:90;11347:5;11315:1;:13;;:20;11329:5;11315:20;;;;;;;;;;;;;;;:29;11336:7;11315:29;;;;;;;;;;;;;;;:37;;;;11366:9;11362:76;;;11412:7;11396:31;;11405:5;11396:31;;;11421:5;11396:31;;;;;;:::i;:::-;;;;;;;;11362:76;11055:389;10957:487;;;;:::o;7201:1170::-;7286:22;7311:18;:16;:18::i;:::-;7286:43;;7359:1;7343:18;;:4;:18;;;7339:546;;7497:5;7479:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7339:546;;;7533:19;7555:1;:11;;:17;7567:4;7555:17;;;;;;;;;;;;;;;;7533:39;;7604:5;7590:11;:19;7586:115;;;7661:4;7667:11;7680:5;7636:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7586:115;7855:5;7841:11;:19;7821:1;:11;;:17;7833:4;7821:17;;;;;;;;;;;;;;;:39;;;;7519:366;7339:546;7913:1;7899:16;;:2;:16;;;7895:429;;8080:5;8062:1;:14;;;:23;;;;;;;;;;;7895:429;;;8294:5;8275:1;:11;;:15;8287:2;8275:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7895:429;8354:2;8339:25;;8348:4;8339:25;;;8358:5;8339:25;;;;;;:::i;:::-;;;;;;;;7276:1095;7201:1170;;;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;2416:216:2:-;6929:20:1;:18;:20::i;:::-;2528:22:2::1;2553:18;:16;:18::i;:::-;2528:43;;2591:5;2581:1;:7;;:15;;;;;;:::i;:::-;;2618:7;2606:1;:9;;:19;;;;;;:::i;:::-;;2518:114;2416:216:::0;;:::o;1980:235:0:-;6929:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:117::-;5877:1;5874;5867:12;5891:117;6000:1;5997;5990:12;6014:180;6062:77;6059:1;6052:88;6159:4;6156:1;6149:15;6183:4;6180:1;6173:15;6200:281;6283:27;6305:4;6283:27;:::i;:::-;6275:6;6271:40;6413:6;6401:10;6398:22;6377:18;6365:10;6362:34;6359:62;6356:88;;;6424:18;;:::i;:::-;6356:88;6464:10;6460:2;6453:22;6243:238;6200:281;;:::o;6487:129::-;6521:6;6548:20;;:::i;:::-;6538:30;;6577:33;6605:4;6597:6;6577:33;:::i;:::-;6487:129;;;:::o;6622:308::-;6684:4;6774:18;6766:6;6763:30;6760:56;;;6796:18;;:::i;:::-;6760:56;6834:29;6856:6;6834:29;:::i;:::-;6826:37;;6918:4;6912;6908:15;6900:23;;6622:308;;;:::o;6936:148::-;7034:6;7029:3;7024;7011:30;7075:1;7066:6;7061:3;7057:16;7050:27;6936:148;;;:::o;7090:425::-;7168:5;7193:66;7209:49;7251:6;7209:49;:::i;:::-;7193:66;:::i;:::-;7184:75;;7282:6;7275:5;7268:21;7320:4;7313:5;7309:16;7358:3;7349:6;7344:3;7340:16;7337:25;7334:112;;;7365:79;;:::i;:::-;7334:112;7455:54;7502:6;7497:3;7492;7455:54;:::i;:::-;7174:341;7090:425;;;;;:::o;7535:340::-;7591:5;7640:3;7633:4;7625:6;7621:17;7617:27;7607:122;;7648:79;;:::i;:::-;7607:122;7765:6;7752:20;7790:79;7865:3;7857:6;7850:4;7842:6;7838:17;7790:79;:::i;:::-;7781:88;;7597:278;7535:340;;;;:::o;7881:979::-;7978:6;7986;7994;8043:2;8031:9;8022:7;8018:23;8014:32;8011:119;;;8049:79;;:::i;:::-;8011:119;8197:1;8186:9;8182:17;8169:31;8227:18;8219:6;8216:30;8213:117;;;8249:79;;:::i;:::-;8213:117;8354:63;8409:7;8400:6;8389:9;8385:22;8354:63;:::i;:::-;8344:73;;8140:287;8494:2;8483:9;8479:18;8466:32;8525:18;8517:6;8514:30;8511:117;;;8547:79;;:::i;:::-;8511:117;8652:63;8707:7;8698:6;8687:9;8683:22;8652:63;:::i;:::-;8642:73;;8437:288;8764:2;8790:53;8835:7;8826:6;8815:9;8811:22;8790:53;:::i;:::-;8780:63;;8735:118;7881:979;;;;;:::o;8866:474::-;8934:6;8942;8991:2;8979:9;8970:7;8966:23;8962:32;8959:119;;;8997:79;;:::i;:::-;8959:119;9117:1;9142:53;9187:7;9178:6;9167:9;9163:22;9142:53;:::i;:::-;9132:63;;9088:117;9244:2;9270:53;9315:7;9306:6;9295:9;9291:22;9270:53;:::i;:::-;9260:63;;9215:118;8866:474;;;;;:::o;9346:180::-;9394:77;9391:1;9384:88;9491:4;9488:1;9481:15;9515:4;9512:1;9505:15;9532:320;9576:6;9613:1;9607:4;9603:12;9593:22;;9660:1;9654:4;9650:12;9681:18;9671:81;;9737:4;9729:6;9725:17;9715:27;;9671:81;9799:2;9791:6;9788:14;9768:18;9765:38;9762:84;;9818:18;;:::i;:::-;9762:84;9583:269;9532:320;;;:::o;9858:180::-;9906:77;9903:1;9896:88;10003:4;10000:1;9993:15;10027:4;10024:1;10017:15;10044:191;10084:3;10103:20;10121:1;10103:20;:::i;:::-;10098:25;;10137:20;10155:1;10137:20;:::i;:::-;10132:25;;10180:1;10177;10173:9;10166:16;;10201:3;10198:1;10195:10;10192:36;;;10208:18;;:::i;:::-;10192:36;10044:191;;;;:::o;10241:162::-;10381:14;10377:1;10369:6;10365:14;10358:38;10241:162;:::o;10409:366::-;10551:3;10572:67;10636:2;10631:3;10572:67;:::i;:::-;10565:74;;10648:93;10737:3;10648:93;:::i;:::-;10766:2;10761:3;10757:12;10750:19;;10409:366;;;:::o;10781:419::-;10947:4;10985:2;10974:9;10970:18;10962:26;;11034:9;11028:4;11024:20;11020:1;11009:9;11005:17;10998:47;11062:131;11188:4;11062:131;:::i;:::-;11054:139;;10781:419;;;:::o;11206:166::-;11346:18;11342:1;11334:6;11330:14;11323:42;11206:166;:::o;11378:366::-;11520:3;11541:67;11605:2;11600:3;11541:67;:::i;:::-;11534:74;;11617:93;11706:3;11617:93;:::i;:::-;11735:2;11730:3;11726:12;11719:19;;11378:366;;;:::o;11750:419::-;11916:4;11954:2;11943:9;11939:18;11931:26;;12003:9;11997:4;11993:20;11989:1;11978:9;11974:17;11967:47;12031:131;12157:4;12031:131;:::i;:::-;12023:139;;11750:419;;;:::o;12175:165::-;12315:17;12311:1;12303:6;12299:14;12292:41;12175:165;:::o;12346:366::-;12488:3;12509:67;12573:2;12568:3;12509:67;:::i;:::-;12502:74;;12585:93;12674:3;12585:93;:::i;:::-;12703:2;12698:3;12694:12;12687:19;;12346:366;;;:::o;12718:419::-;12884:4;12922:2;12911:9;12907:18;12899:26;;12971:9;12965:4;12961:20;12957:1;12946:9;12942:17;12935:47;12999:131;13125:4;12999:131;:::i;:::-;12991:139;;12718:419;;;:::o;13143:85::-;13188:7;13217:5;13206:16;;13143:85;;;:::o;13234:101::-;13270:7;13310:18;13303:5;13299:30;13288:41;;13234:101;;;:::o;13341:60::-;13369:3;13390:5;13383:12;;13341:60;;;:::o;13407:156::-;13464:9;13497:60;13514:42;13523:32;13549:5;13523:32;:::i;:::-;13514:42;:::i;:::-;13497:60;:::i;:::-;13484:73;;13407:156;;;:::o;13569:145::-;13663:44;13701:5;13663:44;:::i;:::-;13658:3;13651:57;13569:145;;:::o;13720:236::-;13820:4;13858:2;13847:9;13843:18;13835:26;;13871:78;13946:1;13935:9;13931:17;13922:6;13871:78;:::i;:::-;13720:236;;;;:::o;13962:442::-;14111:4;14149:2;14138:9;14134:18;14126:26;;14162:71;14230:1;14219:9;14215:17;14206:6;14162:71;:::i;:::-;14243:72;14311:2;14300:9;14296:18;14287:6;14243:72;:::i;:::-;14325;14393:2;14382:9;14378:18;14369:6;14325:72;:::i;:::-;13962:442;;;;;;:::o;14410:141::-;14459:4;14482:3;14474:11;;14505:3;14502:1;14495:14;14539:4;14536:1;14526:18;14518:26;;14410:141;;;:::o;14557:93::-;14594:6;14641:2;14636;14629:5;14625:14;14621:23;14611:33;;14557:93;;;:::o;14656:107::-;14700:8;14750:5;14744:4;14740:16;14719:37;;14656:107;;;;:::o;14769:393::-;14838:6;14888:1;14876:10;14872:18;14911:97;14941:66;14930:9;14911:97;:::i;:::-;15029:39;15059:8;15048:9;15029:39;:::i;:::-;15017:51;;15101:4;15097:9;15090:5;15086:21;15077:30;;15150:4;15140:8;15136:19;15129:5;15126:30;15116:40;;14845:317;;14769:393;;;;;:::o;15168:142::-;15218:9;15251:53;15269:34;15278:24;15296:5;15278:24;:::i;:::-;15269:34;:::i;:::-;15251:53;:::i;:::-;15238:66;;15168:142;;;:::o;15316:75::-;15359:3;15380:5;15373:12;;15316:75;;;:::o;15397:269::-;15507:39;15538:7;15507:39;:::i;:::-;15568:91;15617:41;15641:16;15617:41;:::i;:::-;15609:6;15602:4;15596:11;15568:91;:::i;:::-;15562:4;15555:105;15473:193;15397:269;;;:::o;15672:73::-;15717:3;15738:1;15731:8;;15672:73;:::o;15751:189::-;15828:32;;:::i;:::-;15869:65;15927:6;15919;15913:4;15869:65;:::i;:::-;15804:136;15751:189;;:::o;15946:186::-;16006:120;16023:3;16016:5;16013:14;16006:120;;;16077:39;16114:1;16107:5;16077:39;:::i;:::-;16050:1;16043:5;16039:13;16030:22;;16006:120;;;15946:186;;:::o;16138:543::-;16239:2;16234:3;16231:11;16228:446;;;16273:38;16305:5;16273:38;:::i;:::-;16357:29;16375:10;16357:29;:::i;:::-;16347:8;16343:44;16540:2;16528:10;16525:18;16522:49;;;16561:8;16546:23;;16522:49;16584:80;16640:22;16658:3;16640:22;:::i;:::-;16630:8;16626:37;16613:11;16584:80;:::i;:::-;16243:431;;16228:446;16138:543;;;:::o;16687:117::-;16741:8;16791:5;16785:4;16781:16;16760:37;;16687:117;;;;:::o;16810:169::-;16854:6;16887:51;16935:1;16931:6;16923:5;16920:1;16916:13;16887:51;:::i;:::-;16883:56;16968:4;16962;16958:15;16948:25;;16861:118;16810:169;;;;:::o;16984:295::-;17060:4;17206:29;17231:3;17225:4;17206:29;:::i;:::-;17198:37;;17268:3;17265:1;17261:11;17255:4;17252:21;17244:29;;16984:295;;;;:::o;17284:1395::-;17401:37;17434:3;17401:37;:::i;:::-;17503:18;17495:6;17492:30;17489:56;;;17525:18;;:::i;:::-;17489:56;17569:38;17601:4;17595:11;17569:38;:::i;:::-;17654:67;17714:6;17706;17700:4;17654:67;:::i;:::-;17748:1;17772:4;17759:17;;17804:2;17796:6;17793:14;17821:1;17816:618;;;;18478:1;18495:6;18492:77;;;18544:9;18539:3;18535:19;18529:26;18520:35;;18492:77;18595:67;18655:6;18648:5;18595:67;:::i;:::-;18589:4;18582:81;18451:222;17786:887;;17816:618;17868:4;17864:9;17856:6;17852:22;17902:37;17934:4;17902:37;:::i;:::-;17961:1;17975:208;17989:7;17986:1;17983:14;17975:208;;;18068:9;18063:3;18059:19;18053:26;18045:6;18038:42;18119:1;18111:6;18107:14;18097:24;;18166:2;18155:9;18151:18;18138:31;;18012:4;18009:1;18005:12;18000:17;;17975:208;;;18211:6;18202:7;18199:19;18196:179;;;18269:9;18264:3;18260:19;18254:26;18312:48;18354:4;18346:6;18342:17;18331:9;18312:48;:::i;:::-;18304:6;18297:64;18219:156;18196:179;18421:1;18417;18409:6;18405:14;18401:22;18395:4;18388:36;17823:611;;;17786:887;;17376:1303;;;17284:1395;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1459200",
								"executionCost": "1518",
								"totalCost": "1460718"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2969",
								"cap()": "2476",
								"decimals()": "361",
								"initialize(string,string,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2611",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2552",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateCap(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 290,
									"end": 1037,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 1037,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a0f7d6eae071863db396a76ac6fb048e019f033719e9c2ab7c7a6c3a952deac64736f6c634300081e0033",
									".code": [
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "B119490E"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "A7D68896"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "355274EA"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 1037,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3877,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3877,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 812,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 812,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 812,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 812,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 812,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 812,
											"end": 885,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 812,
											"end": 885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 812,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 812,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 812,
											"end": 885,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 648,
											"end": 806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 648,
											"end": 806,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 648,
											"end": 806,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 648,
											"end": 806,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 648,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 648,
											"end": 806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 648,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 648,
											"end": 806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 891,
											"end": 1035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 891,
											"end": 1035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 401,
											"end": 642,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 401,
											"end": 642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 401,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 642,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 401,
											"end": 642,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 401,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 401,
											"end": 642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 401,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 401,
											"end": 642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2792,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5296,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5296,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5280,
											"end": 5308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5280,
											"end": 5308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5327,
											"end": 5332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5334,
											"end": 5341,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5343,
											"end": 5348,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5318,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5370,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 3936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3973,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3973,
											"end": 3991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3948,
											"end": 3991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3948,
											"end": 3991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4001,
											"end": 4022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4001,
											"end": 4022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4001,
											"end": 4022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6090,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 6090,
											"end": 6102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6072,
											"end": 6102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6072,
											"end": 6102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6128,
											"end": 6132,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6141,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6143,
											"end": 6148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6112,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6112,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6169,
											"end": 6173,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6175,
											"end": 6177,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6184,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6159,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6159,
											"end": 6185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6202,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6195,
											"end": 6206,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6195,
											"end": 6206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6195,
											"end": 6206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 812,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 812,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 848,
											"end": 855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 878,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 867,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 867,
											"end": 878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 812,
											"end": 885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 648,
											"end": 806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 751,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 755,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 741,
											"end": 747,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 725,
											"end": 738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 725,
											"end": 736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 725,
											"end": 738,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 725,
											"end": 738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 725,
											"end": 738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 725,
											"end": 747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 725,
											"end": 747,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 725,
											"end": 747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 725,
											"end": 747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 725,
											"end": 747,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 725,
											"end": 747,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 725,
											"end": 747,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 725,
											"end": 755,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 725,
											"end": 755,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 717,
											"end": 772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 717,
											"end": 772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 782,
											"end": 799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 788,
											"end": 790,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 792,
											"end": 798,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 782,
											"end": 787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 782,
											"end": 799,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 782,
											"end": 799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 782,
											"end": 799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4196,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4196,
											"end": 4214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3051,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3051,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 971,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 971,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 971,
											"end": 984,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 971,
											"end": 984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 971,
											"end": 984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 961,
											"end": 967,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 961,
											"end": 984,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 961,
											"end": 984,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 953,
											"end": 1005,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 953,
											"end": 1005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1022,
											"end": 1028,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1015,
											"end": 1019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1028,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1015,
											"end": 1028,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1015,
											"end": 1028,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1015,
											"end": 1028,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 891,
											"end": 1035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4522,
											"end": 4526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4551,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4554,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4554,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4586,
											"end": 4591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4576,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4603,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4576,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4620,
											"end": 4624,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4613,
											"end": 4624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4613,
											"end": 4624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4613,
											"end": 4624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 642,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 401,
											"end": 642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 506,
											"end": 532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 519,
											"end": 523,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 525,
											"end": 531,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 506,
											"end": 518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 506,
											"end": 532,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 506,
											"end": 532,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 506,
											"end": 532,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 542,
											"end": 568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 557,
											"end": 567,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 542,
											"end": 556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 542,
											"end": 568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 542,
											"end": 568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 542,
											"end": 568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 593,
											"end": 594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 590,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 586,
											"end": 594,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 578,
											"end": 614,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 578,
											"end": 614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 631,
											"end": 635,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 624,
											"end": 628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 624,
											"end": 635,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 401,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4769,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4813,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4813,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4848,
											"end": 4861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4867,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4869,
											"end": 4876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 2,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10098,
											"end": 10102,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10066,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10066,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10103,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10066,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9982,
											"end": 10110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11825,
											"end": 11849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 11862,
											"end": 11867,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11869,
											"end": 11876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11852,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11852,
											"end": 11877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11825,
											"end": 11877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11825,
											"end": 11877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11910,
											"end": 11927,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11891,
											"end": 11907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11891,
											"end": 11927,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11966,
											"end": 11971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11947,
											"end": 11963,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11947,
											"end": 11971,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12025,
											"end": 12032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12034,
											"end": 12050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12052,
											"end": 12057,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 11998,
											"end": 12058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12114,
											"end": 12171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 12123,
											"end": 12128,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12130,
											"end": 12137,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12158,
											"end": 12163,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12139,
											"end": 12155,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12139,
											"end": 12163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12165,
											"end": 12170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12114,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 12114,
											"end": 12171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12114,
											"end": 12171,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 12114,
											"end": 12171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 12202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11726,
											"end": 12202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6669,
											"end": 6673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6710,
											"end": 6740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6778,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6832,
											"end": 6833,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6803,
											"end": 6835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6855,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6863,
											"end": 6867,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 6871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6873,
											"end": 6878,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6855,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6855,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6855,
											"end": 6879,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6855,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8803,
											"end": 8804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8784,
											"end": 8791,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8857,
											"end": 8858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8828,
											"end": 8860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8880,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8896,
											"end": 8897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8909,
											"end": 8914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8880,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8880,
											"end": 8915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8880,
											"end": 8915,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8880,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2388,
											"end": 2393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2402,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2365,
											"end": 2403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11065,
											"end": 11087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11090,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 11090,
											"end": 11108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11065,
											"end": 11108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11065,
											"end": 11108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11122,
											"end": 11127,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11193,
											"end": 11194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11164,
											"end": 11196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11239,
											"end": 11240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11220,
											"end": 11227,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11264,
											"end": 11295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11352,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11334,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11336,
											"end": 11343,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11366,
											"end": 11375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11405,
											"end": 11410,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11421,
											"end": 11426,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 11396,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11055,
											"end": 11444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7311,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 7311,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7286,
											"end": 7329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7286,
											"end": 7329,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7359,
											"end": 7360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7343,
											"end": 7347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7497,
											"end": 7502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7479,
											"end": 7502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7533,
											"end": 7552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7567,
											"end": 7571,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7533,
											"end": 7572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7533,
											"end": 7572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7590,
											"end": 7601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7665,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7667,
											"end": 7678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7680,
											"end": 7685,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7636,
											"end": 7686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7860,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7841,
											"end": 7852,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7832,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7833,
											"end": 7837,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7913,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7901,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8080,
											"end": 8085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8289,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8354,
											"end": 8356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8348,
											"end": 8352,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8358,
											"end": 8363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 8339,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7276,
											"end": 8371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 8371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2553,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2553,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2591,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2581,
											"end": 2596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2606,
											"end": 2625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 5878,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5879,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 6008,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5891,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 5998,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 6002,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6014,
											"end": 6194,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6014,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6062,
											"end": 6139,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6059,
											"end": 6060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6052,
											"end": 6140,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6163,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 6156,
											"end": 6157,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6149,
											"end": 6164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6187,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6188,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6481,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6200,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 6305,
											"end": 6309,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 6283,
											"end": 6310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6310,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 6283,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6275,
											"end": 6281,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6311,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6413,
											"end": 6419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6401,
											"end": 6411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6398,
											"end": 6420,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6365,
											"end": 6375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6362,
											"end": 6396,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6421,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6356,
											"end": 6444,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6356,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 6356,
											"end": 6444,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 6424,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6424,
											"end": 6442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6442,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 6424,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6356,
											"end": 6444,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 6356,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6464,
											"end": 6474,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6462,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6475,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6616,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6487,
											"end": 6616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6521,
											"end": 6527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 6548,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6538,
											"end": 6568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6538,
											"end": 6568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 6605,
											"end": 6609,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6603,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6577,
											"end": 6610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6610,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 6577,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6616,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6930,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 6622,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6792,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6793,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6816,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 6760,
											"end": 6816,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6796,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6816,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 6760,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 6856,
											"end": 6862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 6834,
											"end": 6863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6863,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 6834,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6918,
											"end": 6922,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6908,
											"end": 6923,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 6923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 6923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6930,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6930,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 7084,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 6936,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7034,
											"end": 7040,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7029,
											"end": 7032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7027,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7011,
											"end": 7041,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7064,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7057,
											"end": 7073,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7077,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 7084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 7084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 7084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 7084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7515,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 7090,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7168,
											"end": 7173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 7209,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 7251,
											"end": 7257,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7209,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 7209,
											"end": 7258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7209,
											"end": 7258,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 7209,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7193,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 7193,
											"end": 7259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7193,
											"end": 7259,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 7193,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7282,
											"end": 7288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7275,
											"end": 7280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7268,
											"end": 7289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7324,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7313,
											"end": 7318,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7309,
											"end": 7325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7361,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7349,
											"end": 7355,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7344,
											"end": 7347,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7337,
											"end": 7362,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7334,
											"end": 7446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7334,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 7334,
											"end": 7446,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7365,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 7365,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 7365,
											"end": 7444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7365,
											"end": 7444,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 7365,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7334,
											"end": 7446,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 7334,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 7502,
											"end": 7508,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7500,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7492,
											"end": 7495,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 7455,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7509,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 7455,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7515,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7515,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7875,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 7535,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7591,
											"end": 7596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7633,
											"end": 7637,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7625,
											"end": 7631,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7621,
											"end": 7638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7617,
											"end": 7644,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7607,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 7607,
											"end": 7729,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7648,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 7648,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 7648,
											"end": 7727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7648,
											"end": 7727,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 7648,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7607,
											"end": 7729,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 7607,
											"end": 7729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7765,
											"end": 7771,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7752,
											"end": 7772,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7790,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 7865,
											"end": 7868,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7857,
											"end": 7863,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7850,
											"end": 7854,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7848,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7855,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7790,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 7790,
											"end": 7869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7790,
											"end": 7869,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 7790,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7597,
											"end": 7875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7875,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 8860,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 7881,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7978,
											"end": 7984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7994,
											"end": 8000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8043,
											"end": 8045,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8031,
											"end": 8040,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8022,
											"end": 8029,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8041,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8014,
											"end": 8046,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 8049,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8186,
											"end": 8195,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8182,
											"end": 8199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8169,
											"end": 8200,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8219,
											"end": 8225,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8216,
											"end": 8246,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8213,
											"end": 8330,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8213,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 8213,
											"end": 8330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8249,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 8249,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 8249,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8249,
											"end": 8328,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 8249,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8213,
											"end": 8330,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 8213,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8409,
											"end": 8416,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8400,
											"end": 8406,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8389,
											"end": 8398,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8385,
											"end": 8407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 8354,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8344,
											"end": 8417,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8344,
											"end": 8417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8466,
											"end": 8498,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8525,
											"end": 8543,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8517,
											"end": 8523,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8514,
											"end": 8544,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8511,
											"end": 8628,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8511,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 8511,
											"end": 8628,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 8547,
											"end": 8626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8511,
											"end": 8628,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 8511,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 8707,
											"end": 8714,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8698,
											"end": 8704,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8687,
											"end": 8696,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8683,
											"end": 8705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 8652,
											"end": 8715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8715,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 8652,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8642,
											"end": 8715,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8642,
											"end": 8715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8437,
											"end": 8725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8764,
											"end": 8766,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8790,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 8835,
											"end": 8842,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8826,
											"end": 8832,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8811,
											"end": 8833,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8790,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 8790,
											"end": 8843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8790,
											"end": 8843,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 8790,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8780,
											"end": 8843,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8780,
											"end": 8843,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 8860,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 8860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 8860,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 8860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 8860,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 8860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 9340,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 8866,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8934,
											"end": 8940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 8993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8979,
											"end": 8988,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8977,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8966,
											"end": 8989,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8962,
											"end": 8994,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 8997,
											"end": 9076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 8997,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 8959,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9117,
											"end": 9118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 9187,
											"end": 9194,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9178,
											"end": 9184,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9167,
											"end": 9176,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9163,
											"end": 9185,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 9142,
											"end": 9195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9132,
											"end": 9195,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9132,
											"end": 9195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9244,
											"end": 9246,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 9315,
											"end": 9322,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9306,
											"end": 9312,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9295,
											"end": 9304,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9270,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 9270,
											"end": 9323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9270,
											"end": 9323,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 9270,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9215,
											"end": 9333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 9340,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 9340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 9340,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 9340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 9340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 9340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9526,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 9346,
											"end": 9526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9394,
											"end": 9471,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9391,
											"end": 9392,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9384,
											"end": 9472,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9491,
											"end": 9495,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9488,
											"end": 9489,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9481,
											"end": 9496,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9515,
											"end": 9519,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9512,
											"end": 9513,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9505,
											"end": 9520,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9532,
											"end": 9852,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 9532,
											"end": 9852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9614,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9607,
											"end": 9611,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9603,
											"end": 9615,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9660,
											"end": 9661,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9654,
											"end": 9658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9650,
											"end": 9662,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9681,
											"end": 9699,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9671,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 9671,
											"end": 9752,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9737,
											"end": 9741,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 9729,
											"end": 9735,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9725,
											"end": 9742,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9715,
											"end": 9742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9715,
											"end": 9742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9671,
											"end": 9752,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 9671,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9801,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9791,
											"end": 9797,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9788,
											"end": 9802,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9768,
											"end": 9786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9765,
											"end": 9803,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9762,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 9762,
											"end": 9846,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 9818,
											"end": 9836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9762,
											"end": 9846,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 9762,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9583,
											"end": 9852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9532,
											"end": 9852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9532,
											"end": 9852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9532,
											"end": 9852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9532,
											"end": 9852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 10038,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 9858,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9906,
											"end": 9983,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9903,
											"end": 9904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9984,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10003,
											"end": 10007,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 10000,
											"end": 10001,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9993,
											"end": 10008,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10027,
											"end": 10031,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10024,
											"end": 10025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10235,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 10044,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10084,
											"end": 10087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 10121,
											"end": 10122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 10103,
											"end": 10123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10098,
											"end": 10123,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10098,
											"end": 10123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 10155,
											"end": 10156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 10137,
											"end": 10157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 10137,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10132,
											"end": 10157,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10132,
											"end": 10157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10180,
											"end": 10181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10173,
											"end": 10182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10166,
											"end": 10182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10166,
											"end": 10182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10201,
											"end": 10204,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10198,
											"end": 10199,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10195,
											"end": 10205,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10192,
											"end": 10228,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10192,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 10192,
											"end": 10228,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10208,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 10208,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 10208,
											"end": 10226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10208,
											"end": 10226,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 10208,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10192,
											"end": 10228,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 10192,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10235,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10241,
											"end": 10403,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 10241,
											"end": 10403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10381,
											"end": 10395,
											"name": "PUSH",
											"source": 8,
											"value": "4361702065786365656465640000000000000000000000000000000000000000"
										},
										{
											"begin": 10377,
											"end": 10378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10369,
											"end": 10375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10365,
											"end": 10379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10358,
											"end": 10396,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10241,
											"end": 10403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10241,
											"end": 10403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10775,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 10409,
											"end": 10775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10551,
											"end": 10554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10572,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 10636,
											"end": 10638,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 10631,
											"end": 10634,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10572,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10572,
											"end": 10639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10572,
											"end": 10639,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 10572,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10565,
											"end": 10639,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10565,
											"end": 10639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10648,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 10737,
											"end": 10740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10648,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 10648,
											"end": 10741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10648,
											"end": 10741,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 10648,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10766,
											"end": 10768,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10761,
											"end": 10764,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10757,
											"end": 10769,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10750,
											"end": 10769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10750,
											"end": 10769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10947,
											"end": 10951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10985,
											"end": 10987,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10974,
											"end": 10983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10970,
											"end": 10988,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10962,
											"end": 10988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10962,
											"end": 10988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11034,
											"end": 11043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11028,
											"end": 11032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11024,
											"end": 11044,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11020,
											"end": 11021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11009,
											"end": 11018,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11005,
											"end": 11022,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10998,
											"end": 11045,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 11188,
											"end": 11192,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 11062,
											"end": 11193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11193,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 11062,
											"end": 11193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11054,
											"end": 11193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11054,
											"end": 11193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 11200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11206,
											"end": 11372,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 11206,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11346,
											"end": 11364,
											"name": "PUSH",
											"source": 8,
											"value": "4E657720636170203C20737570706C7900000000000000000000000000000000"
										},
										{
											"begin": 11342,
											"end": 11343,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11340,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11330,
											"end": 11344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11323,
											"end": 11365,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11206,
											"end": 11372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11206,
											"end": 11372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11744,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11378,
											"end": 11744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11520,
											"end": 11523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11541,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 11605,
											"end": 11607,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 11600,
											"end": 11603,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11541,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 11541,
											"end": 11608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11541,
											"end": 11608,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 11541,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11534,
											"end": 11608,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11534,
											"end": 11608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11617,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 11706,
											"end": 11709,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11617,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 11617,
											"end": 11710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11617,
											"end": 11710,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 11617,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11735,
											"end": 11737,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11730,
											"end": 11733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11726,
											"end": 11738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11744,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11750,
											"end": 12169,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 11750,
											"end": 12169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11916,
											"end": 11920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11954,
											"end": 11956,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11943,
											"end": 11952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11939,
											"end": 11957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11931,
											"end": 11957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11931,
											"end": 11957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12003,
											"end": 12012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11997,
											"end": 12001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12013,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11989,
											"end": 11990,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11978,
											"end": 11987,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11974,
											"end": 11991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11967,
											"end": 12014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 12157,
											"end": 12161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 12031,
											"end": 12162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12162,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 12031,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12023,
											"end": 12162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12023,
											"end": 12162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11750,
											"end": 12169,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11750,
											"end": 12169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11750,
											"end": 12169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11750,
											"end": 12169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12175,
											"end": 12340,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12175,
											"end": 12340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12315,
											"end": 12332,
											"name": "PUSH",
											"source": 8,
											"value": "436170206D757374206265203E20300000000000000000000000000000000000"
										},
										{
											"begin": 12311,
											"end": 12312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12309,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12299,
											"end": 12313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12292,
											"end": 12333,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12175,
											"end": 12340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12175,
											"end": 12340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12346,
											"end": 12712,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 12346,
											"end": 12712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12488,
											"end": 12491,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12509,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 12573,
											"end": 12575,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 12568,
											"end": 12571,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12509,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 12509,
											"end": 12576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12509,
											"end": 12576,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 12509,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12502,
											"end": 12576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12502,
											"end": 12576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12585,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 12674,
											"end": 12677,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12585,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12585,
											"end": 12678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12585,
											"end": 12678,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 12585,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12703,
											"end": 12705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12698,
											"end": 12701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12694,
											"end": 12706,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12687,
											"end": 12706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12687,
											"end": 12706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12346,
											"end": 12712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12346,
											"end": 12712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12346,
											"end": 12712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12346,
											"end": 12712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12718,
											"end": 13137,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 12718,
											"end": 13137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12884,
											"end": 12888,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12922,
											"end": 12924,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12911,
											"end": 12920,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12907,
											"end": 12925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12899,
											"end": 12925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12971,
											"end": 12980,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12965,
											"end": 12969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12961,
											"end": 12981,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12957,
											"end": 12958,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12946,
											"end": 12955,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12935,
											"end": 12982,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 13125,
											"end": 13129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 12999,
											"end": 13130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13130,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 12999,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12991,
											"end": 13130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12991,
											"end": 13130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12718,
											"end": 13137,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12718,
											"end": 13137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12718,
											"end": 13137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12718,
											"end": 13137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13143,
											"end": 13228,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 13143,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13222,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13206,
											"end": 13222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13206,
											"end": 13222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13143,
											"end": 13228,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13143,
											"end": 13228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13143,
											"end": 13228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13143,
											"end": 13228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13335,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 13234,
											"end": 13335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13270,
											"end": 13277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13328,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13303,
											"end": 13308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13299,
											"end": 13329,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13335,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13335,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13341,
											"end": 13401,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 13341,
											"end": 13401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13369,
											"end": 13372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13390,
											"end": 13395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13383,
											"end": 13395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13383,
											"end": 13395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13341,
											"end": 13401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13341,
											"end": 13401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13341,
											"end": 13401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13341,
											"end": 13401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13407,
											"end": 13563,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 13407,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13464,
											"end": 13473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13497,
											"end": 13557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 13514,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 13523,
											"end": 13555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 13549,
											"end": 13554,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13523,
											"end": 13555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 13523,
											"end": 13555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13523,
											"end": 13555,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 13523,
											"end": 13555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13514,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 13514,
											"end": 13556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13514,
											"end": 13556,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 13514,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13497,
											"end": 13557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 13497,
											"end": 13557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13497,
											"end": 13557,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 13497,
											"end": 13557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13484,
											"end": 13557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13484,
											"end": 13557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13407,
											"end": 13563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13407,
											"end": 13563,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13407,
											"end": 13563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13407,
											"end": 13563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13569,
											"end": 13714,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 13569,
											"end": 13714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13663,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 13701,
											"end": 13706,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13663,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 13663,
											"end": 13707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13663,
											"end": 13707,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 13663,
											"end": 13707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 13661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13651,
											"end": 13708,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13569,
											"end": 13714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13569,
											"end": 13714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13569,
											"end": 13714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13720,
											"end": 13956,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 13720,
											"end": 13956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13820,
											"end": 13824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13858,
											"end": 13860,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13847,
											"end": 13856,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13843,
											"end": 13861,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13835,
											"end": 13861,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13835,
											"end": 13861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13871,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 13946,
											"end": 13947,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13935,
											"end": 13944,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13931,
											"end": 13948,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13922,
											"end": 13928,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13871,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 13871,
											"end": 13949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13871,
											"end": 13949,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 13871,
											"end": 13949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13720,
											"end": 13956,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13720,
											"end": 13956,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13720,
											"end": 13956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13720,
											"end": 13956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13720,
											"end": 13956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14404,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 13962,
											"end": 14404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14111,
											"end": 14115,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14149,
											"end": 14151,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14138,
											"end": 14147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14126,
											"end": 14152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14126,
											"end": 14152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 14230,
											"end": 14231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14219,
											"end": 14228,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14215,
											"end": 14232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14206,
											"end": 14212,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 14162,
											"end": 14233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14233,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 14162,
											"end": 14233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14243,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 14311,
											"end": 14313,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14300,
											"end": 14309,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14296,
											"end": 14314,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14287,
											"end": 14293,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14243,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 14243,
											"end": 14315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14243,
											"end": 14315,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 14243,
											"end": 14315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14325,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 14393,
											"end": 14395,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14382,
											"end": 14391,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14369,
											"end": 14375,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14325,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 14325,
											"end": 14397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14325,
											"end": 14397,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 14325,
											"end": 14397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14404,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14404,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14410,
											"end": 14551,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 14410,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14459,
											"end": 14463,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14482,
											"end": 14485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14474,
											"end": 14485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14474,
											"end": 14485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14505,
											"end": 14508,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14502,
											"end": 14503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14495,
											"end": 14509,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14539,
											"end": 14543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14536,
											"end": 14537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 14518,
											"end": 14544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14518,
											"end": 14544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14410,
											"end": 14551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14410,
											"end": 14551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14410,
											"end": 14551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14410,
											"end": 14551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14557,
											"end": 14650,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 14557,
											"end": 14650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14594,
											"end": 14600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14641,
											"end": 14643,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14636,
											"end": 14638,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14629,
											"end": 14634,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14625,
											"end": 14639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14621,
											"end": 14644,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14611,
											"end": 14644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14611,
											"end": 14644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14557,
											"end": 14650,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14557,
											"end": 14650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14557,
											"end": 14650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14557,
											"end": 14650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14763,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 14656,
											"end": 14763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14700,
											"end": 14708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14750,
											"end": 14755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14744,
											"end": 14748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14740,
											"end": 14756,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 14719,
											"end": 14756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14719,
											"end": 14756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14763,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14763,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14769,
											"end": 15162,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 14769,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 14844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14888,
											"end": 14889,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 14876,
											"end": 14886,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14872,
											"end": 14890,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14911,
											"end": 15008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 14941,
											"end": 15007,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14930,
											"end": 14939,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14911,
											"end": 15008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 14911,
											"end": 15008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14911,
											"end": 15008,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 14911,
											"end": 15008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15029,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 15059,
											"end": 15067,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15048,
											"end": 15057,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15029,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 15029,
											"end": 15068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15029,
											"end": 15068,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 15029,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15068,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15101,
											"end": 15105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15097,
											"end": 15106,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 15090,
											"end": 15095,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15086,
											"end": 15107,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15077,
											"end": 15107,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 15077,
											"end": 15107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15150,
											"end": 15154,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15140,
											"end": 15148,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15136,
											"end": 15155,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15129,
											"end": 15134,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15126,
											"end": 15156,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 15116,
											"end": 15156,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15116,
											"end": 15156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14845,
											"end": 15162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14845,
											"end": 15162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14769,
											"end": 15162,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14769,
											"end": 15162,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14769,
											"end": 15162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14769,
											"end": 15162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14769,
											"end": 15162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14769,
											"end": 15162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15168,
											"end": 15310,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 15168,
											"end": 15310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15218,
											"end": 15227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15251,
											"end": 15304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 15269,
											"end": 15303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 15278,
											"end": 15302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 15296,
											"end": 15301,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15278,
											"end": 15302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 15278,
											"end": 15302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15278,
											"end": 15302,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 15278,
											"end": 15302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15269,
											"end": 15303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 15269,
											"end": 15303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15269,
											"end": 15303,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 15269,
											"end": 15303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15251,
											"end": 15304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 15251,
											"end": 15304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15251,
											"end": 15304,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 15251,
											"end": 15304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15238,
											"end": 15304,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15238,
											"end": 15304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15168,
											"end": 15310,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15168,
											"end": 15310,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15168,
											"end": 15310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15168,
											"end": 15310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15316,
											"end": 15391,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 15316,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15359,
											"end": 15362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15380,
											"end": 15385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15373,
											"end": 15385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15373,
											"end": 15385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15316,
											"end": 15391,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15316,
											"end": 15391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15316,
											"end": 15391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15316,
											"end": 15391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15397,
											"end": 15666,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 15397,
											"end": 15666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15507,
											"end": 15546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 15538,
											"end": 15545,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15507,
											"end": 15546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 15507,
											"end": 15546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15507,
											"end": 15546,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 15507,
											"end": 15546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15568,
											"end": 15659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 15617,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 15641,
											"end": 15657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15617,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 15617,
											"end": 15658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15617,
											"end": 15658,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 15617,
											"end": 15658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15609,
											"end": 15615,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15602,
											"end": 15606,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15596,
											"end": 15607,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15568,
											"end": 15659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 15568,
											"end": 15659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15568,
											"end": 15659,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 15568,
											"end": 15659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15562,
											"end": 15566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15660,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 15473,
											"end": 15666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15397,
											"end": 15666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15397,
											"end": 15666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15397,
											"end": 15666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15397,
											"end": 15666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15672,
											"end": 15745,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 15672,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15717,
											"end": 15720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15738,
											"end": 15739,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15731,
											"end": 15739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15731,
											"end": 15739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15672,
											"end": 15745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15672,
											"end": 15745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15751,
											"end": 15940,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 15751,
											"end": 15940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15828,
											"end": 15860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 15828,
											"end": 15860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 15828,
											"end": 15860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15828,
											"end": 15860,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 15828,
											"end": 15860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15869,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 15927,
											"end": 15933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15919,
											"end": 15925,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15913,
											"end": 15917,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15869,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 15869,
											"end": 15934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15869,
											"end": 15934,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 15869,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15804,
											"end": 15940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15751,
											"end": 15940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15751,
											"end": 15940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15751,
											"end": 15940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15946,
											"end": 16132,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 15946,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16126,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 16006,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16023,
											"end": 16026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16016,
											"end": 16021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16013,
											"end": 16027,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16126,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 16006,
											"end": 16126,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16077,
											"end": 16116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 16114,
											"end": 16115,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16107,
											"end": 16112,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16077,
											"end": 16116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 16077,
											"end": 16116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16077,
											"end": 16116,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 16077,
											"end": 16116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16050,
											"end": 16051,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16043,
											"end": 16048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16052,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16030,
											"end": 16052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16030,
											"end": 16052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 16006,
											"end": 16126,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16126,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 16006,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15946,
											"end": 16132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15946,
											"end": 16132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15946,
											"end": 16132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16138,
											"end": 16681,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 16138,
											"end": 16681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16239,
											"end": 16241,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16234,
											"end": 16237,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16231,
											"end": 16242,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16228,
											"end": 16674,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16228,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 16228,
											"end": 16674,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16273,
											"end": 16311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 16305,
											"end": 16310,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16273,
											"end": 16311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 16273,
											"end": 16311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16273,
											"end": 16311,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 16273,
											"end": 16311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16357,
											"end": 16386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 16375,
											"end": 16385,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16357,
											"end": 16386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 16357,
											"end": 16386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16357,
											"end": 16386,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 16357,
											"end": 16386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16347,
											"end": 16355,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16343,
											"end": 16387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16540,
											"end": 16542,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16528,
											"end": 16538,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16525,
											"end": 16543,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16522,
											"end": 16571,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16522,
											"end": 16571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 16522,
											"end": 16571,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16561,
											"end": 16569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16546,
											"end": 16569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16546,
											"end": 16569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16522,
											"end": 16571,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 16522,
											"end": 16571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16584,
											"end": 16664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 16640,
											"end": 16662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 16658,
											"end": 16661,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16640,
											"end": 16662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 16640,
											"end": 16662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16640,
											"end": 16662,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 16640,
											"end": 16662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16630,
											"end": 16638,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16626,
											"end": 16663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16613,
											"end": 16624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16584,
											"end": 16664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 16584,
											"end": 16664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16584,
											"end": 16664,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 16584,
											"end": 16664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16243,
											"end": 16674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16243,
											"end": 16674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16228,
											"end": 16674,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 16228,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16138,
											"end": 16681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16138,
											"end": 16681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16138,
											"end": 16681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16138,
											"end": 16681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16687,
											"end": 16804,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 16687,
											"end": 16804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16741,
											"end": 16749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16791,
											"end": 16796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16785,
											"end": 16789,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16781,
											"end": 16797,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 16760,
											"end": 16797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16760,
											"end": 16797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16687,
											"end": 16804,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16687,
											"end": 16804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16687,
											"end": 16804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16687,
											"end": 16804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16687,
											"end": 16804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16810,
											"end": 16979,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 16810,
											"end": 16979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16854,
											"end": 16860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16887,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 16935,
											"end": 16936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16931,
											"end": 16937,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 16923,
											"end": 16928,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16920,
											"end": 16921,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 16916,
											"end": 16929,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16887,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 16887,
											"end": 16938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16887,
											"end": 16938,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 16887,
											"end": 16938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16883,
											"end": 16939,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 16968,
											"end": 16972,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16962,
											"end": 16966,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16958,
											"end": 16973,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16948,
											"end": 16973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16948,
											"end": 16973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16861,
											"end": 16979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16810,
											"end": 16979,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16810,
											"end": 16979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16810,
											"end": 16979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16810,
											"end": 16979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16810,
											"end": 16979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17279,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 16984,
											"end": 17279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17060,
											"end": 17064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17206,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 17231,
											"end": 17234,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17225,
											"end": 17229,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17206,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 17206,
											"end": 17235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17206,
											"end": 17235,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 17206,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17198,
											"end": 17235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17198,
											"end": 17235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17268,
											"end": 17271,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17265,
											"end": 17266,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 17261,
											"end": 17272,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17255,
											"end": 17259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17252,
											"end": 17273,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17273,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17244,
											"end": 17273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17279,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17279,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17284,
											"end": 18679,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 17284,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17401,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 17434,
											"end": 17437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17401,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 17401,
											"end": 17438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17401,
											"end": 17438,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 17401,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17503,
											"end": 17521,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17495,
											"end": 17501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17492,
											"end": 17522,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17489,
											"end": 17545,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17489,
											"end": 17545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 17489,
											"end": 17545,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17525,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 17525,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 17525,
											"end": 17543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17525,
											"end": 17543,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 17525,
											"end": 17543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17489,
											"end": 17545,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 17489,
											"end": 17545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17569,
											"end": 17607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 17601,
											"end": 17605,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17595,
											"end": 17606,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17569,
											"end": 17607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 17569,
											"end": 17607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17569,
											"end": 17607,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 17569,
											"end": 17607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 17721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 17714,
											"end": 17720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17706,
											"end": 17712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17700,
											"end": 17704,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 17721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 17654,
											"end": 17721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 17721,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 17654,
											"end": 17721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17748,
											"end": 17749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17772,
											"end": 17776,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17759,
											"end": 17776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17759,
											"end": 17776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17804,
											"end": 17806,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17796,
											"end": 17802,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17793,
											"end": 17807,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17821,
											"end": 17822,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17816,
											"end": 18434,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17816,
											"end": 18434,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17816,
											"end": 18434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 17816,
											"end": 18434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18478,
											"end": 18479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18495,
											"end": 18501,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18492,
											"end": 18569,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18492,
											"end": 18569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 18492,
											"end": 18569,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18544,
											"end": 18553,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18539,
											"end": 18542,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 18535,
											"end": 18554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18529,
											"end": 18555,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18520,
											"end": 18555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18520,
											"end": 18555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18492,
											"end": 18569,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 18492,
											"end": 18569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18595,
											"end": 18662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 18655,
											"end": 18661,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18648,
											"end": 18653,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18595,
											"end": 18662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 18595,
											"end": 18662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18595,
											"end": 18662,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 18595,
											"end": 18662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18589,
											"end": 18593,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18582,
											"end": 18663,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 18451,
											"end": 18673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17786,
											"end": 18673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 17786,
											"end": 18673,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17816,
											"end": 18434,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 17816,
											"end": 18434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17868,
											"end": 17872,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17864,
											"end": 17873,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17856,
											"end": 17862,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17852,
											"end": 17874,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17902,
											"end": 17939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 17934,
											"end": 17938,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17902,
											"end": 17939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 17902,
											"end": 17939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17902,
											"end": 17939,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 17902,
											"end": 17939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17961,
											"end": 17962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17975,
											"end": 18183,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 17975,
											"end": 18183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17989,
											"end": 17996,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17986,
											"end": 17987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17983,
											"end": 17997,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17975,
											"end": 18183,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17975,
											"end": 18183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 17975,
											"end": 18183,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18068,
											"end": 18077,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18063,
											"end": 18066,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 18059,
											"end": 18078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18053,
											"end": 18079,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18045,
											"end": 18051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18038,
											"end": 18080,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 18119,
											"end": 18120,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18111,
											"end": 18117,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18107,
											"end": 18121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18097,
											"end": 18121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18097,
											"end": 18121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18166,
											"end": 18168,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18155,
											"end": 18164,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18151,
											"end": 18169,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18138,
											"end": 18169,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 18138,
											"end": 18169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18012,
											"end": 18016,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18009,
											"end": 18010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18005,
											"end": 18017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18000,
											"end": 18017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18000,
											"end": 18017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17975,
											"end": 18183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 17975,
											"end": 18183,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17975,
											"end": 18183,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 17975,
											"end": 18183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18211,
											"end": 18217,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18202,
											"end": 18209,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18199,
											"end": 18218,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18196,
											"end": 18375,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18196,
											"end": 18375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 18196,
											"end": 18375,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18269,
											"end": 18278,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18264,
											"end": 18267,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 18260,
											"end": 18279,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18254,
											"end": 18280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18312,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 18354,
											"end": 18358,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 18346,
											"end": 18352,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 18342,
											"end": 18359,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18331,
											"end": 18340,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18312,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 18312,
											"end": 18360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18312,
											"end": 18360,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 18312,
											"end": 18360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18304,
											"end": 18310,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18297,
											"end": 18361,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 18219,
											"end": 18375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18196,
											"end": 18375,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 18196,
											"end": 18375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18421,
											"end": 18422,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18417,
											"end": 18418,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 18409,
											"end": 18415,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 18405,
											"end": 18419,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18401,
											"end": 18423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18395,
											"end": 18399,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 18388,
											"end": 18424,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 17823,
											"end": 18434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17823,
											"end": 18434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17823,
											"end": 18434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17786,
											"end": 18673,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 17786,
											"end": 18673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17786,
											"end": 18673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17376,
											"end": 18679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17376,
											"end": 18679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17376,
											"end": 18679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17284,
											"end": 18679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17284,
											"end": 18679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17284,
											"end": 18679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"KrunalTokenV1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"initialize(string,string,uint256)": "b119490e",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateCap(uint256)": "a7d68896"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cap_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"updateCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KrunalTokenV1.sol\":\"KrunalTokenV1\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"KrunalTokenV1.sol\":{\"keccak256\":\"0x121fe407384898d7b69cf516f7a5a906a9ad402a4c53bad282cae24bfea2ffd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6728a88887984d173e509bc4cbb2ec738a69f4ea566271ab40e49642a78031c9\",\"dweb:/ipfs/QmSZYGsEJywZpbdQLmJiv94qhDF1cvMqFozKnQUQ2dWWET\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1379,
								"contract": "KrunalTokenV1.sol:KrunalTokenV1",
								"label": "_cap",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1125
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1126,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1125,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 463,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1125,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1125,
								462
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 462,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 462,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 462,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 462,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 462,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 462,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 454,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 459,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 205,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 462,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "2349:6929:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1125
						],
						"ERC20Upgradeable": [
							1079
						],
						"IERC20": [
							1340
						],
						"IERC20Errors": [
							1167
						],
						"IERC20Metadata": [
							1366
						],
						"Initializable": [
							462
						]
					},
					"id": 1080,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1341,
							"src": "131:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 465,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1340,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1367,
							"src": "202:97:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1366,
										"src": "210:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1126,
							"src": "300:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1125,
										"src": "308:18:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1263,
							"src": "371:83:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 471,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1167,
										"src": "379:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 474,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 463,
							"src": "455:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 473,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "463:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 476,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "1319:13:2"
									},
									"id": 477,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:2"
								},
								{
									"baseName": {
										"id": 478,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1125,
										"src": "1334:18:2"
									},
									"id": 479,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:2"
								},
								{
									"baseName": {
										"id": 480,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "1354:6:2"
									},
									"id": 481,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:2"
								},
								{
									"baseName": {
										"id": 482,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1366,
										"src": "1362:14:2"
									},
									"id": 483,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:2"
								},
								{
									"baseName": {
										"id": 484,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1167,
										"src": "1378:12:2"
									},
									"id": 485,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:2"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079,
								1167,
								1366,
								1340,
								1125,
								462
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:2",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 503,
									"members": [
										{
											"constant": false,
											"id": 490,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1495:45:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 489,
												"keyName": "account",
												"keyNameLocation": "1511:7:2",
												"keyType": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 496,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1551:75:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 495,
												"keyName": "account",
												"keyNameLocation": "1567:7:2",
												"keyType": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 494,
													"keyName": "spender",
													"keyNameLocation": "1594:7:2",
													"keyType": {
														"id": 492,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 493,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 498,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1637:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 497,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 500,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1668:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 499,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 502,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1690:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 501,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:2",
									"nodeType": "StructDefinition",
									"scope": 1079,
									"src": "1465:246:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 506,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 1079,
									"src": "1826:114:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 504,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 505,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "2021:79:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:2",
													"nodeType": "YulBlock",
													"src": "2040:54:2",
													"statements": [
														{
															"nativeSrc": "2054:30:2",
															"nodeType": "YulAssignment",
															"src": "2054:30:2",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:2",
																"nodeType": "YulIdentifier",
																"src": "2064:20:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 510,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 506,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:2",
														"valueSize": 1
													}
												],
												"id": 512,
												"nodeType": "InlineAssembly",
												"src": "2031:63:2"
											}
										]
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1997:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 509,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 508,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "1997:12:2"
													},
													"referencedDeclaration": 503,
													"src": "1997:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:2"
									},
									"scope": 1079,
									"src": "1947:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "2355:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 525,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "2388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 526,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2395:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 524,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "2365:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "2365:38:2"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "2106:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 522,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 521,
												"name": "onlyInitializing",
												"nameLocations": [
													"2338:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2338:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:16:2"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2272:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2299:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2285:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 516,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2285:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2320:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2306:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2306:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:44:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:2"
									},
									"scope": 1079,
									"src": "2263:147:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "2518:114:2",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2549:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "2528:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 540,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 539,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2528:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "2528:12:2"
															},
															"referencedDeclaration": 503,
															"src": "2528:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 542,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2553:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:43:2"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 545,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2581:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2583:5:2",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "2581:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 548,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2591:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2581:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "2581:15:2"
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 551,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2606:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2608:7:2",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 502,
														"src": "2606:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 554,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "2618:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2606:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "2606:19:2"
											}
										]
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 537,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 536,
												"name": "onlyInitializing",
												"nameLocations": [
													"2501:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2501:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2501:16:2"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2425:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2462:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2448:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 531,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2448:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2483:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2469:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2469:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:44:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:2"
									},
									"scope": 1079,
									"src": "2416:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1353
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "2757:84:2",
										"statements": [
											{
												"assignments": [
													566
												],
												"declarations": [
													{
														"constant": false,
														"id": 566,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2788:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "2767:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 565,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 564,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2767:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "2767:12:2"
															},
															"referencedDeclaration": 503,
															"src": "2767:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 567,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2792:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 570,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "2827:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2829:5:2",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 500,
													"src": "2827:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "2820:14:2"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "2638:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2706:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:2:2"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2742:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:2"
									},
									"scope": 1079,
									"src": "2697:144:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1359
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "3016:86:2",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3047:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "3026:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 581,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 580,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3026:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "3026:12:2"
															},
															"referencedDeclaration": 503,
															"src": "3026:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3051:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 586,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "3086:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3088:7:2",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 502,
													"src": "3086:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 579,
												"id": 588,
												"nodeType": "Return",
												"src": "3079:16:2"
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "2847:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2963:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:2:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3001:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3001:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:15:2"
									},
									"scope": 1079,
									"src": "2954:148:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3791:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3808:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 595,
												"id": 597,
												"nodeType": "Return",
												"src": "3801:9:2"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "3108:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3744:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:2"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3784:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 593,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3784:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:7:2"
									},
									"scope": 1079,
									"src": "3735:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1289
									],
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "3938:91:2",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3969:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 614,
														"src": "3948:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 606,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 605,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3948:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "3948:12:2"
															},
															"referencedDeclaration": 503,
															"src": "3948:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 608,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3973:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3948:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 611,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "4008:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4010:12:2",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 498,
													"src": "4008:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 604,
												"id": 613,
												"nodeType": "Return",
												"src": "4001:21:2"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3823:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3886:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3897:2:2"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3929:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:9:2"
									},
									"scope": 1079,
									"src": "3877:152:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1297
									],
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "4161:97:2",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4192:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "4171:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 624,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 623,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4171:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "4171:12:2"
															},
															"referencedDeclaration": 503,
															"src": "4171:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 626,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "4196:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4196:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4171:43:2"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 629,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "4231:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4233:9:2",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 490,
														"src": "4231:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 632,
													"indexExpression": {
														"id": 631,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "4243:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4231:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 622,
												"id": 633,
												"nodeType": "Return",
												"src": "4224:27:2"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "4035:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4096:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4114:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4106:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4106:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4105:17:2"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4152:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4151:9:2"
									},
									"scope": 1079,
									"src": "4087:171:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "4528:103:2",
										"statements": [
											{
												"assignments": [
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4546:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "4538:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 645,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 647,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "4554:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4554:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "4586:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4593:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4597:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "4576:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4576:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "4576:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4620:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 644,
												"id": 657,
												"nodeType": "Return",
												"src": "4613:11:2"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "4264:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4462:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4479:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "4471:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4491:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "4483:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:27:2"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "4522:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4522:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4521:6:2"
									},
									"scope": 1079,
									"src": "4453:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1317
									],
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "4778:106:2",
										"statements": [
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4809:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "4788:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 670,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 669,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4788:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "4788:12:2"
															},
															"referencedDeclaration": 503,
															"src": "4788:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 672,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "4813:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4813:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4788:43:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 675,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "4848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4850:11:2",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 496,
															"src": "4848:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 678,
														"indexExpression": {
															"id": 677,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4862:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4848:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 680,
													"indexExpression": {
														"id": 679,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "4869:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4848:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 668,
												"id": 681,
												"nodeType": "Return",
												"src": "4841:36:2"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "4637:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4698:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4716:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4708:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4708:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4731:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4723:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4707:32:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4769:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:9:2"
									},
									"scope": 1079,
									"src": "4689:195:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "5270:107:2",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5288:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "5280:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5280:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "5296:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5296:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5280:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5327:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "5334:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5343:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															962,
															1030
														],
														"referencedDeclaration": 962,
														"src": "5318:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5318:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5318:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 705,
												"nodeType": "Return",
												"src": "5359:11:2"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "4890:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5200:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5216:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5208:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5233:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5225:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:32:2"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5264:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5263:6:2"
									},
									"scope": 1079,
									"src": "5191:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1339
									],
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6062:151:2",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6080:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "6072:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 719,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6072:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 721,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "6090:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6090:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6072:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6128:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "6134:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "6143:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "6112:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6112:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "6112:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6169:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "6175:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "6179:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "6159:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6159:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "6159:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6202:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 718,
												"id": 737,
												"nodeType": "Return",
												"src": "6195:11:2"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "5383:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5978:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5999:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5991:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6013:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6005:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6025:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6017:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6017:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5990:41:2"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6056:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6056:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:6:2"
									},
									"scope": 1079,
									"src": "5969:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "6655:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 749,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "6669:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6685:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6677:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 750,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6677:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6677:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6669:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "6665:86:2",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6689:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6737:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6729:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 756,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6729:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6729:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 755,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "6710:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6710:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 761,
															"nodeType": "RevertStatement",
															"src": "6703:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "6764:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6778:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6770:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 765,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6770:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6770:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6764:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "6760:86:2",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "6782:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6832:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6824:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 771,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6824:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6824:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 770,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "6803:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6803:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 776,
															"nodeType": "RevertStatement",
															"src": "6796:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6863:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "6869:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "6873:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "6855:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6855:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "6855:24:2"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6219:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6595:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6613:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6605:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6605:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6627:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6619:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6639:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6631:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6604:41:2"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6655:0:2"
									},
									"scope": 1079,
									"src": "6586:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "7276:1095:2",
										"statements": [
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7307:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "7286:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 797,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 796,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7286:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "7286:12:2"
															},
															"referencedDeclaration": 503,
															"src": "7286:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 799,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "7311:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7311:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7286:43:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 802,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "7343:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7359:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7351:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 803,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7351:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7351:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7343:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "7519:366:2",
													"statements": [
														{
															"assignments": [
																816
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 816,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7541:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 844,
																	"src": "7533:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7533:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 821,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 817,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "7555:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7557:9:2",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 490,
																	"src": "7555:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 820,
																"indexExpression": {
																	"id": 819,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "7567:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7555:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7533:39:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 822,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "7590:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7604:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7590:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 832,
															"nodeType": "IfStatement",
															"src": "7586:115:2",
															"trueBody": {
																"id": 831,
																"nodeType": "Block",
																"src": "7611:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 826,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7661:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 827,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 816,
																					"src": "7667:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 828,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "7680:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 825,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "7636:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7636:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 830,
																		"nodeType": "RevertStatement",
																		"src": "7629:57:2"
																	}
																]
															}
														},
														{
															"id": 843,
															"nodeType": "UncheckedBlock",
															"src": "7714:161:2",
															"statements": [
																{
																	"expression": {
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 833,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "7821:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7823:9:2",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 490,
																				"src": "7821:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 837,
																			"indexExpression": {
																				"id": 835,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 789,
																				"src": "7833:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7821:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 838,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 816,
																				"src": "7841:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 839,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "7855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7821:39:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 842,
																	"nodeType": "ExpressionStatement",
																	"src": "7821:39:2"
																}
															]
														}
													]
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "7339:546:2",
												"trueBody": {
													"id": 814,
													"nodeType": "Block",
													"src": "7363:150:2",
													"statements": [
														{
															"expression": {
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 808,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "7479:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7481:12:2",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 498,
																	"src": "7479:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7479:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"nodeType": "ExpressionStatement",
															"src": "7479:23:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "7899:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7913:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7905:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 847,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7905:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7905:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7899:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 869,
													"nodeType": "Block",
													"src": "8116:208:2",
													"statements": [
														{
															"id": 868,
															"nodeType": "UncheckedBlock",
															"src": "8130:184:2",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 860,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "8275:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 863,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8277:9:2",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 490,
																				"src": "8275:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 864,
																			"indexExpression": {
																				"id": 862,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 791,
																				"src": "8287:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8275:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 865,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "8294:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8275:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "8275:24:2"
																}
															]
														}
													]
												},
												"id": 870,
												"nodeType": "IfStatement",
												"src": "7895:429:2",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "7917:193:2",
													"statements": [
														{
															"id": 858,
															"nodeType": "UncheckedBlock",
															"src": "7931:169:2",
															"statements": [
																{
																	"expression": {
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 852,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "8062:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 854,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8064:12:2",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 498,
																			"src": "8062:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 855,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "8080:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8062:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 857,
																	"nodeType": "ExpressionStatement",
																	"src": "8062:23:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 872,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "8348:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8354:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "8358:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "8339:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8339:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "EmitStatement",
												"src": "8334:30:2"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "6892:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7210:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7226:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7218:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7240:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7252:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7244:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7244:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:41:2"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7276:0:2"
									},
									"scope": 1079,
									"src": "7201:1170:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "8770:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "8784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8803:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8795:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8795:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8795:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8784:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "IfStatement",
												"src": "8780:91:2",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "8807:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8857:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8849:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 893,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8849:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8849:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 892,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "8828:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8828:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 898,
															"nodeType": "RevertStatement",
															"src": "8821:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8888:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 902,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8888:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8888:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "8909:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "8880:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8880:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "8880:35:2"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "8377:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8723:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8737:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "8729:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8729:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "8746:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8746:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8728:32:2"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:0:2"
									},
									"scope": 1079,
									"src": "8714:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "9296:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 919,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "9310:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9321:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 920,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9321:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9321:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9310:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"nodeType": "IfStatement",
												"src": "9306:89:2",
												"trueBody": {
													"id": 932,
													"nodeType": "Block",
													"src": "9333:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9381:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9373:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 926,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9373:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9373:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 925,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "9354:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9354:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 931,
															"nodeType": "RevertStatement",
															"src": "9347:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "9412:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9429:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9421:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 936,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9421:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9421:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "9433:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 934,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "9404:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9404:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "9404:35:2"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "8928:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9249:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9263:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "9255:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9255:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9280:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "9272:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9272:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9254:32:2"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9296:0:2"
									},
									"scope": 1079,
									"src": "9240:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "10056:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "10075:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "10082:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "10091:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10098:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 954,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															962,
															1030
														],
														"referencedDeclaration": 1030,
														"src": "10066:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10066:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "10066:37:2"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "9452:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9991:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10008:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "10000:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "10015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "10032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9999:47:2"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10056:0:2"
									},
									"scope": 1079,
									"src": "9982:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "11055:389:2",
										"statements": [
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11086:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "11065:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 975,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 974,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11065:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "11065:12:2"
															},
															"referencedDeclaration": 503,
															"src": "11065:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 977,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "11090:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11090:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11065:43:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 980,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "11122:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11139:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11131:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 981,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11131:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11131:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11122:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "11118:89:2",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "11143:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11193:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11185:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 987,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11185:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11185:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 986,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "11164:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11164:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 992,
															"nodeType": "RevertStatement",
															"src": "11157:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 995,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "11220:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11239:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 996,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11231:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11231:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11220:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1009,
												"nodeType": "IfStatement",
												"src": "11216:90:2",
												"trueBody": {
													"id": 1008,
													"nodeType": "Block",
													"src": "11243:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11292:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11284:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1002,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11284:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11284:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1001,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "11264:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11264:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1007,
															"nodeType": "RevertStatement",
															"src": "11257:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1010,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "11315:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11317:11:2",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 496,
																"src": "11315:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1015,
															"indexExpression": {
																"id": 1012,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "11329:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11315:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1016,
														"indexExpression": {
															"id": 1013,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11336:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11315:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "11347:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11315:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "11315:37:2"
											},
											{
												"condition": {
													"id": 1020,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 971,
													"src": "11366:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "IfStatement",
												"src": "11362:76:2",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "11377:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1022,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "11405:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1023,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "11412:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1024,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "11421:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1021,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "11396:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11396:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1026,
															"nodeType": "EmitStatement",
															"src": "11391:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "10116:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10966:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10983:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10975:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10975:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10998:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10990:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "11007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11007:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11027:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "11022:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11022:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10974:63:2"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11055:0:2"
									},
									"scope": 1079,
									"src": "10957:487:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "11815:387:2",
										"statements": [
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11833:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1077,
														"src": "11825:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11825:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1046,
												"initialValue": {
													"arguments": [
														{
															"id": 1043,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "11862:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "11869:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1042,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "11852:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11852:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11825:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1047,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "11891:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11915:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1049,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11915:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1048,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11910:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11910:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11924:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11910:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11891:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "11887:309:2",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "11929:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1054,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "11947:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1055,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "11966:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11947:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1064,
															"nodeType": "IfStatement",
															"src": "11943:130:2",
															"trueBody": {
																"id": 1063,
																"nodeType": "Block",
																"src": "11973:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1058,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1035,
																					"src": "12025:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1059,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1041,
																					"src": "12034:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1060,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "12052:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1057,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1156,
																				"src": "11998:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11998:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1062,
																		"nodeType": "RevertStatement",
																		"src": "11991:67:2"
																	}
																]
															}
														},
														{
															"id": 1074,
															"nodeType": "UncheckedBlock",
															"src": "12086:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1066,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1033,
																				"src": "12123:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1067,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1035,
																				"src": "12130:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1068,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1041,
																					"src": "12139:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1069,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "12158:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12139:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12165:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1065,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				962,
																				1030
																			],
																			"referencedDeclaration": 1030,
																			"src": "12114:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12114:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1073,
																	"nodeType": "ExpressionStatement",
																	"src": "12114:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "11450:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11735:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "11751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11751:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11774:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "11766:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11766:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11791:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "11783:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11783:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11750:47:2"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11815:0:2"
									},
									"scope": 1079,
									"src": "11726:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1080,
							"src": "1281:10923:2",
							"usedErrors": [
								211,
								214,
								1137,
								1142,
								1147,
								1156,
								1161,
								1166
							],
							"usedEvents": [
								219,
								1274,
								1283
							]
						}
					],
					"src": "105:12100:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1125
						],
						"Initializable": [
							462
						]
					},
					"id": 1126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1081,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1083,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1126,
							"sourceUnit": 463,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1082,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1085,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "728:13:3"
									},
									"id": 1086,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1084,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1125,
							"linearizedBaseContracts": [
								1125,
								462
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1088,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 1125,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1094,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 1125,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1103,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1105,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 1125,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1114,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 1125,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1120,
												"id": 1122,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 1125,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1126,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1262
						],
						"IERC20Errors": [
							1167
						],
						"IERC721Errors": [
							1215
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1128,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1167,
							"linearizedBaseContracts": [
								1167
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1137,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1142,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1147,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1156,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1161,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1166,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 1263,
							"src": "280:1764:4",
							"usedErrors": [
								1137,
								1142,
								1147,
								1156,
								1161,
								1166
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1168,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1215,
							"linearizedBaseContracts": [
								1215
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1173,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1178,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1187,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1192,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1197,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1204,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1209,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1214,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 1263,
							"src": "2190:2092:4",
							"usedErrors": [
								1173,
								1178,
								1187,
								1192,
								1197,
								1204,
								1209,
								1214
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1216,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1262,
							"linearizedBaseContracts": [
								1262
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1227,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1232,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1237,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1244,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1249,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1254,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1261,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 1263,
							"src": "4430:2107:4",
							"usedErrors": [
								1227,
								1232,
								1237,
								1244,
								1249,
								1254,
								1261
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1340
						]
					},
					"id": 1341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1340,
							"linearizedBaseContracts": [
								1340
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1274,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1283,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1340,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1340,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1340,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1340,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1340,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1340,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1341,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1274,
								1283
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1340
						],
						"IERC20Metadata": [
							1366
						]
					},
					"id": 1367,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1342,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1367,
							"sourceUnit": 1341,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1343,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1340,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1346,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "306:6:6"
									},
									"id": 1347,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1345,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1366,
							"linearizedBaseContracts": [
								1366,
								1340
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1350,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1366,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1356,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1366,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1362,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1366,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1367,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1274,
								1283
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"KrunalTokenV1.sol": {
				"ast": {
					"absolutePath": "KrunalTokenV1.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1125
						],
						"ERC20Upgradeable": [
							1079
						],
						"IERC20": [
							1340
						],
						"IERC20Errors": [
							1167
						],
						"IERC20Metadata": [
							1366
						],
						"Initializable": [
							462
						],
						"KrunalTokenV1": [
							1466
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 1369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 1080,
							"src": "58:78:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 195,
							"src": "137:75:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 463,
							"src": "213:75:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1372,
										"name": "Initializable",
										"nameLocations": [
											"316:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "316:13:7"
									},
									"id": 1373,
									"nodeType": "InheritanceSpecifier",
									"src": "316:13:7"
								},
								{
									"baseName": {
										"id": 1374,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"331:16:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1079,
										"src": "331:16:7"
									},
									"id": 1375,
									"nodeType": "InheritanceSpecifier",
									"src": "331:16:7"
								},
								{
									"baseName": {
										"id": 1376,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"349:18:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "349:18:7"
									},
									"id": 1377,
									"nodeType": "InheritanceSpecifier",
									"src": "349:18:7"
								}
							],
							"canonicalName": "KrunalTokenV1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1466,
							"linearizedBaseContracts": [
								1466,
								194,
								1079,
								1167,
								1366,
								1340,
								1125,
								462
							],
							"name": "KrunalTokenV1",
							"nameLocation": "299:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1379,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "390:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1466,
									"src": "374:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "374:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "496:146:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1391,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "519:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1392,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "525:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1390,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "506:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "506:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "506:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1396,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "557:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "561:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "557:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1395,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "542:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "542:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "542:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1401,
																"name": "cap_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "586:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "593:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "586:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436170206d757374206265203e2030",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "596:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f",
																"typeString": "literal_string \"Cap must be > 0\""
															},
															"value": "Cap must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd0d33bfd7f72db851f594e13e4a4e799d7da1bc0f149382ac3bccd7498ba36f",
																"typeString": "literal_string \"Cap must be > 0\""
															}
														],
														"id": 1400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "578:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "578:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "578:36:7"
											},
											{
												"expression": {
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1407,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "624:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1408,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "631:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "624:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "624:11:7"
											}
										]
									},
									"functionSelector": "b119490e",
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1387,
												"name": "initializer",
												"nameLocations": [
													"484:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "484:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "484:11:7"
										}
									],
									"name": "initialize",
									"nameLocation": "410:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "435:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "421:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "421:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "455:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "441:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1382,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "471:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "463:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:56:7"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:0:7"
									},
									"scope": 1466,
									"src": "401:241:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "707:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1422,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "725:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "725:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1424,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "741:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "725:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1426,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "751:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "725:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436170206578636565646564",
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "757:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94",
																"typeString": "literal_string \"Cap exceeded\""
															},
															"value": "Cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94",
																"typeString": "literal_string \"Cap exceeded\""
															}
														],
														"id": 1421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "717:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "717:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "717:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1432,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "788:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1433,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "792:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1431,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "782:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "782:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "782:17:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1419,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1418,
												"name": "onlyOwner",
												"nameLocations": [
													"697:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "697:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "697:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "657:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "670:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "662:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "682:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "674:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:28:7"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:0:7"
									},
									"scope": 1466,
									"src": "648:158:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "857:28:7",
										"statements": [
											{
												"expression": {
													"id": 1442,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1379,
													"src": "874:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1441,
												"id": 1443,
												"nodeType": "Return",
												"src": "867:11:7"
											}
										]
									},
									"functionSelector": "355274ea",
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "821:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:2:7"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "848:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:9:7"
									},
									"scope": 1466,
									"src": "812:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "943:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1453,
																"name": "newCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "961:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1454,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "971:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "971:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "961:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e657720636170203c20737570706c79",
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "986:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535",
																"typeString": "literal_string \"New cap < supply\""
															},
															"value": "New cap < supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2f1934b9b0ec89c776dce8957b2e99c5449fc24134b33fa67f5f566c35e7d535",
																"typeString": "literal_string \"New cap < supply\""
															}
														],
														"id": 1452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "953:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "953:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "953:52:7"
											},
											{
												"expression": {
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1460,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "1015:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1461,
														"name": "newCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "1022:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1015:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "1015:13:7"
											}
										]
									},
									"functionSelector": "a7d68896",
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1450,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1449,
												"name": "onlyOwner",
												"nameLocations": [
													"933:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "933:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "933:9:7"
										}
									],
									"name": "updateCap",
									"nameLocation": "900:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "newCap",
												"nameLocation": "918:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "910:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:16:7"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:0:7"
									},
									"scope": 1466,
									"src": "891:144:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1467,
							"src": "290:747:7",
							"usedErrors": [
								30,
								35,
								211,
								214,
								1137,
								1142,
								1147,
								1156,
								1161,
								1166
							],
							"usedEvents": [
								41,
								219,
								1274,
								1283
							]
						}
					],
					"src": "32:1006:7"
				},
				"id": 7
			}
		}
	}
}